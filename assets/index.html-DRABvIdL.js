import{_ as o,c as l,b as p,a as c,d as t,e as n,w as e,r as i,o as r}from"./app-Da9LvgXD.js";const u={};function d(k,a){const s=i("RouteLink");return r(),l("div",null,[p("p",null,[t(s,{to:"/doc/react/@faasjs/namespaces/"},{default:e(()=>a[0]||(a[0]=[n("Documents")])),_:1,__:[0]}),a[2]||(a[2]=n(" / ")),t(s,{to:"/doc/react/"},{default:e(()=>a[1]||(a[1]=[n("@faasjs/react")])),_:1,__:[1]}),a[3]||(a[3]=n(" / OptionalWrapper"))]),a[6]||(a[6]=c(`<h1 id="optionalwrapper" tabindex="-1"><a class="header-anchor" href="#optionalwrapper"><span>OptionalWrapper</span></a></h1><p>A wrapper component that conditionally wraps its children with a provided wrapper component.</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-tsx line-numbers-mode" data-highlighter="prismjs" data-ext="tsx"><pre><code class="language-tsx"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> OptionalWrapper <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/react&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">Wrapper</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> children <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span> children<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactNode <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>wrapper<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">OptionalWrapper</span></span> <span class="token attr-name">condition</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span></span> <span class="token attr-name">Wrapper</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>Wrapper<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Test</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">OptionalWrapper</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="variables" tabindex="-1"><a class="header-anchor" href="#variables"><span>Variables</span></a></h2>`,5)),p("ul",null,[p("li",null,[t(s,{to:"/doc/react/@faasjs/namespaces/OptionalWrapper/variables/displayName.html"},{default:e(()=>a[4]||(a[4]=[n("displayName")])),_:1,__:[4]})]),p("li",null,[t(s,{to:"/doc/react/@faasjs/namespaces/OptionalWrapper/variables/whyDidYouRender.html"},{default:e(()=>a[5]||(a[5]=[n("whyDidYouRender")])),_:1,__:[5]})])])])}const v=o(u,[["render",d]]),g=JSON.parse('{"path":"/doc/react/@faasjs/namespaces/OptionalWrapper/","title":"OptionalWrapper","lang":"en","frontmatter":{},"git":{},"filePathRelative":"doc/react/@faasjs/namespaces/OptionalWrapper/README.md"}');export{v as comp,g as data};
