import{_ as l,r as o,o as u,c as i,a as s,d as a,w as e,b as n,e as p}from"./app-Ph9XU2oP.js";const r={},d=p('<h1 id="function-usesignalstate" tabindex="-1"><a class="header-anchor" href="#function-usesignalstate"><span>Function: useSignalState()</span></a></h1><blockquote><p><strong>useSignalState</strong>&lt;<code>T</code>&gt;(<code>initialValue</code>, <code>options</code>): readonly [<code>T</code>, (<code>changes</code>) =&gt; <code>void</code>]</p></blockquote>',2),k={href:"https://preactjs.com/guide/v10/signals",target:"_blank",rel:"noopener noreferrer"},g=p(`<div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useSignalState<span class="token punctuation">,</span> useSignalEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/react&#39;</span>

<span class="token keyword">function</span> <span class="token function">App</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useSignalState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> debugName<span class="token operator">:</span> <span class="token string">&#39;count&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">useSignalEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCount</span><span class="token punctuation">(</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">+</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type parameters</span></a></h2><p>• <strong>T</strong> = <code>any</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><p>• <strong>initialValue</strong>: <code>T</code></p>`,5),m=s("strong",null,"options",-1),h=s("code",null,"SignalOptions",-1),v=s("code",null,"{}",-1),_=s("h2",{id:"returns",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#returns"},[s("span",null,"Returns")])],-1),f=s("p",null,[n("readonly ["),s("code",null,"T"),n(", ("),s("code",null,"changes"),n(") => "),s("code",null,"void"),n("]")],-1);function b(x,S){const t=o("RouterLink"),c=o("ExternalLinkIcon");return u(),i("div",null,[s("p",null,[a(t,{to:"/doc/react/"},{default:e(()=>[n("Documents")]),_:1}),n(" / "),a(t,{to:"/doc/react/"},{default:e(()=>[n("@faasjs/react")]),_:1}),n(" / useSignalState")]),d,s("p",null,[n("Create a "),s("a",k,[n("signal"),a(c)]),n(" like useState.")]),g,s("p",null,[n("• "),m,n(": "),a(t,{to:"/doc/react/type-aliases/SignalOptions.html"},{default:e(()=>[h]),_:1}),n("= "),v]),_,f])}const w=l(r,[["render",b],["__file","useSignalState.html.vue"]]);export{w as default};
