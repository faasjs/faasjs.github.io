import{_ as d,c,b as s,d as t,e as a,f as o,a as r,r as i,o as l}from"./app-DsV01JBz.js";const u={};function p(h,e){const n=i("RouteLink");return l(),c("div",null,[s("p",null,[t(n,{to:"/doc/cloud_function/"},{default:a(()=>e[0]||(e[0]=[o("Documents")])),_:1}),e[2]||(e[2]=o(" / ")),t(n,{to:"/doc/cloud_function/"},{default:a(()=>e[1]||(e[1]=[o("@faasjs/cloud_function")])),_:1}),e[3]||(e[3]=o(" / CloudFunctionAdapter"))]),e[4]||(e[4]=r('<h1 id="type-alias-cloudfunctionadapter" tabindex="-1"><a class="header-anchor" href="#type-alias-cloudfunctionadapter"><span>Type Alias: CloudFunctionAdapter</span></a></h1><blockquote><p><strong>CloudFunctionAdapter</strong>: <code>object</code></p></blockquote><h2 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration"><span>Type declaration</span></a></h2><h3 id="invokecloudfunction" tabindex="-1"><a class="header-anchor" href="#invokecloudfunction"><span>invokeCloudFunction()</span></a></h3><blockquote><p><strong>invokeCloudFunction</strong>: (<code>name</code>, <code>data</code>, <code>options</code>?) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><p>• <strong>name</strong>: <code>string</code></p><p>• <strong>data</strong>: <code>any</code></p><p>• <strong>options?</strong>: <code>any</code></p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h3 id="invokesynccloudfunction" tabindex="-1"><a class="header-anchor" href="#invokesynccloudfunction"><span>invokeSyncCloudFunction()</span></a></h3><blockquote><p><strong>invokeSyncCloudFunction</strong>: &lt;<code>TResult</code>&gt;(<code>name</code>, <code>data</code>, <code>options</code>?) =&gt; <code>Promise</code>&lt;<code>TResult</code>&gt;</p></blockquote><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h4><p>• <strong>TResult</strong></p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><p>• <strong>name</strong>: <code>string</code></p><p>• <strong>data</strong>: <code>any</code></p><p>• <strong>options?</strong>: <code>any</code></p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>TResult</code>&gt;</p>',21))])}const g=d(u,[["render",p],["__file","CloudFunctionAdapter.html.vue"]]),m=JSON.parse('{"path":"/doc/cloud_function/type-aliases/CloudFunctionAdapter.html","title":"Type Alias: CloudFunctionAdapter","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type declaration","slug":"type-declaration","link":"#type-declaration","children":[{"level":3,"title":"invokeCloudFunction()","slug":"invokecloudfunction","link":"#invokecloudfunction","children":[]},{"level":3,"title":"invokeSyncCloudFunction()","slug":"invokesynccloudfunction","link":"#invokesynccloudfunction","children":[]}]}],"git":{"updatedTime":null},"filePathRelative":"doc/cloud_function/type-aliases/CloudFunctionAdapter.md"}');export{g as comp,m as data};
