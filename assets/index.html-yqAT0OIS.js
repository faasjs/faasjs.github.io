import{_ as c,r as l,o as r,c as i,a as t,d as e,b as a,w as o,e as d}from"./app-rN3UmXpe.js";const p={},h=t("h1",{id:"faasjs-react",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#faasjs-react","aria-hidden":"true"},"#"),a(" @faasjs/react")],-1),u={href:"https://github.com/faasjs/faasjs/blob/main/packages/faasjs/react/LICENSE",target:"_blank",rel:"noopener noreferrer"},g=t("img",{src:"https://img.shields.io/npm/l/@faasjs/react.svg",alt:"License: MIT"},null,-1),f={href:"https://www.npmjs.com/package/@faasjs/react",target:"_blank",rel:"noopener noreferrer"},y=t("img",{src:"https://img.shields.io/npm/v/@faasjs/react/stable.svg",alt:"NPM Stable Version"},null,-1),x={href:"https://www.npmjs.com/package/@faasjs/react",target:"_blank",rel:"noopener noreferrer"},k=t("img",{src:"https://img.shields.io/npm/v/@faasjs/react/beta.svg",alt:"NPM Beta Version"},null,-1),m=t("p",null,"React plugin for FaasJS.",-1),b={href:"https://swr.vercel.app",target:"_blank",rel:"noopener noreferrer"},_={href:"https://tanstack.com/query",target:"_blank",rel:"noopener noreferrer"},v={href:"https://faasjs.com/doc/browser",target:"_blank",rel:"noopener noreferrer"},D=t("code",null,"@faasjs/browser",-1),F=d(`<h2 id="install" tabindex="-1"><a class="header-anchor" href="#install" aria-hidden="true">#</a> Install</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> @faasjs/react
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><ol><li>Initialize <a href="#faasreactclient">FaasReactClient</a></li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> FaasReactClient <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/react&#39;</span>

<span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token function">FaasReactClient</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  domain<span class="token operator">:</span> <span class="token string">&#39;localhost:8080/api&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>Use <a href="#faas">faas</a>, <a href="#usefaas">useFaas</a> or <a href="#faasdatawrapper">FaasDataWrapper</a>.</li></ol>`,6),P={id:"usage-with-preact-signal-react",tabindex:"-1"},R=t("a",{class:"header-anchor",href:"#usage-with-preact-signal-react","aria-hidden":"true"},"#",-1),O={href:"https://github.com/preactjs/signals/blob/main/packages/react/README.md",target:"_blank",rel:"noopener noreferrer"},T=d(`<ol><li><code>npm i --save-dev @preact/signals-react-transform</code></li><li>Add <code>@preact/signals-react-transform</code> to babel config:</li></ol><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;plugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;module:@preact/signals-react-transform&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>Add <code>import &#39;@preact/signals-react/auto&#39;</code> to your test files.</li></ol><h2 id="modules" tabindex="-1"><a class="header-anchor" href="#modules" aria-hidden="true">#</a> Modules</h2><h3 id="classes" tabindex="-1"><a class="header-anchor" href="#classes" aria-hidden="true">#</a> Classes</h3>`,5),j=t("h3",{id:"interfaces",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#interfaces","aria-hidden":"true"},"#"),a(" Interfaces")],-1),w=d('<h3 id="type-aliases" tabindex="-1"><a class="header-anchor" href="#type-aliases" aria-hidden="true">#</a> Type Aliases</h3><ul><li><a href="#errorchildrenprops">ErrorChildrenProps</a></li><li><a href="#faasaction">FaasAction</a></li><li><a href="#faasdata">FaasData</a></li><li><a href="#faasdatainjection">FaasDataInjection</a></li><li><a href="#faasdatawrapperprops">FaasDataWrapperProps</a></li><li><a href="#faasparams">FaasParams</a></li><li><a href="#faasreactclientinstance">FaasReactClientInstance</a></li><li><a href="#faasreactclientoptions">FaasReactClientOptions</a></li><li><a href="#options">Options</a></li><li><a href="#responseheaders">ResponseHeaders</a></li><li><a href="#signaloptions">SignalOptions</a></li><li><a href="#usefaasoptions">useFaasOptions</a></li></ul><h3 id="functions" tabindex="-1"><a class="header-anchor" href="#functions" aria-hidden="true">#</a> Functions</h3><ul><li><a href="#faasdatawrapper">FaasDataWrapper</a></li><li><a href="#faasreactclient">FaasReactClient</a></li><li><a href="#faas">faas</a></li><li><a href="#getclient">getClient</a></li><li><a href="#signal">signal</a></li><li><a href="#usefaas">useFaas</a></li><li><a href="#usesignalstate">useSignalState</a></li></ul><h2 id="type-aliases-1" tabindex="-1"><a class="header-anchor" href="#type-aliases-1" aria-hidden="true">#</a> Type Aliases</h2><h3 id="errorchildrenprops" tabindex="-1"><a class="header-anchor" href="#errorchildrenprops" aria-hidden="true">#</a> ErrorChildrenProps</h3><p>Ƭ <strong>ErrorChildrenProps</strong>: <code>Object</code></p><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>error?</code></td><td style="text-align:left;"><code>Error</code></td></tr><tr><td style="text-align:left;"><code>errorDescription?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>errorMessage?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>info?</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><hr><h3 id="faasaction" tabindex="-1"><a class="header-anchor" href="#faasaction" aria-hidden="true">#</a> FaasAction</h3><p>Ƭ <strong>FaasAction</strong>: <code>FaasActionPaths</code> | <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</p><hr><h3 id="faasdata" tabindex="-1"><a class="header-anchor" href="#faasdata" aria-hidden="true">#</a> FaasData</h3><p>Ƭ <strong>FaasData</strong>&lt;<code>T</code>&gt;: <code>T</code> extends <code>FaasActionPaths</code> ? <code>FaasActions</code>[<code>T</code>][<code>&quot;Data&quot;</code>] : <code>T</code></p><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><hr><h3 id="faasdatainjection" tabindex="-1"><a class="header-anchor" href="#faasdatainjection" aria-hidden="true">#</a> FaasDataInjection</h3><p>Ƭ <strong>FaasDataInjection</strong>&lt;<code>Data</code>&gt;: <code>Object</code></p><p>Injects FaasData props.</p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Data</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="type-declaration-1" tabindex="-1"><a class="header-anchor" href="#type-declaration-1" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>action</code></td><td style="text-align:left;"><code>string</code> | <code>any</code></td></tr><tr><td style="text-align:left;"><code>data</code></td><td style="text-align:left;"><code>Data</code></td></tr><tr><td style="text-align:left;"><code>error</code></td><td style="text-align:left;"><code>any</code></td></tr><tr><td style="text-align:left;"><code>loading</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>params</code></td><td style="text-align:left;"><code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</td></tr><tr><td style="text-align:left;"><code>promise</code></td><td style="text-align:left;"><code>Promise</code>&lt;<code>Response</code>&lt;<code>Data</code>&gt;&gt;</td></tr><tr><td style="text-align:left;"><code>reloadTimes</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>setData</code></td><td style="text-align:left;"><code>React.Dispatch</code>&lt;<code>React.SetStateAction</code>&lt;<code>Data</code>&gt;&gt;</td></tr><tr><td style="text-align:left;"><code>setError</code></td><td style="text-align:left;"><code>React.Dispatch</code>&lt;<code>React.SetStateAction</code>&lt;<code>any</code>&gt;&gt;</td></tr><tr><td style="text-align:left;"><code>setLoading</code></td><td style="text-align:left;"><code>React.Dispatch</code>&lt;<code>React.SetStateAction</code>&lt;<code>boolean</code>&gt;&gt;</td></tr><tr><td style="text-align:left;"><code>setPromise</code></td><td style="text-align:left;"><code>React.Dispatch</code>&lt;<code>React.SetStateAction</code>&lt;<code>Promise</code>&lt;<code>Response</code>&lt;<code>Data</code>&gt;&gt;&gt;&gt;</td></tr><tr><td style="text-align:left;"><code>reload</code></td><td style="text-align:left;">(<code>params?</code>: <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;) =&gt; <code>Promise</code>&lt;<code>any</code>&gt;</td></tr></tbody></table><hr><h3 id="faasdatawrapperprops" tabindex="-1"><a class="header-anchor" href="#faasdatawrapperprops" aria-hidden="true">#</a> FaasDataWrapperProps</h3><p>Ƭ <strong>FaasDataWrapperProps</strong>&lt;<code>PathOrData</code>&gt;: <code>Object</code></p><h4 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PathOrData</code></td><td style="text-align:left;">extends <code>FaasAction</code></td></tr></tbody></table><h4 id="type-declaration-2" tabindex="-1"><a class="header-anchor" href="#type-declaration-2" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>action</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>children?</code></td><td style="text-align:left;"><code>React.ReactElement</code>&lt;<code>Partial</code>&lt;<a href="#faasdatainjection"><code>FaasDataInjection</code></a>&gt;&gt;</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>data?</code></td><td style="text-align:left;"><code>FaasData</code>&lt;<code>PathOrData</code>&gt;</td><td style="text-align:left;">use custom data, should work with setData</td></tr><tr><td style="text-align:left;"><code>fallback?</code></td><td style="text-align:left;"><code>JSX.Element</code> | <code>false</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>params?</code></td><td style="text-align:left;"><code>FaasParams</code>&lt;<code>PathOrData</code>&gt;</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>setData?</code></td><td style="text-align:left;"><code>React.Dispatch</code>&lt;<code>React.SetStateAction</code>&lt;<code>FaasData</code>&lt;<code>PathOrData</code>&gt;&gt;&gt;</td><td style="text-align:left;">use custom setData, should work with data</td></tr><tr><td style="text-align:left;"><code>onDataChange?</code></td><td style="text-align:left;">(<code>args</code>: <a href="#faasdatainjection"><code>FaasDataInjection</code></a>&lt;<code>FaasData</code>&lt;<code>PathOrData</code>&gt;&gt;) =&gt; <code>void</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>render?</code></td><td style="text-align:left;">(<code>args</code>: <a href="#faasdatainjection"><code>FaasDataInjection</code></a>&lt;<code>FaasData</code>&lt;<code>PathOrData</code>&gt;&gt;) =&gt; <code>Element</code> | <code>Element</code>[]</td><td style="text-align:left;">-</td></tr></tbody></table><hr><h3 id="faasparams" tabindex="-1"><a class="header-anchor" href="#faasparams" aria-hidden="true">#</a> FaasParams</h3><p>Ƭ <strong>FaasParams</strong>&lt;<code>T</code>&gt;: <code>T</code> extends <code>FaasActionPaths</code> ? <code>FaasActions</code>[<code>T</code>][<code>&quot;Params&quot;</code>] : <code>any</code></p><h4 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><hr><h3 id="faasreactclientinstance" tabindex="-1"><a class="header-anchor" href="#faasreactclientinstance" aria-hidden="true">#</a> FaasReactClientInstance</h3><p>Ƭ <strong>FaasReactClientInstance</strong>: <code>Object</code></p><h4 id="type-declaration-3" tabindex="-1"><a class="header-anchor" href="#type-declaration-3" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>faas</code></td><td style="text-align:left;">&lt;PathOrData&gt;(<code>action</code>: <code>string</code> | <code>PathOrData</code>, <code>params</code>: <code>FaasParams</code>&lt;<code>PathOrData</code>&gt;) =&gt; <code>Promise</code>&lt;<code>Response</code>&lt;<code>FaasData</code>&lt;<code>PathOrData</code>&gt;&gt;&gt;</td></tr><tr><td style="text-align:left;"><code>id</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>useFaas</code></td><td style="text-align:left;">&lt;PathOrData&gt;(<code>action</code>: <code>string</code> | <code>PathOrData</code>, <code>defaultParams</code>: <code>FaasParams</code>&lt;<code>PathOrData</code>&gt;, <code>options?</code>: <a href="#usefaasoptions"><code>useFaasOptions</code></a>&lt;<code>PathOrData</code>&gt;) =&gt; <a href="#faasdatainjection"><code>FaasDataInjection</code></a>&lt;<code>FaasData</code>&lt;<code>PathOrData</code>&gt;&gt;</td></tr><tr><td style="text-align:left;"><code>FaasDataWrapper</code></td><td style="text-align:left;">&lt;PathOrData&gt;(<code>props</code>: <a href="#faasdatawrapperprops"><code>FaasDataWrapperProps</code></a>&lt;<code>PathOrData</code>&gt;) =&gt; <code>Element</code></td></tr></tbody></table><hr><h3 id="faasreactclientoptions" tabindex="-1"><a class="header-anchor" href="#faasreactclientoptions" aria-hidden="true">#</a> FaasReactClientOptions</h3><p>Ƭ <strong>FaasReactClientOptions</strong>: <code>Object</code></p><h4 id="type-declaration-4" tabindex="-1"><a class="header-anchor" href="#type-declaration-4" aria-hidden="true">#</a> Type declaration</h4>',46),S=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),C=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"domain")]),t("td",{style:{"text-align":"left"}},[t("code",null,"string")])],-1),E=t("td",{style:{"text-align":"left"}},[t("code",null,"onError?")],-1),N={style:{"text-align":"left"}},I=t("code",null,"action",-1),A=t("code",null,"string",-1),q=t("code",null,"params",-1),W=t("code",null,"Record",-1),V=t("code",null,"string",-1),B=t("code",null,"any",-1),L=t("code",null,"res",-1),M=t("code",null,"ResponseError",-1),J=t("code",null,"Promise",-1),H=t("code",null,"void",-1),U=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"options?")]),t("td",{style:{"text-align":"left"}},[t("a",{href:"#options"},[t("code",null,"Options")])])],-1),X=t("hr",null,null,-1),z=t("h3",{id:"options",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#options","aria-hidden":"true"},"#"),a(" Options")],-1),Q=t("strong",null,"Options",-1),G=t("code",null,"RequestInit",-1),K=t("code",null,"beforeRequest?",-1),Y=t("code",null,"{ action, params, options, }",-1),Z=t("code",null,"action",-1),$=t("code",null,"string",-1),tt=t("code",null,"options",-1),at=t("a",{href:"#options"},[t("code",null,"Options")],-1),et=t("code",null,"params",-1),st=t("code",null,"Record",-1),nt=t("code",null,"string",-1),ot=t("code",null,"any",-1),dt=t("code",null,"Promise",-1),lt=t("code",null,"void",-1),ct=t("code",null,"headers?",-1),rt=t("code",null,"[key: string]",-1),it=t("code",null,"string",-1),pt=t("code",null,"request?",-1),ht=t("code",null,"url",-1),ut=t("code",null,"string",-1),gt=t("code",null,"options",-1),ft=t("a",{href:"#options"},[t("code",null,"Options")],-1),yt=t("code",null,"Promise",-1),xt=t("code",null,"Response",-1),kt=t("a",{href:"#faasdata"},[t("code",null,"FaasData")],-1),mt=t("code",null,"PathOrData",-1),bt=d(`<hr><h3 id="responseheaders" tabindex="-1"><a class="header-anchor" href="#responseheaders" aria-hidden="true">#</a> ResponseHeaders</h3><p>Ƭ <strong>ResponseHeaders</strong>: <code>Object</code></p><h4 id="index-signature" tabindex="-1"><a class="header-anchor" href="#index-signature" aria-hidden="true">#</a> Index signature</h4><p>▪ [key: <code>string</code>]: <code>string</code></p><hr><h3 id="signaloptions" tabindex="-1"><a class="header-anchor" href="#signaloptions" aria-hidden="true">#</a> SignalOptions</h3><p>Ƭ <strong>SignalOptions</strong>: <code>Object</code></p><h4 id="type-declaration-5" tabindex="-1"><a class="header-anchor" href="#type-declaration-5" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>debugName?</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><hr><h3 id="usefaasoptions" tabindex="-1"><a class="header-anchor" href="#usefaasoptions" aria-hidden="true">#</a> useFaasOptions</h3><p>Ƭ <strong>useFaasOptions</strong>&lt;<code>PathOrData</code>&gt;: <code>Object</code></p><h4 id="type-parameters-4" tabindex="-1"><a class="header-anchor" href="#type-parameters-4" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PathOrData</code></td><td style="text-align:left;">extends <code>FaasAction</code></td></tr></tbody></table><h4 id="type-declaration-6" tabindex="-1"><a class="header-anchor" href="#type-declaration-6" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>data?</code></td><td style="text-align:left;"><code>FaasData</code>&lt;<code>PathOrData</code>&gt;</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>debounce?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">send the last request after milliseconds</td></tr><tr><td style="text-align:left;"><code>params?</code></td><td style="text-align:left;"><code>FaasParams</code>&lt;<code>PathOrData</code>&gt;</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>setData?</code></td><td style="text-align:left;"><code>React.Dispatch</code>&lt;<code>React.SetStateAction</code>&lt;<code>FaasData</code>&lt;<code>PathOrData</code>&gt;&gt;&gt;</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>skip?</code></td><td style="text-align:left;"><code>boolean</code> | (<code>params</code>: <code>FaasParams</code>&lt;<code>PathOrData</code>&gt;) =&gt; <code>boolean</code></td><td style="text-align:left;">if skip is true, will not send request</td></tr></tbody></table><h2 id="functions-1" tabindex="-1"><a class="header-anchor" href="#functions-1" aria-hidden="true">#</a> Functions</h2><h3 id="faasdatawrapper" tabindex="-1"><a class="header-anchor" href="#faasdatawrapper" aria-hidden="true">#</a> FaasDataWrapper</h3><p>▸ <strong>FaasDataWrapper</strong>&lt;<code>PathOrData</code>&gt;(<code>props</code>): <code>JSX.Element</code></p><p>A data wrapper for react components</p><h4 id="type-parameters-5" tabindex="-1"><a class="header-anchor" href="#type-parameters-5" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PathOrData</code></td><td style="text-align:left;">extends <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</td></tr></tbody></table><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>props</code></td><td style="text-align:left;"><a href="#faasdatawrapperprops"><code>FaasDataWrapperProps</code></a>&lt;<code>PathOrData</code>&gt;</td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>JSX.Element</code></p><p><strong><code>Example</code></strong></p><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token operator">&lt;</span>FaasDataWrapper<span class="token operator">&lt;</span><span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token builtin">string</span>
  title<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span><span class="token operator">&gt;</span>
  action<span class="token operator">=</span><span class="token string">&#39;post/get&#39;</span>
  params<span class="token operator">=</span><span class="token punctuation">{</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
  render<span class="token operator">=</span><span class="token punctuation">{</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> data <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span> data<span class="token punctuation">.</span>title <span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">}</span>
<span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="faasreactclient" tabindex="-1"><a class="header-anchor" href="#faasreactclient" aria-hidden="true">#</a> FaasReactClient</h3><p>▸ <strong>FaasReactClient</strong>(<code>«destructured»</code>): <a href="#faasreactclientinstance"><code>FaasReactClientInstance</code></a></p><p>Before use faas, you should initialize a FaasReactClient.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>«destructured»</code></td><td style="text-align:left;"><a href="#faasreactclientoptions"><code>FaasReactClientOptions</code></a></td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><a href="#faasreactclientinstance"><code>FaasReactClientInstance</code></a></p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token function">FaasReactClient</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  domain<span class="token operator">:</span> <span class="token string">&#39;localhost:8080/api&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="faas" tabindex="-1"><a class="header-anchor" href="#faas" aria-hidden="true">#</a> faas</h3>`,41),_t=t("strong",null,"faas",-1),vt=t("code",null,"PathOrData",-1),Dt=t("code",null,"action",-1),Ft=t("code",null,"params",-1),Pt=t("code",null,"Promise",-1),Rt=t("code",null,"Response",-1),Ot=t("a",{href:"#faasdata"},[t("code",null,"FaasData")],-1),Tt=t("code",null,"PathOrData",-1),jt=d('<p>Request faas server</p><h4 id="type-parameters-6" tabindex="-1"><a class="header-anchor" href="#type-parameters-6" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PathOrData</code></td><td style="text-align:left;">extends <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</td></tr></tbody></table><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>action</code></td><td style="text-align:left;"><code>string</code> | <code>PathOrData</code></td><td style="text-align:left;">{string} action name</td></tr><tr><td style="text-align:left;"><code>params</code></td><td style="text-align:left;"><a href="#faasparams"><code>FaasParams</code></a>&lt;<code>PathOrData</code>&gt;</td><td style="text-align:left;">{object} action params</td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4>',6),wt=t("code",null,"Promise",-1),St=t("code",null,"Response",-1),Ct=t("a",{href:"#faasdata"},[t("code",null,"FaasData")],-1),Et=t("code",null,"PathOrData",-1),Nt=d(`<p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token generic-function"><span class="token function">faas</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;post/get&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>title<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="getclient" tabindex="-1"><a class="header-anchor" href="#getclient" aria-hidden="true">#</a> getClient</h3><p>▸ <strong>getClient</strong>(<code>domain?</code>): <a href="#faasreactclientinstance"><code>FaasReactClientInstance</code></a></p><p>Get FaasReactClient instance</p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>domain?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">{string} empty string for default domain</td></tr></tbody></table><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4><p><a href="#faasreactclientinstance"><code>FaasReactClientInstance</code></a></p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">getClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// or</span>
<span class="token function">getClient</span><span class="token punctuation">(</span><span class="token string">&#39;another-domain&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="signal" tabindex="-1"><a class="header-anchor" href="#signal" aria-hidden="true">#</a> signal</h3><p>▸ <strong>signal</strong>&lt;<code>T</code>&gt;(<code>initialValue</code>, <code>options?</code>): <code>Signal</code>&lt;<code>T</code>&gt;</p>`,15),It={href:"https://preactjs.com/guide/v10/signals",target:"_blank",rel:"noopener noreferrer"},At=d(`<h4 id="type-parameters-7" tabindex="-1"><a class="header-anchor" href="#type-parameters-7" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>initialValue</code></td><td style="text-align:left;"><code>any</code></td></tr><tr><td style="text-align:left;"><code>options</code></td><td style="text-align:left;"><a href="#signaloptions"><code>SignalOptions</code></a></td></tr></tbody></table><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4><p><code>Signal</code>&lt;<code>T</code>&gt;</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> signal <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/react&#39;</span>

<span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">signal</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> debugName<span class="token operator">:</span> <span class="token string">&#39;count&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

count<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="usefaas" tabindex="-1"><a class="header-anchor" href="#usefaas" aria-hidden="true">#</a> useFaas</h3><p>▸ <strong>useFaas</strong>&lt;<code>PathOrData</code>&gt;(<code>action</code>, <code>defaultParams</code>, <code>options?</code>): <a href="#faasdatainjection"><code>FaasDataInjection</code></a>&lt;<a href="#faasdata"><code>FaasData</code></a>&lt;<code>PathOrData</code>&gt;&gt;</p><p>Request faas server with React hook</p><h4 id="type-parameters-8" tabindex="-1"><a class="header-anchor" href="#type-parameters-8" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PathOrData</code></td><td style="text-align:left;">extends <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</td></tr></tbody></table><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>action</code></td><td style="text-align:left;"><code>string</code> | <code>PathOrData</code></td><td style="text-align:left;">{string} action name</td></tr><tr><td style="text-align:left;"><code>defaultParams</code></td><td style="text-align:left;"><a href="#faasparams"><code>FaasParams</code></a>&lt;<code>PathOrData</code>&gt;</td><td style="text-align:left;">{object} initial action params</td></tr><tr><td style="text-align:left;"><code>options?</code></td><td style="text-align:left;"><a href="#usefaasoptions"><code>useFaasOptions</code></a>&lt;<code>PathOrData</code>&gt;</td><td style="text-align:left;">-</td></tr></tbody></table><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h4><p><a href="#faasdatainjection"><code>FaasDataInjection</code></a>&lt;<a href="#faasdata"><code>FaasData</code></a>&lt;<code>PathOrData</code>&gt;&gt;</p><p><strong><code>Example</code></strong></p><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">function</span> <span class="token function">Post</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> id <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useFaas</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;post/get&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> id <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>data<span class="token punctuation">.</span>title<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="usesignalstate" tabindex="-1"><a class="header-anchor" href="#usesignalstate" aria-hidden="true">#</a> useSignalState</h3><p>▸ <strong>useSignalState</strong>&lt;<code>T</code>&gt;(<code>initialValue</code>, <code>options?</code>): readonly [<code>T</code>, (<code>changes</code>: <code>SetStateAction</code>&lt;<code>T</code>&gt;) =&gt; <code>void</code>]</p>`,23),qt={href:"https://preactjs.com/guide/v10/signals",target:"_blank",rel:"noopener noreferrer"},Wt=d(`<div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useSignalState<span class="token punctuation">,</span> useSignalEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/react&#39;</span>

<span class="token keyword">function</span> <span class="token function">App</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useSignalState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> debugName<span class="token operator">:</span> <span class="token string">&#39;count&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">useSignalEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCount</span><span class="token punctuation">(</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">+</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="type-parameters-9" tabindex="-1"><a class="header-anchor" href="#type-parameters-9" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>initialValue</code></td><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>options</code></td><td style="text-align:left;"><a href="#signaloptions"><code>SignalOptions</code></a></td></tr></tbody></table><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4><p>readonly [<code>T</code>, (<code>changes</code>: <code>SetStateAction</code>&lt;<code>T</code>&gt;) =&gt; <code>void</code>]</p>`,7);function Vt(Bt,Lt){const s=l("ExternalLinkIcon"),n=l("RouterLink");return r(),i("div",null,[h,t("p",null,[t("a",u,[g,e(s)]),t("a",f,[y,e(s)]),t("a",x,[k,e(s)])]),m,t("p",null,[t("strong",null,[a("If you use "),t("a",b,[a("SWR"),e(s)]),a(" or "),t("a",_,[a("React Query / TanStack Query"),e(s)]),a(", please use "),t("a",v,[D,e(s)]),a(" directly.")])]),F,t("h2",P,[R,a(" Usage with "),t("a",O,[a("@preact/signal-react"),e(s)])]),T,t("ul",null,[t("li",null,[e(n,{to:"/doc/react/classes/ErrorBoundary.html"},{default:o(()=>[a("ErrorBoundary")]),_:1})]),t("li",null,[e(n,{to:"/doc/react/classes/Response.html"},{default:o(()=>[a("Response")]),_:1})]),t("li",null,[e(n,{to:"/doc/react/classes/ResponseError.html"},{default:o(()=>[a("ResponseError")]),_:1})])]),j,t("ul",null,[t("li",null,[e(n,{to:"/doc/react/interfaces/ErrorBoundaryProps.html"},{default:o(()=>[a("ErrorBoundaryProps")]),_:1})])]),w,t("table",null,[S,t("tbody",null,[C,t("tr",null,[E,t("td",N,[a("("),I,a(": "),A,a(", "),q,a(": "),W,a("<"),V,a(", "),B,a(">) => ("),L,a(": "),e(n,{to:"/doc/react/classes/ResponseError.html"},{default:o(()=>[M]),_:1}),a(") => "),J,a("<"),H,a(">")])]),U])]),X,z,t("p",null,[a("Ƭ "),Q,a(": "),G,a(" & { "),K,a(": ("),Y,a(": { "),Z,a(": "),$,a(" ; "),tt,a(": "),at,a(" ; "),et,a(": "),st,a("<"),nt,a(", "),ot,a("> }) => "),dt,a("<"),lt,a("> ; "),ct,a(": { "),rt,a(": "),it,a("; } ; "),pt,a(": <PathOrData>("),ht,a(": "),ut,a(", "),gt,a(": "),ft,a(") => "),yt,a("<"),e(n,{to:"/doc/react/classes/Response.html"},{default:o(()=>[xt]),_:1}),a("<"),kt,a("<"),mt,a(">>> }")]),bt,t("p",null,[a("▸ "),_t,a("<"),vt,a(">("),Dt,a(", "),Ft,a("): "),Pt,a("<"),e(n,{to:"/doc/react/classes/Response.html"},{default:o(()=>[Rt]),_:1}),a("<"),Ot,a("<"),Tt,a(">>>")]),jt,t("p",null,[wt,a("<"),e(n,{to:"/doc/react/classes/Response.html"},{default:o(()=>[St]),_:1}),a("<"),Ct,a("<"),Et,a(">>>")]),Nt,t("p",null,[a("Create a "),t("a",It,[a("signal"),e(s)]),a(" with options")]),At,t("p",null,[a("Create a "),t("a",qt,[a("signal"),e(s)]),a(" like useState.")]),Wt])}const Jt=c(p,[["render",Vt],["__file","index.html.vue"]]);export{Jt as default};
