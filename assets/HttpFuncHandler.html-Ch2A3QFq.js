import{_ as s,c,b as n,a as r,d as o,e as t,w as d,r as p,o as i}from"./app-AY6MtJTB.js";const l={};function h(m,e){const a=p("RouteLink");return i(),c("div",null,[n("p",null,[o(a,{to:"/doc/http/"},{default:d(()=>[...e[0]||(e[0]=[t("Documents",-1)])]),_:1}),e[2]||(e[2]=t(" / ",-1)),o(a,{to:"/doc/http/"},{default:d(()=>[...e[1]||(e[1]=[t("@faasjs/http",-1)])]),_:1}),e[3]||(e[3]=t(" / HttpFuncHandler",-1))]),e[4]||(e[4]=r('<h1 id="type-alias-httpfunchandler-tparams-tcookie-tsession-tresult" tabindex="-1"><a class="header-anchor" href="#type-alias-httpfunchandler-tparams-tcookie-tsession-tresult"><span>Type Alias: HttpFuncHandler()&lt;TParams, TCookie, TSession, TResult&gt;</span></a></h1><blockquote><p><strong>HttpFuncHandler</strong>&lt;<code>TParams</code>, <code>TCookie</code>, <code>TSession</code>, <code>TResult</code>&gt; = (<code>data</code>) =&gt; <code>Promise</code>&lt;<code>TResult</code>&gt;</p></blockquote><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="tparams" tabindex="-1"><a class="header-anchor" href="#tparams"><span>TParams</span></a></h3><p><code>TParams</code> <em>extends</em> <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; = <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</p><h3 id="tcookie" tabindex="-1"><a class="header-anchor" href="#tcookie"><span>TCookie</span></a></h3><p><code>TCookie</code> <em>extends</em> <code>Record</code>&lt;<code>string</code>, <code>string</code>&gt; = <code>Record</code>&lt;<code>string</code>, <code>string</code>&gt;</p><h3 id="tsession" tabindex="-1"><a class="header-anchor" href="#tsession"><span>TSession</span></a></h3><p><code>TSession</code> <em>extends</em> <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; = <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</p><h3 id="tresult" tabindex="-1"><a class="header-anchor" href="#tresult"><span>TResult</span></a></h3><p><code>TResult</code> = <code>any</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="data" tabindex="-1"><a class="header-anchor" href="#data"><span>data</span></a></h3><p><code>InvokeData</code>&lt;{[<code>key</code>: <code>string</code>]: <code>any</code>; <code>params?</code>: <code>TParams</code>; }&gt; &amp; <code>object</code></p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>Promise</code>&lt;<code>TResult</code>&gt;</p>',16))])}const T=s(l,[["render",h]]),g=JSON.parse('{"path":"/doc/http/type-aliases/HttpFuncHandler.html","title":"Type Alias: HttpFuncHandler()<TParams, TCookie, TSession, TResult>","lang":"en","frontmatter":{},"git":{},"filePathRelative":"doc/http/type-aliases/HttpFuncHandler.md"}');export{T as comp,g as data};
