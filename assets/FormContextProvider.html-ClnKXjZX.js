import{_ as i,c as o,b as a,d as e,e as p,f as s,a as l,r,o as c}from"./app-B_Qfx6X3.js";const u={};function d(m,n){const t=r("RouteLink");return c(),o("div",null,[a("p",null,[e(t,{to:"/doc/react/"},{default:p(()=>n[0]||(n[0]=[s("Documents")])),_:1}),n[2]||(n[2]=s(" / ")),e(t,{to:"/doc/react/"},{default:p(()=>n[1]||(n[1]=[s("@faasjs/react")])),_:1}),n[3]||(n[3]=s(" / FormContextProvider"))]),n[36]||(n[36]=l('<h1 id="function-formcontextprovider" tabindex="-1"><a class="header-anchor" href="#function-formcontextprovider"><span>Function: FormContextProvider()</span></a></h1><blockquote><p><strong>FormContextProvider</strong>&lt;<code>NewT</code>&gt;(<code>props</code>): <code>ReactNode</code></p></blockquote><p>The provider component of the splitting context.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2>',4)),a("p",null,[n[10]||(n[10]=s("â€¢ ")),n[11]||(n[11]=a("strong",null,"NewT",-1)),n[12]||(n[12]=s()),n[13]||(n[13]=a("em",null,"extends",-1)),n[14]||(n[14]=s()),e(t,{to:"/doc/react/type-aliases/FormContextProps.html"},{default:p(()=>n[4]||(n[4]=[a("code",null,"FormContextProps",-1)])),_:1}),n[15]||(n[15]=s("<")),n[16]||(n[16]=a("code",null,"Record",-1)),n[17]||(n[17]=s("<")),n[18]||(n[18]=a("code",null,"string",-1)),n[19]||(n[19]=s(", ")),n[20]||(n[20]=a("code",null,"any",-1)),n[21]||(n[21]=s(">, ")),e(t,{to:"/doc/react/type-aliases/FormElementTypes.html"},{default:p(()=>n[5]||(n[5]=[a("code",null,"FormElementTypes",-1)])),_:1}),n[22]||(n[22]=s(", ")),e(t,{to:"/doc/react/type-aliases/FormRules.html"},{default:p(()=>n[6]||(n[6]=[a("code",null,"FormRules",-1)])),_:1}),n[23]||(n[23]=s("> = ")),e(t,{to:"/doc/react/type-aliases/FormContextProps.html"},{default:p(()=>n[7]||(n[7]=[a("code",null,"FormContextProps",-1)])),_:1}),n[24]||(n[24]=s("<")),n[25]||(n[25]=a("code",null,"Record",-1)),n[26]||(n[26]=s("<")),n[27]||(n[27]=a("code",null,"string",-1)),n[28]||(n[28]=s(", ")),n[29]||(n[29]=a("code",null,"any",-1)),n[30]||(n[30]=s(">, ")),e(t,{to:"/doc/react/type-aliases/FormElementTypes.html"},{default:p(()=>n[8]||(n[8]=[a("code",null,"FormElementTypes",-1)])),_:1}),n[31]||(n[31]=s(", ")),e(t,{to:"/doc/react/type-aliases/FormRules.html"},{default:p(()=>n[9]||(n[9]=[a("code",null,"FormRules",-1)])),_:1}),n[32]||(n[32]=s(">"))]),n[37]||(n[37]=l('<h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="props" tabindex="-1"><a class="header-anchor" href="#props"><span>props</span></a></h3><h4 id="children" tabindex="-1"><a class="header-anchor" href="#children"><span>children</span></a></h4><p><code>ReactNode</code></p><h4 id="initializestates" tabindex="-1"><a class="header-anchor" href="#initializestates"><span>initializeStates</span></a></h4><p><code>Partial</code>&lt;<code>NewT</code>&gt;</p>',6)),a("p",null,[n[34]||(n[34]=s("An object containing initial values that will be automatically converted into state variables using ")),e(t,{to:"/doc/react/functions/useSplittingState.html"},{default:p(()=>n[33]||(n[33]=[s("useSplittingState")])),_:1}),n[35]||(n[35]=s(" hook. Each property will create both a state value and its setter following the pattern: value/setValue."))]),n[38]||(n[38]=l(`<p><strong>Example</strong></p><div class="language-tsx line-numbers-mode" data-highlighter="prismjs" data-ext="tsx" data-title="tsx"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Provider</span></span></span>
<span class="line"> <span class="token attr-name">initializeStates</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span></span>
<span class="line">   value<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line"> <span class="token punctuation">}</span><span class="token punctuation">}</span></span></span>
<span class="line"><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">  // Children will have access to: value, setValue</span>
<span class="line"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Provider</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">#### memo</span>
<span class="line"></span>
<span class="line"><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">true</span><span class="token template-punctuation string">\`</span></span> \\<span class="token operator">|</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">any</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">Whether to use memoization <span class="token keyword">for</span> the children<span class="token punctuation">.</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">**</span>Default<span class="token operator">**</span></span>
<span class="line"></span>
<span class="line"><span class="token boolean">false</span></span>
<span class="line"></span>
<span class="line"><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">true</span><span class="token template-punctuation string">\`</span></span><span class="token operator">:</span> memoize the children without dependencies<span class="token punctuation">.</span></span>
<span class="line"><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">any[]</span><span class="token template-punctuation string">\`</span></span><span class="token operator">:</span> memoize the children <span class="token keyword">with</span> specific dependencies<span class="token punctuation">.</span></span>
<span class="line"></span>
<span class="line">#### value</span>
<span class="line"></span>
<span class="line"><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Partial</span><span class="token template-punctuation string">\`</span></span>\\<span class="token operator">&lt;</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">NewT</span><span class="token template-punctuation string">\`</span></span>\\<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line">## Returns</span>
<span class="line"></span>
<span class="line"><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">ReactNode</span><span class="token template-punctuation string">\`</span></span></span>
<span class="line"></span>
<span class="line">## See</span>
<span class="line"></span>
<span class="line">https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>faasjs<span class="token punctuation">.</span>com<span class="token operator">/</span>doc<span class="token operator">/</span>react<span class="token operator">/</span>functions<span class="token operator">/</span>createSplittingContext<span class="token punctuation">.</span>html#provider</span>
<span class="line"></span>
<span class="line">## Example</span>
<span class="line"></span>
<span class="line"><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token template-punctuation string">\`</span></span>\`tsx</span>
<span class="line"><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">[</span>value<span class="token punctuation">,</span> setValue<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Provider</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> value<span class="token punctuation">,</span> setValue <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ReaderComponent</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">WriterComponent</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Provider</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2))])}const v=i(u,[["render",d],["__file","FormContextProvider.html.vue"]]),g=JSON.parse('{"path":"/doc/react/functions/FormContextProvider.html","title":"Function: FormContextProvider()","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type Parameters","slug":"type-parameters","link":"#type-parameters","children":[]},{"level":2,"title":"Parameters","slug":"parameters","link":"#parameters","children":[{"level":3,"title":"props","slug":"props","link":"#props","children":[]}]}],"git":{},"filePathRelative":"doc/react/functions/FormContextProvider.md"}');export{v as comp,g as data};
