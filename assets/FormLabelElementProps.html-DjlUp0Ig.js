import{_ as r,c as d,b as o,d as n,e as s,f as t,a,r as p,o as i}from"./app-DWr1BD6u.js";const m={};function c(u,e){const l=p("RouteLink");return i(),d("div",null,[o("p",null,[n(l,{to:"/doc/react/"},{default:s(()=>e[0]||(e[0]=[t("Documents")])),_:1}),e[2]||(e[2]=t(" / ")),n(l,{to:"/doc/react/"},{default:s(()=>e[1]||(e[1]=[t("@faasjs/react")])),_:1}),e[3]||(e[3]=t(" / FormLabelElementProps"))]),e[12]||(e[12]=a('<h1 id="type-alias-formlabelelementprops-formelements-formrulesoptions" tabindex="-1"><a class="header-anchor" href="#type-alias-formlabelelementprops-formelements-formrulesoptions"><span>Type Alias: FormLabelElementProps&lt;FormElements, FormRulesOptions&gt;</span></a></h1><blockquote><p><strong>FormLabelElementProps</strong>&lt;<code>FormElements</code>, <code>FormRulesOptions</code>&gt;: <code>object</code></p></blockquote><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2>',3)),o("p",null,[e[6]||(e[6]=t("• ")),e[7]||(e[7]=o("strong",null,"FormElements",-1)),e[8]||(e[8]=t()),e[9]||(e[9]=o("em",null,"extends",-1)),e[10]||(e[10]=t()),n(l,{to:"/doc/react/type-aliases/FormElementTypes.html"},{default:s(()=>e[4]||(e[4]=[o("code",null,"FormElementTypes",-1)])),_:1}),e[11]||(e[11]=t(" = ")),n(l,{to:"/doc/react/type-aliases/FormElementTypes.html"},{default:s(()=>e[5]||(e[5]=[o("code",null,"FormElementTypes",-1)])),_:1})]),e[13]||(e[13]=a('<p>• <strong>FormRulesOptions</strong> <em>extends</em> <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; = <code>FormDefaultRulesOptions</code></p><h2 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration"><span>Type declaration</span></a></h2><h3 id="description" tabindex="-1"><a class="header-anchor" href="#description"><span>description?</span></a></h3><blockquote><p><code>optional</code> <strong>description</strong>: <code>ReactNode</code></p></blockquote><h3 id="input" tabindex="-1"><a class="header-anchor" href="#input"><span>input?</span></a></h3><blockquote><p><code>optional</code> <strong>input</strong>: <code>FormInputProps</code>&lt;<code>FormElements</code>&gt;</p></blockquote><h3 id="label" tabindex="-1"><a class="header-anchor" href="#label"><span>Label?</span></a></h3><blockquote><p><code>optional</code> <strong>Label</strong>: <code>FormElements</code>[<code>&quot;Label&quot;</code>]</p></blockquote><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span>name</span></a></h3><blockquote><p><strong>name</strong>: <code>string</code></p></blockquote><h3 id="rules" tabindex="-1"><a class="header-anchor" href="#rules"><span>rules?</span></a></h3><blockquote><p><code>optional</code> <strong>rules</strong>: <code>FormRulesOptions</code></p></blockquote><h3 id="title" tabindex="-1"><a class="header-anchor" href="#title"><span>title?</span></a></h3><blockquote><p><code>optional</code> <strong>title</strong>: <code>ReactNode</code></p></blockquote>',14))])}const h=r(m,[["render",c],["__file","FormLabelElementProps.html.vue"]]),g=JSON.parse('{"path":"/doc/react/type-aliases/FormLabelElementProps.html","title":"Type Alias: FormLabelElementProps<FormElements, FormRulesOptions>","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type Parameters","slug":"type-parameters","link":"#type-parameters","children":[]},{"level":2,"title":"Type declaration","slug":"type-declaration","link":"#type-declaration","children":[{"level":3,"title":"description?","slug":"description","link":"#description","children":[]},{"level":3,"title":"input?","slug":"input","link":"#input","children":[]},{"level":3,"title":"Label?","slug":"label","link":"#label","children":[]},{"level":3,"title":"name","slug":"name","link":"#name","children":[]},{"level":3,"title":"rules?","slug":"rules","link":"#rules","children":[]},{"level":3,"title":"title?","slug":"title","link":"#title","children":[]}]}],"git":{"updatedTime":null},"filePathRelative":"doc/react/type-aliases/FormLabelElementProps.md"}');export{h as comp,g as data};
