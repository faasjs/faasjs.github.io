import{_ as s,r as c,o as r,c as l,a as e,b as d,w as n,d as t,e as o}from"./app-f83c85f2.js";const i={},h=o(`<h1 id="class-funcwarper" tabindex="-1"><a class="header-anchor" href="#class-funcwarper" aria-hidden="true">#</a> Class: FuncWarper</h1><p>Test Wrapper for a func</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> FuncWarper <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/test&#39;</span>

<span class="token keyword">const</span> func <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FuncWarper</span><span class="token punctuation">(</span>__dirname <span class="token operator">+</span> <span class="token string">&#39;/../demo.func.ts&#39;</span><span class="token punctuation">)</span>

<span class="token function">expect</span><span class="token punctuation">(</span><span class="token keyword">await</span> func<span class="token punctuation">.</span><span class="token function">handler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span><span class="token string">&#39;Hello, world&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="indexable" tabindex="-1"><a class="header-anchor" href="#indexable" aria-hidden="true">#</a> Indexable</h2><p>▪ [key: <code>string</code>]: <code>any</code></p><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of contents</h2><h3 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors" aria-hidden="true">#</a> Constructors</h3>`,7),u=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),p=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),g=o('<h2 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>• <strong>new FuncWarper</strong>(<code>initBy</code>)</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4>',4),f=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),_=e("td",{style:{"text-align":"left"}},[e("code",null,"initBy")],-1),y={style:{"text-align":"left"}},m=e("code",null,"Func",-1),x=e("code",null,"any",-1),b=e("code",null,"any",-1),k=e("code",null,"any",-1),v=o('<p>• <strong>new FuncWarper</strong>(<code>initBy</code>)</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>initBy</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="config" tabindex="-1"><a class="header-anchor" href="#config" aria-hidden="true">#</a> config</h3>',5),F=e("code",null,"Readonly",-1),T=e("strong",null,"config",-1),W=e("code",null,"Config",-1),R=o('<hr><h3 id="file" tabindex="-1"><a class="header-anchor" href="#file" aria-hidden="true">#</a> file</h3><p>• <code>Readonly</code> <strong>file</strong>: <code>string</code></p><hr><h3 id="func" tabindex="-1"><a class="header-anchor" href="#func" aria-hidden="true">#</a> func</h3>',5),P=e("code",null,"Readonly",-1),w=e("strong",null,"func",-1),N=e("code",null,"Func",-1),j=e("code",null,"any",-1),C=e("code",null,"any",-1),O=e("code",null,"any",-1),B=o('<hr><h3 id="logger" tabindex="-1"><a class="header-anchor" href="#logger" aria-hidden="true">#</a> logger</h3><p>• <code>Readonly</code> <strong>logger</strong>: <code>Logger</code></p><hr><h3 id="plugins" tabindex="-1"><a class="header-anchor" href="#plugins" aria-hidden="true">#</a> plugins</h3>',5),D=e("code",null,"Readonly",-1),S=e("strong",null,"plugins",-1),V=e("code",null,"Plugin",-1),J=o('<hr><h3 id="staging" tabindex="-1"><a class="header-anchor" href="#staging" aria-hidden="true">#</a> staging</h3><p>• <code>Readonly</code> <strong>staging</strong>: <code>string</code></p><h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="jsonhandler" tabindex="-1"><a class="header-anchor" href="#jsonhandler" aria-hidden="true">#</a> JSONhandler</h3><p>▸ <strong>JSONhandler</strong>&lt;<code>TData</code>&gt;(<code>body?</code>, <code>options?</code>): <code>Promise</code>&lt;{ <code>body</code>: <code>any</code> ; <code>cookie?</code>: <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; ; <code>data?</code>: <code>TData</code> ; <code>error?</code>: { <code>message</code>: <code>string</code> } ; <code>headers</code>: { <code>[key: string]</code>: <code>string</code>; } ; <code>session?</code>: <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; ; <code>statusCode</code>: <code>number</code> }&gt;</p><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>TData</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>body?</code></td><td style="text-align:left;"><code>Object</code></td></tr><tr><td style="text-align:left;"><code>options</code></td><td style="text-align:left;"><code>Object</code></td></tr><tr><td style="text-align:left;"><code>options.cookie?</code></td><td style="text-align:left;"><code>Object</code></td></tr><tr><td style="text-align:left;"><code>options.headers?</code></td><td style="text-align:left;"><code>Object</code></td></tr><tr><td style="text-align:left;"><code>options.session?</code></td><td style="text-align:left;"><code>Object</code></td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;{ <code>body</code>: <code>any</code> ; <code>cookie?</code>: <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; ; <code>data?</code>: <code>TData</code> ; <code>error?</code>: { <code>message</code>: <code>string</code> } ; <code>headers</code>: { <code>[key: string]</code>: <code>string</code>; } ; <code>session?</code>: <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; ; <code>statusCode</code>: <code>number</code> }&gt;</p><hr><h3 id="handler" tabindex="-1"><a class="header-anchor" href="#handler" aria-hidden="true">#</a> handler</h3><p>▸ <strong>handler</strong>&lt;<code>TResult</code>&gt;(<code>event?</code>, <code>context?</code>): <code>Promise</code>&lt;<code>TResult</code>&gt;</p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>TResult</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>event</code></td><td style="text-align:left;"><code>any</code></td></tr><tr><td style="text-align:left;"><code>context</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>TResult</code>&gt;</p><hr><h3 id="mount" tabindex="-1"><a class="header-anchor" href="#mount" aria-hidden="true">#</a> mount</h3><p>▸ <strong>mount</strong>(<code>handler?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4>',25),L=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),E=e("td",{style:{"text-align":"left"}},[e("code",null,"handler?")],-1),M={style:{"text-align":"left"}},q=e("code",null,"func",-1),H=e("code",null,"FuncWarper",-1),I=e("code",null,"void",-1),z=e("code",null,"Promise",-1),A=e("code",null,"void",-1),G=e("h4",{id:"returns-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-2","aria-hidden":"true"},"#"),t(" Returns")],-1),K=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1);function Q(U,X){const a=c("RouterLink");return r(),l("div",null,[h,e("ul",null,[e("li",null,[d(a,{to:"/doc/test/classes/FuncWarper.html#constructor"},{default:n(()=>[t("constructor")]),_:1})])]),u,e("ul",null,[e("li",null,[d(a,{to:"/doc/test/classes/FuncWarper.html#config"},{default:n(()=>[t("config")]),_:1})]),e("li",null,[d(a,{to:"/doc/test/classes/FuncWarper.html#file"},{default:n(()=>[t("file")]),_:1})]),e("li",null,[d(a,{to:"/doc/test/classes/FuncWarper.html#func"},{default:n(()=>[t("func")]),_:1})]),e("li",null,[d(a,{to:"/doc/test/classes/FuncWarper.html#logger"},{default:n(()=>[t("logger")]),_:1})]),e("li",null,[d(a,{to:"/doc/test/classes/FuncWarper.html#plugins"},{default:n(()=>[t("plugins")]),_:1})]),e("li",null,[d(a,{to:"/doc/test/classes/FuncWarper.html#staging"},{default:n(()=>[t("staging")]),_:1})])]),p,e("ul",null,[e("li",null,[d(a,{to:"/doc/test/classes/FuncWarper.html#jsonhandler"},{default:n(()=>[t("JSONhandler")]),_:1})]),e("li",null,[d(a,{to:"/doc/test/classes/FuncWarper.html#handler"},{default:n(()=>[t("handler")]),_:1})]),e("li",null,[d(a,{to:"/doc/test/classes/FuncWarper.html#mount"},{default:n(()=>[t("mount")]),_:1})])]),g,e("table",null,[f,e("tbody",null,[e("tr",null,[_,e("td",y,[d(a,{to:"/doc/test/classes/Func.html"},{default:n(()=>[m]),_:1}),t("<"),x,t(", "),b,t(", "),k,t(">")])])])]),v,e("p",null,[t("• "),F,t(),T,t(": "),d(a,{to:"/doc/test/#config"},{default:n(()=>[W]),_:1})]),R,e("p",null,[t("• "),P,t(),w,t(": "),d(a,{to:"/doc/test/classes/Func.html"},{default:n(()=>[N]),_:1}),t("<"),j,t(", "),C,t(", "),O,t(">")]),B,e("p",null,[t("• "),D,t(),S,t(": "),d(a,{to:"/doc/test/#plugin"},{default:n(()=>[V]),_:1}),t("[]")]),J,e("table",null,[L,e("tbody",null,[e("tr",null,[E,e("td",M,[t("("),q,t(": "),d(a,{to:"/doc/test/classes/FuncWarper.html"},{default:n(()=>[H]),_:1}),t(") => "),I,t(" | "),z,t("<"),A,t(">")])])])]),G,K])}const Z=s(i,[["render",Q],["__file","FuncWarper.html.vue"]]);export{Z as default};
