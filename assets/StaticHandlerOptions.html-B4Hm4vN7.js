import{_ as i,c as p,b as s,a as l,d as t,e as a,w as o,r,o as d}from"./app-Da9LvgXD.js";const c={};function u(h,e){const n=r("RouteLink");return d(),p("div",null,[s("p",null,[t(n,{to:"/doc/server/"},{default:o(()=>e[0]||(e[0]=[a("Documents")])),_:1,__:[0]}),e[2]||(e[2]=a(" / ")),t(n,{to:"/doc/server/"},{default:o(()=>e[1]||(e[1]=[a("@faasjs/server")])),_:1,__:[1]}),e[3]||(e[3]=a(" / StaticHandlerOptions"))]),e[13]||(e[13]=l(`<h1 id="type-alias-statichandleroptions" tabindex="-1"><a class="header-anchor" href="#type-alias-statichandleroptions"><span>Type Alias: StaticHandlerOptions</span></a></h1><blockquote><p><strong>StaticHandlerOptions</strong> = <code>object</code></p></blockquote><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="cache" tabindex="-1"><a class="header-anchor" href="#cache"><span>cache?</span></a></h3><blockquote><p><code>optional</code> <strong>cache</strong>: <code>boolean</code> | <code>string</code></p></blockquote><p>Cache static files. If set to <code>true</code>, the middleware will cache static files. If set to a string, the middleware will cache static files with the specified key. If set to <code>false</code>, the middleware will not cache static files.</p><h4 id="default" tabindex="-1"><a class="header-anchor" href="#default"><span>Default</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token boolean">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="notfound" tabindex="-1"><a class="header-anchor" href="#notfound"><span>notFound?</span></a></h3>`,9)),s("blockquote",null,[s("p",null,[e[5]||(e[5]=s("code",null,"optional",-1)),e[6]||(e[6]=a()),e[7]||(e[7]=s("strong",null,"notFound",-1)),e[8]||(e[8]=a(": ")),t(n,{to:"/doc/server/type-aliases/Middleware.html"},{default:o(()=>e[4]||(e[4]=[s("code",null,"Middleware",-1)])),_:1,__:[4]}),e[9]||(e[9]=a(" | ")),e[10]||(e[10]=s("code",null,"boolean",-1)),e[11]||(e[11]=a(" | ")),e[12]||(e[12]=s("code",null,"string",-1))])]),e[14]||(e[14]=l(`<p>Not found handler.</p><p>If set to <code>true</code>, the middleware will respond with a default 404 status code. If set to a string as a fallback path, the middleware will respond with the file at that path. If set to a function, the middleware will call the function with the request, response, and logger. If set to <code>false</code>, the middleware will do nothing.</p><h4 id="default-1" tabindex="-1"><a class="header-anchor" href="#default-1"><span>Default</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token boolean">false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="root" tabindex="-1"><a class="header-anchor" href="#root"><span>root</span></a></h3><blockquote><p><strong>root</strong>: <code>string</code></p></blockquote><h3 id="stripprefix" tabindex="-1"><a class="header-anchor" href="#stripprefix"><span>stripPrefix?</span></a></h3><blockquote><p><code>optional</code> <strong>stripPrefix</strong>: <code>string</code> | <code>RegExp</code></p></blockquote><p>Strip prefix from the URL.</p><h4 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> useMiddleware<span class="token punctuation">,</span> staticHandler <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/server&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> func <span class="token operator">=</span> <span class="token function">useMiddleware</span><span class="token punctuation">(</span><span class="token function">staticHandler</span><span class="token punctuation">(</span><span class="token punctuation">{</span> root<span class="token operator">:</span> __dirname <span class="token operator">+</span> <span class="token string">&#39;/public&#39;</span><span class="token punctuation">,</span> stripPrefix<span class="token operator">:</span> <span class="token string">&#39;/public&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// /public/index.html -&gt; /index.html</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11))])}const m=i(c,[["render",u]]),k=JSON.parse('{"path":"/doc/server/type-aliases/StaticHandlerOptions.html","title":"Type Alias: StaticHandlerOptions","lang":"en","frontmatter":{},"git":{},"filePathRelative":"doc/server/type-aliases/StaticHandlerOptions.md"}');export{m as comp,k as data};
