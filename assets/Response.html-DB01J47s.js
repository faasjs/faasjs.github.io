import{_ as r,c as d,b as s,d as o,e as n,f as t,a as l,r as p,o as i}from"./app-D3KgtjDf.js";const u={};function c(h,e){const a=p("RouteLink");return i(),d("div",null,[s("p",null,[o(a,{to:"/doc/request/"},{default:n(()=>e[0]||(e[0]=[t("Documents")])),_:1}),e[2]||(e[2]=t(" / ")),o(a,{to:"/doc/request/"},{default:n(()=>e[1]||(e[1]=[t("@faasjs/request")])),_:1}),e[3]||(e[3]=t(" / Response"))]),e[9]||(e[9]=l('<h1 id="type-alias-response-t" tabindex="-1"><a class="header-anchor" href="#type-alias-response-t"><span>Type Alias: Response&lt;T&gt;</span></a></h1><blockquote><p><strong>Response</strong>&lt;<code>T</code>&gt;: <code>object</code></p></blockquote><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><p>â€¢ <strong>T</strong> = <code>any</code></p><h2 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration"><span>Type declaration</span></a></h2><h3 id="body" tabindex="-1"><a class="header-anchor" href="#body"><span>body</span></a></h3><blockquote><p><strong>body</strong>: <code>T</code></p></blockquote><h3 id="headers" tabindex="-1"><a class="header-anchor" href="#headers"><span>headers</span></a></h3><blockquote><p><strong>headers</strong>: <code>OutgoingHttpHeaders</code></p></blockquote><h3 id="request" tabindex="-1"><a class="header-anchor" href="#request"><span>request?</span></a></h3>',10)),s("blockquote",null,[s("p",null,[e[5]||(e[5]=s("code",null,"optional",-1)),e[6]||(e[6]=t()),e[7]||(e[7]=s("strong",null,"request",-1)),e[8]||(e[8]=t(": ")),o(a,{to:"/doc/request/type-aliases/Request.html"},{default:n(()=>e[4]||(e[4]=[s("code",null,"Request",-1)])),_:1})])]),e[10]||(e[10]=l('<h3 id="statuscode" tabindex="-1"><a class="header-anchor" href="#statuscode"><span>statusCode?</span></a></h3><blockquote><p><code>optional</code> <strong>statusCode</strong>: <code>number</code></p></blockquote><h3 id="statusmessage" tabindex="-1"><a class="header-anchor" href="#statusmessage"><span>statusMessage?</span></a></h3><blockquote><p><code>optional</code> <strong>statusMessage</strong>: <code>string</code></p></blockquote>',4))])}const b=r(u,[["render",c],["__file","Response.html.vue"]]),y=JSON.parse('{"path":"/doc/request/type-aliases/Response.html","title":"Type Alias: Response<T>","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type Parameters","slug":"type-parameters","link":"#type-parameters","children":[]},{"level":2,"title":"Type declaration","slug":"type-declaration","link":"#type-declaration","children":[{"level":3,"title":"body","slug":"body","link":"#body","children":[]},{"level":3,"title":"headers","slug":"headers","link":"#headers","children":[]},{"level":3,"title":"request?","slug":"request","link":"#request","children":[]},{"level":3,"title":"statusCode?","slug":"statuscode","link":"#statuscode","children":[]},{"level":3,"title":"statusMessage?","slug":"statusmessage","link":"#statusmessage","children":[]}]}],"git":{},"filePathRelative":"doc/request/type-aliases/Response.md"}');export{b as comp,y as data};
