import{_ as n,c as r,b as l,d as o,w as s,e as t,a as d,r as c,o as p}from"./app-DQ7OvlMy.js";const u={};function i(m,e){const a=c("RouteLink");return p(),r("div",null,[l("p",null,[o(a,{to:"/doc/react/"},{default:s(()=>e[0]||(e[0]=[t("Documents")])),_:1}),e[2]||(e[2]=t(" / ")),o(a,{to:"/doc/react/"},{default:s(()=>e[1]||(e[1]=[t("@faasjs/react")])),_:1}),e[3]||(e[3]=t(" / useEqualMemo"))]),e[4]||(e[4]=d('<h1 id="function-useequalmemo" tabindex="-1"><a class="header-anchor" href="#function-useequalmemo"><span>Function: useEqualMemo()</span></a></h1><blockquote><p><strong>useEqualMemo</strong>&lt;<code>T</code>&gt;(<code>callback</code>, <code>dependencies</code>): <code>T</code></p></blockquote><p>Custom hook that works like <code>useMemo</code> but uses deep comparison on dependencies.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><p>• <strong>T</strong></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><p>• <strong>callback</strong></p><p>The callback function to run.</p><p>• <strong>dependencies</strong>: <code>any</code>[]</p><p>The list of dependencies.</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>T</code></p><p>The result of the <code>useMemo</code> hook with memoized dependencies.</p>',13))])}const f=n(u,[["render",i],["__file","useEqualMemo.html.vue"]]),k=JSON.parse('{"path":"/doc/react/functions/useEqualMemo.html","title":"Function: useEqualMemo()","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type Parameters","slug":"type-parameters","link":"#type-parameters","children":[]},{"level":2,"title":"Parameters","slug":"parameters","link":"#parameters","children":[]},{"level":2,"title":"Returns","slug":"returns","link":"#returns","children":[]}],"git":{"updatedTime":null},"filePathRelative":"doc/react/functions/useEqualMemo.md"}');export{f as comp,k as data};
