import{_ as r,c as a,b as e,d as o,e as s,f as n,a as d,r as i,o as p}from"./app-BYD7mR1L.js";const u={};function g(f,t){const l=i("RouteLink");return p(),a("div",null,[e("p",null,[o(l,{to:"/doc/test/"},{default:s(()=>t[0]||(t[0]=[n("Documents")])),_:1}),t[2]||(t[2]=n(" / ")),o(l,{to:"/doc/test/"},{default:s(()=>t[1]||(t[1]=[n("@faasjs/test")])),_:1}),t[3]||(t[3]=n(" / FuncConfig"))]),t[22]||(t[22]=d('<h1 id="type-alias-funcconfig-tevent-tcontext-tresult" tabindex="-1"><a class="header-anchor" href="#type-alias-funcconfig-tevent-tcontext-tresult"><span>Type Alias: FuncConfig&lt;TEvent, TContext, TResult&gt;</span></a></h1><blockquote><p><strong>FuncConfig</strong>&lt;<code>TEvent</code>, <code>TContext</code>, <code>TResult</code>&gt;: <code>object</code></p></blockquote><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><p>• <strong>TEvent</strong> = <code>any</code></p><p>• <strong>TContext</strong> = <code>any</code></p><p>• <strong>TResult</strong> = <code>any</code></p><h2 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration"><span>Type declaration</span></a></h2><h3 id="handler" tabindex="-1"><a class="header-anchor" href="#handler"><span>handler?</span></a></h3>',8)),e("blockquote",null,[e("p",null,[t[5]||(t[5]=e("code",null,"optional",-1)),t[6]||(t[6]=n()),t[7]||(t[7]=e("strong",null,"handler",-1)),t[8]||(t[8]=n(": ")),o(l,{to:"/doc/test/type-aliases/Handler.html"},{default:s(()=>t[4]||(t[4]=[e("code",null,"Handler",-1)])),_:1}),t[9]||(t[9]=n("<")),t[10]||(t[10]=e("code",null,"TEvent",-1)),t[11]||(t[11]=n(", ")),t[12]||(t[12]=e("code",null,"TContext",-1)),t[13]||(t[13]=n(", ")),t[14]||(t[14]=e("code",null,"TResult",-1)),t[15]||(t[15]=n(">"))])]),t[23]||(t[23]=e("h3",{id:"plugins",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#plugins"},[e("span",null,"plugins?")])],-1)),e("blockquote",null,[e("p",null,[t[17]||(t[17]=e("code",null,"optional",-1)),t[18]||(t[18]=n()),t[19]||(t[19]=e("strong",null,"plugins",-1)),t[20]||(t[20]=n(": ")),o(l,{to:"/doc/test/type-aliases/Plugin.html"},{default:s(()=>t[16]||(t[16]=[e("code",null,"Plugin",-1)])),_:1}),t[21]||(t[21]=n("[]"))])])])}const T=r(u,[["render",g],["__file","FuncConfig.html.vue"]]),m=JSON.parse('{"path":"/doc/test/type-aliases/FuncConfig.html","title":"Type Alias: FuncConfig<TEvent, TContext, TResult>","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type Parameters","slug":"type-parameters","link":"#type-parameters","children":[]},{"level":2,"title":"Type declaration","slug":"type-declaration","link":"#type-declaration","children":[{"level":3,"title":"handler?","slug":"handler","link":"#handler","children":[]},{"level":3,"title":"plugins?","slug":"plugins","link":"#plugins","children":[]}]}],"git":{},"filePathRelative":"doc/test/type-aliases/FuncConfig.md"}');export{T as comp,m as data};
