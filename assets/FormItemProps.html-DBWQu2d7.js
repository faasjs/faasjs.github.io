import{_ as p,c as d,b as e,d as n,e as r,f as t,a as s,r as m,o as u}from"./app-Gpm8LlV-.js";const i={};function a(b,l){const o=m("RouteLink");return u(),d("div",null,[e("p",null,[n(o,{to:"/doc/react/"},{default:r(()=>l[0]||(l[0]=[t("Documents")])),_:1}),l[2]||(l[2]=t(" / ")),n(o,{to:"/doc/react/"},{default:r(()=>l[1]||(l[1]=[t("@faasjs/react")])),_:1}),l[3]||(l[3]=t(" / FormItemProps"))]),l[48]||(l[48]=s('<h1 id="type-alias-formitemprops-formelements-formrulesoptions" tabindex="-1"><a class="header-anchor" href="#type-alias-formitemprops-formelements-formrulesoptions"><span>Type Alias: FormItemProps&lt;FormElements, FormRulesOptions&gt;</span></a></h1><blockquote><p><strong>FormItemProps</strong>&lt;<code>FormElements</code>, <code>FormRulesOptions</code>&gt;: <code>object</code></p></blockquote><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2>',3)),e("p",null,[l[6]||(l[6]=t("• ")),l[7]||(l[7]=e("strong",null,"FormElements",-1)),l[8]||(l[8]=t()),l[9]||(l[9]=e("em",null,"extends",-1)),l[10]||(l[10]=t()),n(o,{to:"/doc/react/type-aliases/FormElementTypes.html"},{default:r(()=>l[4]||(l[4]=[e("code",null,"FormElementTypes",-1)])),_:1}),l[11]||(l[11]=t(" = ")),n(o,{to:"/doc/react/type-aliases/FormElementTypes.html"},{default:r(()=>l[5]||(l[5]=[e("code",null,"FormElementTypes",-1)])),_:1})]),e("p",null,[l[13]||(l[13]=t("• ")),l[14]||(l[14]=e("strong",null,"FormRulesOptions",-1)),l[15]||(l[15]=t()),l[16]||(l[16]=e("em",null,"extends",-1)),l[17]||(l[17]=t()),l[18]||(l[18]=e("code",null,"Record",-1)),l[19]||(l[19]=t("<")),l[20]||(l[20]=e("code",null,"string",-1)),l[21]||(l[21]=t(", ")),l[22]||(l[22]=e("code",null,"any",-1)),l[23]||(l[23]=t("> = ")),n(o,{to:"/doc/react/type-aliases/FormDefaultRulesOptions.html"},{default:r(()=>l[12]||(l[12]=[e("code",null,"FormDefaultRulesOptions",-1)])),_:1})]),l[49]||(l[49]=s('<h2 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration"><span>Type declaration</span></a></h2><h3 id="input" tabindex="-1"><a class="header-anchor" href="#input"><span>input?</span></a></h3><blockquote><p><code>optional</code> <strong>input</strong>: <code>FormInputProps</code>&lt;<code>FormElements</code>&gt;</p></blockquote><h3 id="label" tabindex="-1"><a class="header-anchor" href="#label"><span>label?</span></a></h3>',4)),e("blockquote",null,[e("p",null,[l[25]||(l[25]=e("code",null,"optional",-1)),l[26]||(l[26]=t()),l[27]||(l[27]=e("strong",null,"label",-1)),l[28]||(l[28]=t(": ")),l[29]||(l[29]=e("code",null,"Omit",-1)),l[30]||(l[30]=t("<")),n(o,{to:"/doc/react/type-aliases/FormLabelElementProps.html"},{default:r(()=>l[24]||(l[24]=[e("code",null,"FormLabelElementProps",-1)])),_:1}),l[31]||(l[31]=t(", ")),l[32]||(l[32]=e("code",null,'"name"',-1)),l[33]||(l[33]=t(" | ")),l[34]||(l[34]=e("code",null,'"children"',-1)),l[35]||(l[35]=t("> & ")),l[36]||(l[36]=e("code",null,"object",-1))])]),l[50]||(l[50]=e("h4",{id:"type-declaration-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-1"},[e("span",null,"Type declaration")])],-1)),l[51]||(l[51]=e("h5",{id:"label-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#label-1"},[e("span",null,"Label?")])],-1)),e("blockquote",null,[e("p",null,[l[38]||(l[38]=e("code",null,"optional",-1)),l[39]||(l[39]=t()),l[40]||(l[40]=e("strong",null,"Label",-1)),l[41]||(l[41]=t(": ")),l[42]||(l[42]=e("code",null,"ComponentType",-1)),l[43]||(l[43]=t("<")),n(o,{to:"/doc/react/type-aliases/FormLabelElementProps.html"},{default:r(()=>l[37]||(l[37]=[e("code",null,"FormLabelElementProps",-1)])),_:1}),l[44]||(l[44]=t(">"))])]),l[52]||(l[52]=e("h3",{id:"name",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#name"},[e("span",null,"name")])],-1)),e("blockquote",null,[e("p",null,[l[46]||(l[46]=e("strong",null,"name",-1)),l[47]||(l[47]=t(": ")),n(o,{to:"/doc/react/type-aliases/FormItemName.html"},{default:r(()=>l[45]||(l[45]=[e("code",null,"FormItemName",-1)])),_:1})])]),l[53]||(l[53]=e("h3",{id:"rules",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#rules"},[e("span",null,"rules?")])],-1)),l[54]||(l[54]=e("blockquote",null,[e("p",null,[e("code",null,"optional"),t(),e("strong",null,"rules"),t(": "),e("code",null,"FormRulesOptions")])],-1))])}const y=p(i,[["render",a],["__file","FormItemProps.html.vue"]]),F=JSON.parse('{"path":"/doc/react/type-aliases/FormItemProps.html","title":"Type Alias: FormItemProps<FormElements, FormRulesOptions>","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type Parameters","slug":"type-parameters","link":"#type-parameters","children":[]},{"level":2,"title":"Type declaration","slug":"type-declaration","link":"#type-declaration","children":[{"level":3,"title":"input?","slug":"input","link":"#input","children":[]},{"level":3,"title":"label?","slug":"label","link":"#label","children":[]},{"level":3,"title":"name","slug":"name","link":"#name","children":[]},{"level":3,"title":"rules?","slug":"rules","link":"#rules","children":[]}]}],"git":{},"filePathRelative":"doc/react/type-aliases/FormItemProps.md"}');export{y as comp,F as data};
