import{_ as d,c,b as n,a as r,d as s,e as a,w as t,r as h,o as p}from"./app-D1hpeKqL.js";const i={};function l(u,e){const o=h("RouteLink");return p(),c("div",null,[n("p",null,[s(o,{to:"/doc/knex/"},{default:t(()=>e[0]||(e[0]=[a("Documents")])),_:1}),e[2]||(e[2]=a(" / ")),s(o,{to:"/doc/knex/"},{default:t(()=>e[1]||(e[1]=[a("@faasjs/knex")])),_:1}),e[3]||(e[3]=a(" / Knex"))]),e[5]||(e[5]=r('<h1 id="class-knex" tabindex="-1"><a class="header-anchor" href="#class-knex"><span>Class: Knex</span></a></h1><h2 id="implements" tabindex="-1"><a class="header-anchor" href="#implements"><span>Implements</span></a></h2><ul><li><code>Plugin</code></li></ul><h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor"><span>Constructor</span></a></h3><blockquote><p><strong>new Knex</strong>(<code>config?</code>): <code>Knex</code></p></blockquote><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="config" tabindex="-1"><a class="header-anchor" href="#config"><span>config?</span></a></h5>',8)),n("p",null,[s(o,{to:"/doc/knex/type-aliases/KnexConfig.html"},{default:t(()=>e[4]||(e[4]=[n("code",null,"KnexConfig",-1)])),_:1})]),e[6]||(e[6]=r('<h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>Knex</code></p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h2><h3 id="oninvoke" tabindex="-1"><a class="header-anchor" href="#oninvoke"><span>onInvoke()</span></a></h3><blockquote><p><strong>onInvoke</strong>(<code>data</code>, <code>next</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><h5 id="data" tabindex="-1"><a class="header-anchor" href="#data"><span>data</span></a></h5><p><code>InvokeData</code>&lt;<code>any</code>, <code>any</code>, <code>any</code>&gt;</p><h5 id="next" tabindex="-1"><a class="header-anchor" href="#next"><span>next</span></a></h5><p><code>Next</code></p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="implementation-of" tabindex="-1"><a class="header-anchor" href="#implementation-of"><span>Implementation of</span></a></h4><p><code>Plugin.onInvoke</code></p><h3 id="onmount" tabindex="-1"><a class="header-anchor" href="#onmount"><span>onMount()</span></a></h3><blockquote><p><strong>onMount</strong>(<code>data</code>, <code>next</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h4><h5 id="data-1" tabindex="-1"><a class="header-anchor" href="#data-1"><span>data</span></a></h5><p><code>MountData</code></p><h5 id="next-1" tabindex="-1"><a class="header-anchor" href="#next-1"><span>next</span></a></h5><p><code>Next</code></p><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="implementation-of-1" tabindex="-1"><a class="header-anchor" href="#implementation-of-1"><span>Implementation of</span></a></h4><p><code>Plugin.onMount</code></p><h3 id="quit" tabindex="-1"><a class="header-anchor" href="#quit"><span>quit()</span></a></h3><blockquote><p><strong>quit</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h3 id="raw" tabindex="-1"><a class="header-anchor" href="#raw"><span>raw()</span></a></h3><blockquote><p><strong>raw</strong>&lt;<code>TResult</code>&gt;(<code>sql</code>, <code>bindings</code>): <code>Promise</code>&lt;<code>Raw</code>&lt;<code>TResult</code>&gt;&gt;</p></blockquote><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h4><h5 id="tresult" tabindex="-1"><a class="header-anchor" href="#tresult"><span>TResult</span></a></h5><p><code>TResult</code> = <code>any</code></p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3"><span>Parameters</span></a></h4><h5 id="sql" tabindex="-1"><a class="header-anchor" href="#sql"><span>sql</span></a></h5><p><code>string</code></p><h5 id="bindings" tabindex="-1"><a class="header-anchor" href="#bindings"><span>bindings</span></a></h5><p><code>ValueDict</code> | <code>RawBinding</code>[]</p><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>Raw</code>&lt;<code>TResult</code>&gt;&gt;</p><h3 id="schema" tabindex="-1"><a class="header-anchor" href="#schema"><span>schema()</span></a></h3><blockquote><p><strong>schema</strong>(): <code>SchemaBuilder</code></p></blockquote><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5"><span>Returns</span></a></h4><p><code>SchemaBuilder</code></p><h3 id="transaction" tabindex="-1"><a class="header-anchor" href="#transaction"><span>transaction()</span></a></h3><blockquote><p><strong>transaction</strong>&lt;<code>TResult</code>&gt;(<code>scope</code>, <code>config?</code>, <code>options?</code>): <code>Promise</code>&lt;<code>TResult</code>&gt;</p></blockquote><p>Wraps a transaction, returning a promise that resolves to the return value of the callback.</p><ul><li>Support &#39;commit&#39; and &#39;rollback&#39; event.</li></ul><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1"><span>Type Parameters</span></a></h4><h5 id="tresult-1" tabindex="-1"><a class="header-anchor" href="#tresult-1"><span>TResult</span></a></h5><p><code>TResult</code> = <code>any</code></p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4"><span>Parameters</span></a></h4><h5 id="scope" tabindex="-1"><a class="header-anchor" href="#scope"><span>scope</span></a></h5><p>(<code>trx</code>) =&gt; <code>Promise</code>&lt;<code>TResult</code>&gt;</p><h5 id="config-1" tabindex="-1"><a class="header-anchor" href="#config-1"><span>config?</span></a></h5><p><code>TransactionConfig</code></p><h5 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options?</span></a></h5><h6 id="trx" tabindex="-1"><a class="header-anchor" href="#trx"><span>trx?</span></a></h6><p><code>Transaction</code></p><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>TResult</code>&gt;</p><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="adapter" tabindex="-1"><a class="header-anchor" href="#adapter"><span>adapter</span></a></h3><blockquote><p><strong>adapter</strong>: <code>Knex</code></p></blockquote><h3 id="config-2" tabindex="-1"><a class="header-anchor" href="#config-2"><span>config</span></a></h3><blockquote><p><strong>config</strong>: <code>Config</code></p></blockquote><h3 id="logger" tabindex="-1"><a class="header-anchor" href="#logger"><span>logger</span></a></h3><blockquote><p><strong>logger</strong>: <code>Logger</code></p></blockquote><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span>name</span></a></h3><blockquote><p><code>readonly</code> <strong>name</strong>: <code>string</code> = <code>Name</code></p></blockquote><h4 id="implementation-of-2" tabindex="-1"><a class="header-anchor" href="#implementation-of-2"><span>Implementation of</span></a></h4><p><code>Plugin.name</code></p><h3 id="query" tabindex="-1"><a class="header-anchor" href="#query"><span>query</span></a></h3><blockquote><p><strong>query</strong>: <code>Knex</code></p></blockquote><h3 id="type" tabindex="-1"><a class="header-anchor" href="#type"><span>type</span></a></h3><blockquote><p><code>readonly</code> <strong>type</strong>: <code>&quot;knex&quot;</code> = <code>&#39;knex&#39;</code></p></blockquote><h4 id="implementation-of-3" tabindex="-1"><a class="header-anchor" href="#implementation-of-3"><span>Implementation of</span></a></h4><p><code>Plugin.type</code></p>',79))])}const x=d(i,[["render",l]]),f=JSON.parse('{"path":"/doc/knex/classes/Knex.html","title":"Class: Knex","lang":"en","frontmatter":{},"git":{},"filePathRelative":"doc/knex/classes/Knex.md"}');export{x as comp,f as data};
