import{_ as p,c as r,b as s,d as t,w as l,e as a,a as o,r as i,o as u}from"./app-CrV6sbjL.js";const d={};function c(k,n){const e=i("RouteLink");return u(),r("div",null,[s("p",null,[t(e,{to:"/doc/ant-design/"},{default:l(()=>n[0]||(n[0]=[a("Documents")])),_:1}),n[2]||(n[2]=a(" / ")),t(e,{to:"/doc/ant-design/"},{default:l(()=>n[1]||(n[1]=[a("@faasjs/ant-design")])),_:1}),n[3]||(n[3]=a(" / Blank"))]),n[8]||(n[8]=o('<h1 id="function-blank" tabindex="-1"><a class="header-anchor" href="#function-blank"><span>Function: Blank()</span></a></h1><blockquote><p><strong>Blank</strong>(<code>options</code>?): <code>JSX.Element</code></p></blockquote><p>Blank component.</p><p>If value is undefined or null, return text, otherwise return value.</p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2>',5)),s("p",null,[n[5]||(n[5]=a("â€¢ ")),n[6]||(n[6]=s("strong",null,"options?",-1)),n[7]||(n[7]=a(": ")),t(e,{to:"/doc/ant-design/interfaces/BlankProps.html"},{default:l(()=>n[4]||(n[4]=[s("code",null,"BlankProps",-1)])),_:1})]),n[9]||(n[9]=o(`<h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>JSX.Element</code></p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-tsx line-numbers-mode" data-highlighter="prismjs" data-ext="tsx" data-title="tsx"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Blank <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/ant-design&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Blank</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">undefined</span><span class="token punctuation">}</span></span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Empty<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4))])}const f=p(d,[["render",c],["__file","Blank.html.vue"]]),g=JSON.parse('{"path":"/doc/ant-design/functions/Blank.html","title":"Function: Blank()","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Parameters","slug":"parameters","link":"#parameters","children":[]},{"level":2,"title":"Returns","slug":"returns","link":"#returns","children":[]},{"level":2,"title":"Example","slug":"example","link":"#example","children":[]}],"git":{"updatedTime":null},"filePathRelative":"doc/ant-design/functions/Blank.md"}');export{f as comp,g as data};
