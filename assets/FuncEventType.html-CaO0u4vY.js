import{_ as o,r as c,c as p,b as n,d as a,w as t,e,a as l,o as u}from"./app-C_naGdBF.js";const i={},d=n("h1",{id:"type-alias-funceventtype-t",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#type-alias-funceventtype-t"},[n("span",null,"Type alias: FuncEventType<T>")])],-1),r=n("strong",null,"FuncEventType",-1),_=n("code",null,"T",-1),k=n("code",null,"T",-1),m=n("em",null,"extends",-1),h=n("code",null,"Func",-1),y=n("code",null,"any",-1),v=n("code",null,"any",-1),f=n("code",null,"P",-1),T=n("code",null,"any",-1),g=l(`<p>Get the event type of a func</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useFunc<span class="token punctuation">,</span> <span class="token keyword">type</span> <span class="token class-name">FuncEventType</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/func&#39;</span>

<span class="token keyword">const</span> func <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useFunc</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token punctuation">{</span> counter<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

FuncEventType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> func<span class="token operator">&gt;</span> <span class="token comment">// =&gt; { counter: number }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type parameters</span></a></h2>`,4),x=n("strong",null,"T",-1),F=n("em",null,"extends",-1),b=n("code",null,"Func",-1),E=n("code",null,"any",-1),w=n("code",null,"any",-1),N=n("code",null,"any",-1);function V(B,P){const s=c("RouteLink");return u(),p("div",null,[n("p",null,[a(s,{to:"/doc/test/"},{default:t(()=>[e("Documents")]),_:1}),e(" / "),a(s,{to:"/doc/test/"},{default:t(()=>[e("@faasjs/test")]),_:1}),e(" / FuncEventType")]),d,n("blockquote",null,[n("p",null,[r,e("<"),_,e(">: "),k,e(),m,e(),a(s,{to:"/doc/test/classes/Func.html"},{default:t(()=>[h]),_:1}),e("<infer P, "),y,e(", "),v,e("> ? "),f,e(" : "),T])]),g,n("p",null,[e("â€¢ "),x,e(),F,e(),a(s,{to:"/doc/test/classes/Func.html"},{default:t(()=>[b]),_:1}),e("<"),E,e(", "),w,e(", "),N,e(">")])])}const j=o(i,[["render",V],["__file","FuncEventType.html.vue"]]),C=JSON.parse('{"path":"/doc/test/type-aliases/FuncEventType.html","title":"Type alias: FuncEventType<T>","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Example","slug":"example","link":"#example","children":[]},{"level":2,"title":"Type parameters","slug":"type-parameters","link":"#type-parameters","children":[]}],"git":{"updatedTime":null},"filePathRelative":"doc/test/type-aliases/FuncEventType.md"}');export{j as comp,C as data};
