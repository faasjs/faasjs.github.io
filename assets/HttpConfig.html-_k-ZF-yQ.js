import{_ as s,c,b as o,a as i,d as a,e as t,w as d,r as p,o as r}from"./app-CeuSItVv.js";const l={};function h(u,e){const n=p("RouteLink");return r(),c("div",null,[o("p",null,[a(n,{to:"/doc/http/"},{default:d(()=>e[0]||(e[0]=[t("Documents")])),_:1}),e[2]||(e[2]=t(" / ")),a(n,{to:"/doc/http/"},{default:d(()=>e[1]||(e[1]=[t("@faasjs/http")])),_:1}),e[3]||(e[3]=t(" / HttpConfig"))]),e[9]||(e[9]=i('<h1 id="type-alias-httpconfig" tabindex="-1"><a class="header-anchor" href="#type-alias-httpconfig"><span>Type Alias: HttpConfig</span></a></h1><blockquote><p><strong>HttpConfig</strong> = <code>object</code></p></blockquote><h2 id="indexable" tabindex="-1"><a class="header-anchor" href="#indexable"><span>Indexable</span></a></h2><p>[<code>key</code>: <code>string</code>]: <code>any</code></p><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="config" tabindex="-1"><a class="header-anchor" href="#config"><span>config?</span></a></h3><blockquote><p><code>optional</code> <strong>config</strong>: <code>object</code></p></blockquote><h4 id="index-signature" tabindex="-1"><a class="header-anchor" href="#index-signature"><span>Index Signature</span></a></h4><p>[<code>key</code>: <code>string</code>]: <code>any</code></p><h4 id="cookie" tabindex="-1"><a class="header-anchor" href="#cookie"><span>cookie?</span></a></h4>',10)),o("blockquote",null,[o("p",null,[e[5]||(e[5]=o("code",null,"optional",-1)),e[6]||(e[6]=t()),e[7]||(e[7]=o("strong",null,"cookie",-1)),e[8]||(e[8]=t(": ")),a(n,{to:"/doc/http/type-aliases/CookieOptions.html"},{default:d(()=>e[4]||(e[4]=[o("code",null,"CookieOptions",-1)])),_:1})])]),e[10]||(e[10]=i('<h4 id="functionname" tabindex="-1"><a class="header-anchor" href="#functionname"><span>functionName?</span></a></h4><blockquote><p><code>optional</code> <strong>functionName</strong>: <code>string</code></p></blockquote><h4 id="ignorepathprefix" tabindex="-1"><a class="header-anchor" href="#ignorepathprefix"><span>ignorePathPrefix?</span></a></h4><blockquote><p><code>optional</code> <strong>ignorePathPrefix</strong>: <code>string</code></p></blockquote><h4 id="method" tabindex="-1"><a class="header-anchor" href="#method"><span>method?</span></a></h4><blockquote><p><code>optional</code> <strong>method</strong>: <code>&quot;BEGIN&quot;</code> | <code>&quot;GET&quot;</code> | <code>&quot;POST&quot;</code> | <code>&quot;DELETE&quot;</code> | <code>&quot;HEAD&quot;</code> | <code>&quot;PUT&quot;</code> | <code>&quot;OPTIONS&quot;</code> | <code>&quot;TRACE&quot;</code> | <code>&quot;PATCH&quot;</code> | <code>&quot;ANY&quot;</code></p></blockquote><p>POST as default</p><h4 id="path" tabindex="-1"><a class="header-anchor" href="#path"><span>path?</span></a></h4><blockquote><p><code>optional</code> <strong>path</strong>: <code>string</code></p></blockquote><p>file relative path as default</p><h4 id="timeout" tabindex="-1"><a class="header-anchor" href="#timeout"><span>timeout?</span></a></h4><blockquote><p><code>optional</code> <strong>timeout</strong>: <code>number</code></p></blockquote><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span>name?</span></a></h3><blockquote><p><code>optional</code> <strong>name</strong>: <code>string</code></p></blockquote>',14))])}const f=s(l,[["render",h]]),b=JSON.parse('{"path":"/doc/http/type-aliases/HttpConfig.html","title":"Type Alias: HttpConfig","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Indexable","slug":"indexable","link":"#indexable","children":[]},{"level":2,"title":"Properties","slug":"properties","link":"#properties","children":[{"level":3,"title":"config?","slug":"config","link":"#config","children":[]},{"level":3,"title":"name?","slug":"name","link":"#name","children":[]}]}],"git":{},"filePathRelative":"doc/http/type-aliases/HttpConfig.md"}');export{f as comp,b as data};
