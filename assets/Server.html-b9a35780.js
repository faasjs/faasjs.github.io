import{_ as d,M as n,p as c,q as l,R as e,N as s,V as o,t,a1 as r}from"./framework-5866ffd3.js";const i={},h=r(`<h1 id="class-server" tabindex="-1"><a class="header-anchor" href="#class-server" aria-hidden="true">#</a> Class: Server</h1><p>FaasJS Server.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> server <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Server</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
 port<span class="token operator">:</span> <span class="token number">8080</span><span class="token punctuation">,</span>
 cache<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of contents</h2><h3 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors" aria-hidden="true">#</a> Constructors</h3>`,5),p=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),u=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),g=r('<h2 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>• <strong>new Server</strong>(<code>root</code>, <code>opts?</code>)</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>root</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Project path</td></tr><tr><td style="text-align:left;"><code>opts?</code></td><td style="text-align:left;"><code>Object</code></td><td style="text-align:left;">Options</td></tr><tr><td style="text-align:left;"><code>opts.cache?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Enable cache, default is false</td></tr><tr><td style="text-align:left;"><code>opts.port?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">Port, default is 3000</td></tr></tbody></table><h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="logger" tabindex="-1"><a class="header-anchor" href="#logger" aria-hidden="true">#</a> logger</h3><p>• <code>Readonly</code> <strong>logger</strong>: <code>Logger</code></p><hr><h3 id="opts" tabindex="-1"><a class="header-anchor" href="#opts" aria-hidden="true">#</a> opts</h3><p>• <code>Readonly</code> <strong>opts</strong>: <code>Object</code></p><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>cache</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>port</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><hr><h3 id="root" tabindex="-1"><a class="header-anchor" href="#root" aria-hidden="true">#</a> root</h3><p>• <code>Readonly</code> <strong>root</strong>: <code>string</code></p><h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="close" tabindex="-1"><a class="header-anchor" href="#close" aria-hidden="true">#</a> close</h3><p>▸ <strong>close</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><hr><h3 id="listen" tabindex="-1"><a class="header-anchor" href="#listen" aria-hidden="true">#</a> listen</h3><p>▸ <strong>listen</strong>(): <code>Server</code>&lt;typeof <code>IncomingMessage</code>, typeof <code>ServerResponse</code>&gt;</p><p>Start server.</p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code>Server</code>&lt;typeof <code>IncomingMessage</code>, typeof <code>ServerResponse</code>&gt;</p><hr><h3 id="processrequest" tabindex="-1"><a class="header-anchor" href="#processrequest" aria-hidden="true">#</a> processRequest</h3><p>▸ <strong>processRequest</strong>(<code>req</code>, <code>res</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>req</code></td><td style="text-align:left;"><code>IncomingMessage</code></td></tr><tr><td style="text-align:left;"><code>res</code></td><td style="text-align:left;"><code>ServerResponse</code>&lt;<code>IncomingMessage</code>&gt; &amp; { <code>end</code>: () =&gt; <code>void</code> ; <code>setHeader</code>: (<code>key</code>: <code>string</code>, <code>value</code>: <code>string</code>) =&gt; <code>void</code> ; <code>statusCode</code>: <code>number</code> ; <code>write</code>: (<code>body</code>: <code>string</code> | <code>Buffer</code>) =&gt; <code>void</code> }</td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p>',34);function f(v,b){const a=n("RouterLink");return c(),l("div",null,[h,e("ul",null,[e("li",null,[s(a,{to:"/doc/server/classes/Server.html#constructor"},{default:o(()=>[t("constructor")]),_:1})])]),p,e("ul",null,[e("li",null,[s(a,{to:"/doc/server/classes/Server.html#logger"},{default:o(()=>[t("logger")]),_:1})]),e("li",null,[s(a,{to:"/doc/server/classes/Server.html#opts"},{default:o(()=>[t("opts")]),_:1})]),e("li",null,[s(a,{to:"/doc/server/classes/Server.html#root"},{default:o(()=>[t("root")]),_:1})])]),u,e("ul",null,[e("li",null,[s(a,{to:"/doc/server/classes/Server.html#close"},{default:o(()=>[t("close")]),_:1})]),e("li",null,[s(a,{to:"/doc/server/classes/Server.html#listen"},{default:o(()=>[t("listen")]),_:1})]),e("li",null,[s(a,{to:"/doc/server/classes/Server.html#processrequest"},{default:o(()=>[t("processRequest")]),_:1})])]),g])}const y=d(i,[["render",f],["__file","Server.html.vue"]]);export{y as default};
