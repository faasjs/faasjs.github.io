import{_ as p,c as l,b as a,d as t,e as o,f as n,a as r,r as i,o as c}from"./app-Gpm8LlV-.js";const d={};function u(g,s){const e=i("RouteLink");return c(),l("div",null,[a("p",null,[t(e,{to:"/doc/logger/"},{default:o(()=>s[0]||(s[0]=[n("Documents")])),_:1}),s[2]||(s[2]=n(" / ")),t(e,{to:"/doc/logger/"},{default:o(()=>s[1]||(s[1]=[n("@faasjs/logger")])),_:1}),s[3]||(s[3]=n(" / insertMessageToTransport"))]),s[5]||(s[5]=r('<h1 id="function-insertmessagetotransport" tabindex="-1"><a class="header-anchor" href="#function-insertmessagetotransport"><span>Function: insertMessageToTransport()</span></a></h1><blockquote><p><strong>insertMessageToTransport</strong>(<code>message</code>): <code>void</code></p></blockquote><p>Inserts a log message into the transport.</p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="message" tabindex="-1"><a class="header-anchor" href="#message"><span>message</span></a></h3>',5)),a("p",null,[t(e,{to:"/doc/logger/type-aliases/LoggerMessage.html"},{default:o(()=>s[4]||(s[4]=[a("code",null,"LoggerMessage",-1)])),_:1})]),s[6]||(s[6]=r(`<p>The log message to insert.</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>void</code></p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> insertMessageToTransport <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/logger&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">insertMessageToTransport</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  level<span class="token operator">:</span> <span class="token string">&#39;info&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  labels<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;server&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  message<span class="token operator">:</span> <span class="token string">&#39;test message&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  timestamp<span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5))])}const k=p(d,[["render",u],["__file","insertMessageToTransport.html.vue"]]),v=JSON.parse('{"path":"/doc/logger/functions/insertMessageToTransport.html","title":"Function: insertMessageToTransport()","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Parameters","slug":"parameters","link":"#parameters","children":[{"level":3,"title":"message","slug":"message","link":"#message","children":[]}]},{"level":2,"title":"Returns","slug":"returns","link":"#returns","children":[]},{"level":2,"title":"Example","slug":"example","link":"#example","children":[]}],"git":{},"filePathRelative":"doc/logger/functions/insertMessageToTransport.md"}');export{k as comp,v as data};
