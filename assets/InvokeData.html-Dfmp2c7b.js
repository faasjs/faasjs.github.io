import{_ as r,c as d,b as t,d as l,e as a,f as n,a as s,r as i,o as p}from"./app-CieyNHVH.js";const g={};function u(c,e){const o=i("RouteLink");return p(),d("div",null,[t("p",null,[l(o,{to:"/doc/test/"},{default:a(()=>e[0]||(e[0]=[n("Documents")])),_:1}),e[2]||(e[2]=n(" / ")),l(o,{to:"/doc/test/"},{default:a(()=>e[1]||(e[1]=[n("@faasjs/test")])),_:1}),e[3]||(e[3]=n(" / InvokeData"))]),e[19]||(e[19]=s('<h1 id="type-alias-invokedata-tevent-tcontext-tresult" tabindex="-1"><a class="header-anchor" href="#type-alias-invokedata-tevent-tcontext-tresult"><span>Type Alias: InvokeData&lt;TEvent, TContext, TResult&gt;</span></a></h1><blockquote><p><strong>InvokeData</strong>&lt;<code>TEvent</code>, <code>TContext</code>, <code>TResult</code>&gt;: <code>object</code></p></blockquote><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><p>• <strong>TEvent</strong> = <code>any</code></p><p>• <strong>TContext</strong> = <code>any</code></p><p>• <strong>TResult</strong> = <code>any</code></p><h2 id="index-signature" tabindex="-1"><a class="header-anchor" href="#index-signature"><span>Index Signature</span></a></h2><p>[<code>key</code>: <code>string</code>]: <code>any</code></p><h2 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration"><span>Type declaration</span></a></h2><h3 id="callback" tabindex="-1"><a class="header-anchor" href="#callback"><span>callback</span></a></h3><blockquote><p><strong>callback</strong>: <code>any</code></p></blockquote><h3 id="config" tabindex="-1"><a class="header-anchor" href="#config"><span>config</span></a></h3>',12)),t("blockquote",null,[t("p",null,[e[5]||(e[5]=t("strong",null,"config",-1)),e[6]||(e[6]=n(": ")),l(o,{to:"/doc/test/type-aliases/Config.html"},{default:a(()=>e[4]||(e[4]=[t("code",null,"Config",-1)])),_:1})])]),e[20]||(e[20]=s('<h3 id="context" tabindex="-1"><a class="header-anchor" href="#context"><span>context</span></a></h3><blockquote><p><strong>context</strong>: <code>TContext</code></p></blockquote><h3 id="event" tabindex="-1"><a class="header-anchor" href="#event"><span>event</span></a></h3><blockquote><p><strong>event</strong>: <code>TEvent</code></p></blockquote><h3 id="handler" tabindex="-1"><a class="header-anchor" href="#handler"><span>handler?</span></a></h3>',5)),t("blockquote",null,[t("p",null,[e[8]||(e[8]=t("code",null,"optional",-1)),e[9]||(e[9]=n()),e[10]||(e[10]=t("strong",null,"handler",-1)),e[11]||(e[11]=n(": ")),l(o,{to:"/doc/test/type-aliases/Handler.html"},{default:a(()=>e[7]||(e[7]=[t("code",null,"Handler",-1)])),_:1}),e[12]||(e[12]=n("<")),e[13]||(e[13]=t("code",null,"TEvent",-1)),e[14]||(e[14]=n(", ")),e[15]||(e[15]=t("code",null,"TContext",-1)),e[16]||(e[16]=n(", ")),e[17]||(e[17]=t("code",null,"TResult",-1)),e[18]||(e[18]=n(">"))])]),e[21]||(e[21]=s('<h3 id="logger" tabindex="-1"><a class="header-anchor" href="#logger"><span>logger</span></a></h3><blockquote><p><strong>logger</strong>: <code>Logger</code></p></blockquote><h3 id="response" tabindex="-1"><a class="header-anchor" href="#response"><span>response</span></a></h3><blockquote><p><strong>response</strong>: <code>any</code></p></blockquote>',4))])}const v=r(g,[["render",u],["__file","InvokeData.html.vue"]]),h=JSON.parse('{"path":"/doc/test/type-aliases/InvokeData.html","title":"Type Alias: InvokeData<TEvent, TContext, TResult>","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type Parameters","slug":"type-parameters","link":"#type-parameters","children":[]},{"level":2,"title":"Index Signature","slug":"index-signature","link":"#index-signature","children":[]},{"level":2,"title":"Type declaration","slug":"type-declaration","link":"#type-declaration","children":[{"level":3,"title":"callback","slug":"callback","link":"#callback","children":[]},{"level":3,"title":"config","slug":"config","link":"#config","children":[]},{"level":3,"title":"context","slug":"context","link":"#context","children":[]},{"level":3,"title":"event","slug":"event","link":"#event","children":[]},{"level":3,"title":"handler?","slug":"handler","link":"#handler","children":[]},{"level":3,"title":"logger","slug":"logger","link":"#logger","children":[]},{"level":3,"title":"response","slug":"response","link":"#response","children":[]}]}],"git":{},"filePathRelative":"doc/test/type-aliases/InvokeData.md"}');export{v as comp,h as data};
