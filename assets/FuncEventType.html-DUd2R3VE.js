import{_ as c,r as o,c as p,b as n,d as a,w as t,e as s,a as l,o as u}from"./app-BWiaK5Su.js";const i={},r=n("h1",{id:"type-alias-funceventtype-t",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#type-alias-funceventtype-t"},[n("span",null,"Type alias: FuncEventType<T>")])],-1),d=n("strong",null,"FuncEventType",-1),_=n("code",null,"T",-1),h=n("code",null,"T",-1),m=n("em",null,"extends",-1),k=n("code",null,"Func",-1),y=n("code",null,"any",-1),f=n("code",null,"any",-1),v=n("code",null,"P",-1),T=n("code",null,"any",-1),g=l(`<p>Get the event type of a func</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> useFunc<span class="token punctuation">,</span> <span class="token keyword">type</span> <span class="token class-name">FuncEventType</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/func&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> func <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useFunc</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token punctuation">{</span> counter<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">FuncEventType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> func<span class="token operator">&gt;</span> <span class="token comment">// =&gt; { counter: number }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type parameters</span></a></h2>`,4),x=n("strong",null,"T",-1),b=n("em",null,"extends",-1),F=n("code",null,"Func",-1),E=n("code",null,"any",-1),w=n("code",null,"any",-1),N=n("code",null,"any",-1);function V(j,B){const e=o("RouteLink");return u(),p("div",null,[n("p",null,[a(e,{to:"/doc/func/"},{default:t(()=>[s("Documents")]),_:1}),s(" / "),a(e,{to:"/doc/func/"},{default:t(()=>[s("@faasjs/func")]),_:1}),s(" / FuncEventType")]),r,n("blockquote",null,[n("p",null,[d,s("<"),_,s(">: "),h,s(),m,s(),a(e,{to:"/doc/func/classes/Func.html"},{default:t(()=>[k]),_:1}),s("<infer P, "),y,s(", "),f,s("> ? "),v,s(" : "),T])]),g,n("p",null,[s("â€¢ "),x,s(),b,s(),a(e,{to:"/doc/func/classes/Func.html"},{default:t(()=>[F]),_:1}),s("<"),E,s(", "),w,s(", "),N,s(">")])])}const R=c(i,[["render",V],["__file","FuncEventType.html.vue"]]),C=JSON.parse('{"path":"/doc/func/type-aliases/FuncEventType.html","title":"Type alias: FuncEventType<T>","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Example","slug":"example","link":"#example","children":[]},{"level":2,"title":"Type parameters","slug":"type-parameters","link":"#type-parameters","children":[]}],"git":{"updatedTime":null},"filePathRelative":"doc/func/type-aliases/FuncEventType.md"}');export{R as comp,C as data};
