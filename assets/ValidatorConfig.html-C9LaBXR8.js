import{_ as n,r as l,o as i,c as d,a as e,d as a,w as s,b as o,e as c}from"./app-DPCpIb64.js";const r={},p=c('<h1 id="type-alias-validatorconfig-tparams-tcookie-tsession" tabindex="-1"><a class="header-anchor" href="#type-alias-validatorconfig-tparams-tcookie-tsession"><span>Type alias: ValidatorConfig&lt;TParams, TCookie, TSession&gt;</span></a></h1><blockquote><p><strong>ValidatorConfig</strong>&lt;<code>TParams</code>, <code>TCookie</code>, <code>TSession</code>&gt;: <code>Object</code></p></blockquote><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type parameters</span></a></h2><p>• <strong>TParams</strong> extends <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; = <code>any</code></p><p>• <strong>TCookie</strong> extends <code>Record</code>&lt;<code>string</code>, <code>string</code>&gt; = <code>any</code></p><p>• <strong>TSession</strong> extends <code>Record</code>&lt;<code>string</code>, <code>string</code>&gt; = <code>any</code></p><h2 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration"><span>Type declaration</span></a></h2><h3 id="before" tabindex="-1"><a class="header-anchor" href="#before"><span>before?</span></a></h3><blockquote><p><strong><code>optional</code></strong> <strong>before</strong>: <code>BeforeOption</code></p></blockquote><h3 id="cookie" tabindex="-1"><a class="header-anchor" href="#cookie"><span>cookie?</span></a></h3>',10),h=e("strong",null,[e("code",null,"optional")],-1),u=e("strong",null,"cookie",-1),_=e("code",null,"ValidatorOptions",-1),g=e("code",null,"TCookie",-1),f=e("h3",{id:"params",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#params"},[e("span",null,"params?")])],-1),m=e("strong",null,[e("code",null,"optional")],-1),k=e("strong",null,"params",-1),y=e("code",null,"ValidatorOptions",-1),b=e("code",null,"TParams",-1),T=e("h3",{id:"session",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#session"},[e("span",null,"session?")])],-1),V=e("strong",null,[e("code",null,"optional")],-1),x=e("strong",null,"session",-1),C=e("code",null,"ValidatorOptions",-1),v=e("code",null,"TSession",-1);function O(q,S){const t=l("RouteLink");return i(),d("div",null,[e("p",null,[a(t,{to:"/doc/http/"},{default:s(()=>[o("Documents")]),_:1}),o(" / "),a(t,{to:"/doc/http/"},{default:s(()=>[o("@faasjs/http")]),_:1}),o(" / ValidatorConfig")]),p,e("blockquote",null,[e("p",null,[h,o(),u,o(": "),a(t,{to:"/doc/http/type-aliases/ValidatorOptions.html"},{default:s(()=>[_]),_:1}),o("<"),g,o(">")])]),f,e("blockquote",null,[e("p",null,[m,o(),k,o(": "),a(t,{to:"/doc/http/type-aliases/ValidatorOptions.html"},{default:s(()=>[y]),_:1}),o("<"),b,o(">")])]),T,e("blockquote",null,[e("p",null,[V,o(),x,o(": "),a(t,{to:"/doc/http/type-aliases/ValidatorOptions.html"},{default:s(()=>[C]),_:1}),o("<"),v,o(">")])])])}const R=n(r,[["render",O],["__file","ValidatorConfig.html.vue"]]),N=JSON.parse('{"path":"/doc/http/type-aliases/ValidatorConfig.html","title":"Type alias: ValidatorConfig<TParams, TCookie, TSession>","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type parameters","slug":"type-parameters","link":"#type-parameters","children":[]},{"level":2,"title":"Type declaration","slug":"type-declaration","link":"#type-declaration","children":[{"level":3,"title":"before?","slug":"before","link":"#before","children":[]},{"level":3,"title":"cookie?","slug":"cookie","link":"#cookie","children":[]},{"level":3,"title":"params?","slug":"params","link":"#params","children":[]},{"level":3,"title":"session?","slug":"session","link":"#session","children":[]}]}],"git":{"updatedTime":null},"filePathRelative":"doc/http/type-aliases/ValidatorConfig.md"}');export{R as comp,N as data};
