import{_ as i,c as r,b as o,d as a,e as n,f as t,a as d,r as s,o as p}from"./app-e0cYwDyG.js";const u={};function c(h,e){const l=s("RouteLink");return p(),r("div",null,[o("p",null,[a(l,{to:"/doc/http/"},{default:n(()=>e[0]||(e[0]=[t("Documents")])),_:1}),e[2]||(e[2]=t(" / ")),a(l,{to:"/doc/http/"},{default:n(()=>e[1]||(e[1]=[t("@faasjs/http")])),_:1}),e[3]||(e[3]=t(" / ValidatorRuleOptions"))]),e[12]||(e[12]=d('<h1 id="type-alias-validatorruleoptions" tabindex="-1"><a class="header-anchor" href="#type-alias-validatorruleoptions"><span>Type Alias: <s>ValidatorRuleOptions</s></span></a></h1><blockquote><p><strong>ValidatorRuleOptions</strong>: <code>object</code></p></blockquote><h2 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration"><span>Type declaration</span></a></h2><h3 id="config" tabindex="-1"><a class="header-anchor" href="#config"><span><s>config?</s></span></a></h3>',4)),o("blockquote",null,[o("p",null,[e[5]||(e[5]=o("code",null,"optional",-1)),e[6]||(e[6]=t()),e[7]||(e[7]=o("strong",null,"config",-1)),e[8]||(e[8]=t(": ")),e[9]||(e[9]=o("code",null,"Partial",-1)),e[10]||(e[10]=t("<")),a(l,{to:"/doc/http/type-aliases/ValidatorOptions.html"},{default:n(()=>e[4]||(e[4]=[o("code",null,"ValidatorOptions",-1)])),_:1}),e[11]||(e[11]=t(">"))])]),e[13]||(e[13]=d('<h3 id="default" tabindex="-1"><a class="header-anchor" href="#default"><span><s>default?</s></span></a></h3><blockquote><p><code>optional</code> <strong>default</strong>: <code>any</code></p></blockquote><h3 id="in" tabindex="-1"><a class="header-anchor" href="#in"><span><s>in?</s></span></a></h3><blockquote><p><code>optional</code> <strong>in</strong>: <code>any</code>[]</p></blockquote><h3 id="regexp" tabindex="-1"><a class="header-anchor" href="#regexp"><span><s>regexp?</s></span></a></h3><blockquote><p><code>optional</code> <strong>regexp</strong>: <code>RegExp</code></p></blockquote><h3 id="required" tabindex="-1"><a class="header-anchor" href="#required"><span><s>required?</s></span></a></h3><blockquote><p><code>optional</code> <strong>required</strong>: <code>boolean</code></p></blockquote><h3 id="type" tabindex="-1"><a class="header-anchor" href="#type"><span><s>type?</s></span></a></h3><blockquote><p><code>optional</code> <strong>type</strong>: <code>ValidatorRuleOptionsType</code></p></blockquote><h2 id="deprecated" tabindex="-1"><a class="header-anchor" href="#deprecated"><span>Deprecated</span></a></h2>',11))])}const f=i(u,[["render",c],["__file","ValidatorRuleOptions.html.vue"]]),b=JSON.parse('{"path":"/doc/http/type-aliases/ValidatorRuleOptions.html","title":"Type Alias: ValidatorRuleOptions","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type declaration","slug":"type-declaration","link":"#type-declaration","children":[{"level":3,"title":"config?","slug":"config","link":"#config","children":[]},{"level":3,"title":"default?","slug":"default","link":"#default","children":[]},{"level":3,"title":"in?","slug":"in","link":"#in","children":[]},{"level":3,"title":"regexp?","slug":"regexp","link":"#regexp","children":[]},{"level":3,"title":"required?","slug":"required","link":"#required","children":[]},{"level":3,"title":"type?","slug":"type","link":"#type","children":[]}]},{"level":2,"title":"Deprecated","slug":"deprecated","link":"#deprecated","children":[]}],"git":{"updatedTime":null},"filePathRelative":"doc/http/type-aliases/ValidatorRuleOptions.md"}');export{f as comp,b as data};
