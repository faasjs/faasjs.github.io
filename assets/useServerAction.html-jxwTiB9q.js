import{_ as o,r as p,c,b as l,d as e,w as t,e as a,a as r,o as i}from"./app-Cr2IsOke.js";const d={};function u(k,n){const s=p("RouteLink");return i(),c("div",null,[l("p",null,[e(s,{to:"/doc/nextjs/"},{default:t(()=>n[0]||(n[0]=[a("Documents")])),_:1}),n[2]||(n[2]=a(" / ")),e(s,{to:"/doc/nextjs/"},{default:t(()=>n[1]||(n[1]=[a("@faasjs/nextjs")])),_:1}),n[3]||(n[3]=a(" / useServerAction"))]),n[4]||(n[4]=r(`<h1 id="function-useserveraction" tabindex="-1"><a class="header-anchor" href="#function-useserveraction"><span>Function: useServerAction()</span></a></h1><blockquote><p><strong>useServerAction</strong>&lt;<code>TAction</code>&gt;(<code>action</code>, <code>params</code>?): <code>object</code></p></blockquote><p>Hook to call a server action and handle loading and error states</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><p>• <strong>TAction</strong> <em>extends</em> (...<code>args</code>) =&gt; <code>Promise</code>&lt;<code>object</code>&gt; = <code>any</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><p>• <strong>action</strong>: <code>TAction</code></p><p>• <strong>params?</strong>: <code>Parameters</code>&lt;<code>TAction</code>&gt;</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>object</code></p><h3 id="data" tabindex="-1"><a class="header-anchor" href="#data"><span>data</span></a></h3><blockquote><p><strong>data</strong>: <code>Awaited</code>&lt;<code>ReturnType</code>&lt;<code>TAction</code>&gt;&gt;</p></blockquote><h3 id="error" tabindex="-1"><a class="header-anchor" href="#error"><span>error</span></a></h3><blockquote><p><strong>error</strong>: <code>Error</code></p></blockquote><h3 id="loading" tabindex="-1"><a class="header-anchor" href="#loading"><span>loading</span></a></h3><blockquote><p><strong>loading</strong>: <code>boolean</code></p></blockquote><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-tsx line-numbers-mode" data-highlighter="prismjs" data-ext="tsx" data-title="tsx"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> useServerAction <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/nextjs/client&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> fetchData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./fetchData&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">Example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">{</span> data<span class="token punctuation">,</span> error<span class="token punctuation">,</span> loading <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useServerAction</span><span class="token punctuation">(</span>fetchData<span class="token punctuation">,</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>loading<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Loading...</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Error: </span><span class="token punctuation">{</span>error<span class="token punctuation">.</span>message<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Data: </span><span class="token punctuation">{</span>data<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18))])}const m=o(d,[["render",u],["__file","useServerAction.html.vue"]]),v=JSON.parse('{"path":"/doc/nextjs/functions/useServerAction.html","title":"Function: useServerAction()","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type Parameters","slug":"type-parameters","link":"#type-parameters","children":[]},{"level":2,"title":"Parameters","slug":"parameters","link":"#parameters","children":[]},{"level":2,"title":"Returns","slug":"returns","link":"#returns","children":[{"level":3,"title":"data","slug":"data","link":"#data","children":[]},{"level":3,"title":"error","slug":"error","link":"#error","children":[]},{"level":3,"title":"loading","slug":"loading","link":"#loading","children":[]}]},{"level":2,"title":"Example","slug":"example","link":"#example","children":[]}],"git":{"updatedTime":null},"filePathRelative":"doc/nextjs/functions/useServerAction.md"}');export{m as comp,v as data};
