import{_ as r,r as a,c as d,b as t,d as o,w as s,e,a as i,o as u}from"./app-DuUfl_D8.js";const p={};function f(g,n){const l=a("RouteLink");return u(),d("div",null,[t("p",null,[o(l,{to:"/doc/func/"},{default:s(()=>n[0]||(n[0]=[e("Documents")])),_:1}),n[2]||(n[2]=e(" / ")),o(l,{to:"/doc/func/"},{default:s(()=>n[1]||(n[1]=[e("@faasjs/func")])),_:1}),n[3]||(n[3]=e(" / FuncConfig"))]),n[22]||(n[22]=i('<h1 id="type-alias-funcconfig-tevent-tcontext-tresult" tabindex="-1"><a class="header-anchor" href="#type-alias-funcconfig-tevent-tcontext-tresult"><span>Type Alias: FuncConfig&lt;TEvent, TContext, TResult&gt;</span></a></h1><blockquote><p><strong>FuncConfig</strong>&lt;<code>TEvent</code>, <code>TContext</code>, <code>TResult</code>&gt;: <code>object</code></p></blockquote><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><p>• <strong>TEvent</strong> = <code>any</code></p><p>• <strong>TContext</strong> = <code>any</code></p><p>• <strong>TResult</strong> = <code>any</code></p><h2 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration"><span>Type declaration</span></a></h2><h3 id="handler" tabindex="-1"><a class="header-anchor" href="#handler"><span>handler?</span></a></h3>',8)),t("blockquote",null,[t("p",null,[n[5]||(n[5]=t("code",null,"optional",-1)),n[6]||(n[6]=e()),n[7]||(n[7]=t("strong",null,"handler",-1)),n[8]||(n[8]=e(": ")),o(l,{to:"/doc/func/type-aliases/Handler.html"},{default:s(()=>n[4]||(n[4]=[t("code",null,"Handler",-1)])),_:1}),n[9]||(n[9]=e("<")),n[10]||(n[10]=t("code",null,"TEvent",-1)),n[11]||(n[11]=e(", ")),n[12]||(n[12]=t("code",null,"TContext",-1)),n[13]||(n[13]=e(", ")),n[14]||(n[14]=t("code",null,"TResult",-1)),n[15]||(n[15]=e(">"))])]),n[23]||(n[23]=t("h3",{id:"plugins",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#plugins"},[t("span",null,"plugins?")])],-1)),t("blockquote",null,[t("p",null,[n[17]||(n[17]=t("code",null,"optional",-1)),n[18]||(n[18]=e()),n[19]||(n[19]=t("strong",null,"plugins",-1)),n[20]||(n[20]=e(": ")),o(l,{to:"/doc/func/type-aliases/Plugin.html"},{default:s(()=>n[16]||(n[16]=[t("code",null,"Plugin",-1)])),_:1}),n[21]||(n[21]=e("[]"))])])])}const T=r(p,[["render",f],["__file","FuncConfig.html.vue"]]),m=JSON.parse('{"path":"/doc/func/type-aliases/FuncConfig.html","title":"Type Alias: FuncConfig<TEvent, TContext, TResult>","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type Parameters","slug":"type-parameters","link":"#type-parameters","children":[]},{"level":2,"title":"Type declaration","slug":"type-declaration","link":"#type-declaration","children":[{"level":3,"title":"handler?","slug":"handler","link":"#handler","children":[]},{"level":3,"title":"plugins?","slug":"plugins","link":"#plugins","children":[]}]}],"git":{"updatedTime":null},"filePathRelative":"doc/func/type-aliases/FuncConfig.md"}');export{T as comp,m as data};
