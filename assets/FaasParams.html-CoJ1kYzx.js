import{_ as r,c as d,b as c,a as n,d as s,e as a,w as o,r as l,o as p}from"./app-CyTIR1Xe.js";const i={};function m(f,e){const t=l("RouteLink");return p(),d("div",null,[c("p",null,[s(t,{to:"/doc/react/"},{default:o(()=>e[0]||(e[0]=[a("Documents")])),_:1}),e[2]||(e[2]=a(" / ")),s(t,{to:"/doc/react/"},{default:o(()=>e[1]||(e[1]=[a("@faasjs/react")])),_:1}),e[3]||(e[3]=a(" / FaasParams"))]),e[4]||(e[4]=n('<h1 id="type-alias-faasparams-t" tabindex="-1"><a class="header-anchor" href="#type-alias-faasparams-t"><span>Type Alias: FaasParams&lt;T&gt;</span></a></h1><blockquote><p><strong>FaasParams</strong>&lt;<code>T</code>&gt; = <code>T</code> <em>extends</em> <code>FaasActionPaths</code> ? <code>FaasActions</code>[<code>T</code>][<code>&quot;Params&quot;</code>] : <code>T</code> <em>extends</em> <code>ReactServerAction</code> ? <code>Parameters</code>&lt;<code>T</code>&gt;[<code>0</code>] : <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</p></blockquote><p>Infer the parameters type.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="t" tabindex="-1"><a class="header-anchor" href="#t"><span>T</span></a></h3><p><code>T</code> = <code>any</code></p>',6))])}const u=r(i,[["render",m]]),y=JSON.parse('{"path":"/doc/react/type-aliases/FaasParams.html","title":"Type Alias: FaasParams<T>","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type Parameters","slug":"type-parameters","link":"#type-parameters","children":[{"level":3,"title":"T","slug":"t","link":"#t","children":[]}]}],"git":{},"filePathRelative":"doc/react/type-aliases/FaasParams.md"}');export{u as comp,y as data};
