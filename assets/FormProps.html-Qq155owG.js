import{_ as l,r as d,c as i,b as e,d as s,w as n,e as t,a,o as r}from"./app--Hv8fpCh.js";const c={},p=a('<h1 id="interface-formprops-values-extenditemprops" tabindex="-1"><a class="header-anchor" href="#interface-formprops-values-extenditemprops"><span>Interface: FormProps&lt;Values, ExtendItemProps&gt;</span></a></h1><h2 id="extends" tabindex="-1"><a class="header-anchor" href="#extends"><span>Extends</span></a></h2><ul><li><code>Omit</code>&lt;<code>AntdFormProps</code>&lt;<code>Values</code>&gt;, <code>&quot;onFinish&quot;</code> | <code>&quot;children&quot;</code> | <code>&quot;initialValues&quot;</code>&gt;</li></ul><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><p>• <strong>Values</strong> <em>extends</em> <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; = <code>any</code></p><p>• <strong>ExtendItemProps</strong> = <code>any</code></p><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="beforeitems" tabindex="-1"><a class="header-anchor" href="#beforeitems"><span>beforeItems?</span></a></h3><blockquote><p><code>optional</code> <strong>beforeItems</strong>: <code>Element</code> | <code>Element</code>[]</p></blockquote><h3 id="children" tabindex="-1"><a class="header-anchor" href="#children"><span>children?</span></a></h3><blockquote><p><code>optional</code> <strong>children</strong>: <code>ReactNode</code></p></blockquote><h3 id="extendtypes" tabindex="-1"><a class="header-anchor" href="#extendtypes"><span>extendTypes?</span></a></h3>',12),h=e("code",null,"optional",-1),u=e("strong",null,"extendTypes",-1),m=e("code",null,"ExtendTypes",-1),f=a('<h3 id="footer" tabindex="-1"><a class="header-anchor" href="#footer"><span>footer?</span></a></h3><blockquote><p><code>optional</code> <strong>footer</strong>: <code>Element</code> | <code>Element</code>[]</p></blockquote><h3 id="initialvalues" tabindex="-1"><a class="header-anchor" href="#initialvalues"><span>initialValues?</span></a></h3><blockquote><p><code>optional</code> <strong>initialValues</strong>: <code>Values</code></p></blockquote><h3 id="items" tabindex="-1"><a class="header-anchor" href="#items"><span>items?</span></a></h3>',5),_=e("code",null,"optional",-1),g=e("strong",null,"items",-1),b=e("code",null,"Element",-1),x=e("code",null,"FormItemProps",-1),k=e("code",null,"any",-1),P=e("code",null,"ExtendItemProps",-1),v=a('<h3 id="onfinish" tabindex="-1"><a class="header-anchor" href="#onfinish"><span>onFinish()?</span></a></h3><blockquote><p><code>optional</code> <strong>onFinish</strong>: (<code>values</code>, <code>submit</code>?) =&gt; <code>Promise</code>&lt;<code>any</code>&gt;</p></blockquote><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><p>• <strong>values</strong>: <code>Values</code></p><p>• <strong>submit?</strong></p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>any</code>&gt;</p><h3 id="submit" tabindex="-1"><a class="header-anchor" href="#submit"><span>submit?</span></a></h3>',8),y=e("code",null,"optional",-1),q=e("strong",null,"submit",-1),F=e("code",null,"false",-1),E=e("code",null,"FormSubmitProps",-1),V=e("p",null,"Default: { text: 'Submit' }, set false to disable it",-1);function I(T,N){const o=d("RouteLink");return r(),i("div",null,[e("p",null,[s(o,{to:"/doc/ant-design/"},{default:n(()=>[t("Documents")]),_:1}),t(" / "),s(o,{to:"/doc/ant-design/"},{default:n(()=>[t("@faasjs/ant-design")]),_:1}),t(" / FormProps")]),p,e("blockquote",null,[e("p",null,[h,t(),u,t(": "),s(o,{to:"/doc/ant-design/type-aliases/ExtendTypes.html"},{default:n(()=>[m]),_:1})])]),f,e("blockquote",null,[e("p",null,[_,t(),g,t(": ("),b,t(" | "),s(o,{to:"/doc/ant-design/interfaces/FormItemProps.html"},{default:n(()=>[x]),_:1}),t("<"),k,t("> | "),P,t(")[]")])]),v,e("blockquote",null,[e("p",null,[y,t(),q,t(": "),F,t(" | "),s(o,{to:"/doc/ant-design/type-aliases/FormSubmitProps.html"},{default:n(()=>[E]),_:1})])]),V])}const S=l(c,[["render",I],["__file","FormProps.html.vue"]]),B=JSON.parse('{"path":"/doc/ant-design/interfaces/FormProps.html","title":"Interface: FormProps<Values, ExtendItemProps>","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Extends","slug":"extends","link":"#extends","children":[]},{"level":2,"title":"Type Parameters","slug":"type-parameters","link":"#type-parameters","children":[]},{"level":2,"title":"Properties","slug":"properties","link":"#properties","children":[{"level":3,"title":"beforeItems?","slug":"beforeitems","link":"#beforeitems","children":[]},{"level":3,"title":"children?","slug":"children","link":"#children","children":[]},{"level":3,"title":"extendTypes?","slug":"extendtypes","link":"#extendtypes","children":[]},{"level":3,"title":"footer?","slug":"footer","link":"#footer","children":[]},{"level":3,"title":"initialValues?","slug":"initialvalues","link":"#initialvalues","children":[]},{"level":3,"title":"items?","slug":"items","link":"#items","children":[]},{"level":3,"title":"onFinish()?","slug":"onfinish","link":"#onfinish","children":[]},{"level":3,"title":"submit?","slug":"submit","link":"#submit","children":[]}]}],"git":{"updatedTime":null},"filePathRelative":"doc/ant-design/interfaces/FormProps.md"}');export{S as comp,B as data};
