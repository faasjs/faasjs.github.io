import{_ as t,c as d,b as e,a as p,d as n,e as r,w as o,r as l,o as i}from"./app-Da9LvgXD.js";const c={};function u(h,s){const a=l("RouteLink");return i(),d("div",null,[e("p",null,[n(a,{to:"/doc/browser/"},{default:o(()=>s[0]||(s[0]=[r("Documents")])),_:1,__:[0]}),s[2]||(s[2]=r(" / ")),n(a,{to:"/doc/browser/"},{default:o(()=>s[1]||(s[1]=[r("@faasjs/browser")])),_:1,__:[1]}),s[3]||(s[3]=r(" / ResponseError"))]),s[18]||(s[18]=p(`<h1 id="class-responseerror" tabindex="-1"><a class="header-anchor" href="#class-responseerror"><span>Class: ResponseError</span></a></h1><p>Custom error class to handle HTTP response errors.</p><p>ResponseError</p><h2 id="param" tabindex="-1"><a class="header-anchor" href="#param"><span>Param</span></a></h2><p>The error message, an Error object, or a ResponseErrorProps object.</p><h2 id="param-1" tabindex="-1"><a class="header-anchor" href="#param-1"><span>Param</span></a></h2><p>Additional options for the error.</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">new</span> <span class="token class-name">ResponseError</span><span class="token punctuation">(</span><span class="token string">&#39;error message&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">new</span> <span class="token class-name">ResponseError</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;error message&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">new</span> <span class="token class-name">ResponseError</span><span class="token punctuation">(</span><span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token string">&#39;not found&#39;</span><span class="token punctuation">,</span> status<span class="token operator">:</span> <span class="token number">404</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="extends" tabindex="-1"><a class="header-anchor" href="#extends"><span>Extends</span></a></h2><ul><li><code>Error</code></li></ul><h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor"><span>Constructor</span></a></h3><blockquote><p><strong>new ResponseError</strong>(<code>msg</code>, <code>options?</code>): <code>ResponseError</code></p></blockquote><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="msg" tabindex="-1"><a class="header-anchor" href="#msg"><span>msg</span></a></h5><p><code>string</code> | <code>Error</code></p><h5 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options?</span></a></h5>`,18)),e("p",null,[s[5]||(s[5]=e("code",null,"Omit",-1)),s[6]||(s[6]=r("<")),n(a,{to:"/doc/browser/type-aliases/ResponseErrorProps.html"},{default:o(()=>s[4]||(s[4]=[e("code",null,"ResponseErrorProps",-1)])),_:1,__:[4]}),s[7]||(s[7]=r(", ")),s[8]||(s[8]=e("code",null,'"message"',-1)),s[9]||(s[9]=r(" | ")),s[10]||(s[10]=e("code",null,'"originalError"',-1)),s[11]||(s[11]=r(">"))]),s[19]||(s[19]=p('<h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>ResponseError</code></p><h4 id="overrides" tabindex="-1"><a class="header-anchor" href="#overrides"><span>Overrides</span></a></h4><p><code>Error.constructor</code></p><h3 id="constructor-1" tabindex="-1"><a class="header-anchor" href="#constructor-1"><span>Constructor</span></a></h3><blockquote><p><strong>new ResponseError</strong>(<code>props</code>): <code>ResponseError</code></p></blockquote><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><h5 id="props" tabindex="-1"><a class="header-anchor" href="#props"><span>props</span></a></h5>',8)),e("p",null,[n(a,{to:"/doc/browser/type-aliases/ResponseErrorProps.html"},{default:o(()=>s[12]||(s[12]=[e("code",null,"ResponseErrorProps",-1)])),_:1,__:[12]})]),s[20]||(s[20]=p('<h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>ResponseError</code></p><h4 id="overrides-1" tabindex="-1"><a class="header-anchor" href="#overrides-1"><span>Overrides</span></a></h4><p><code>Error.constructor</code></p><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="body" tabindex="-1"><a class="header-anchor" href="#body"><span>body</span></a></h3><blockquote><p><code>readonly</code> <strong>body</strong>: <code>any</code></p></blockquote><p>The body of the response, or the original error if available.</p><h3 id="headers" tabindex="-1"><a class="header-anchor" href="#headers"><span>headers</span></a></h3>',9)),e("blockquote",null,[e("p",null,[s[14]||(s[14]=e("code",null,"readonly",-1)),s[15]||(s[15]=r()),s[16]||(s[16]=e("strong",null,"headers",-1)),s[17]||(s[17]=r(": ")),n(a,{to:"/doc/browser/type-aliases/ResponseHeaders.html"},{default:o(()=>s[13]||(s[13]=[e("code",null,"ResponseHeaders",-1)])),_:1,__:[13]})])]),s[21]||(s[21]=p('<p>The headers of the response.</p><h3 id="originalerror" tabindex="-1"><a class="header-anchor" href="#originalerror"><span>originalError?</span></a></h3><blockquote><p><code>readonly</code> <code>optional</code> <strong>originalError</strong>: <code>Error</code></p></blockquote><p>The original error, if any.</p><h3 id="status" tabindex="-1"><a class="header-anchor" href="#status"><span>status</span></a></h3><blockquote><p><code>readonly</code> <strong>status</strong>: <code>number</code></p></blockquote><p>The HTTP status code of the response.</p>',7))])}const m=t(c,[["render",u]]),k=JSON.parse('{"path":"/doc/browser/classes/ResponseError.html","title":"Class: ResponseError","lang":"en","frontmatter":{},"git":{},"filePathRelative":"doc/browser/classes/ResponseError.md"}');export{m as comp,k as data};
