import{_ as i,c as p,b as e,a as s,d as n,e as t,w as d,r as c,o as r}from"./app-Bg9Q13ik.js";const l={};function h(u,o){const a=c("RouteLink");return r(),p("div",null,[e("p",null,[n(a,{to:"/doc/http/"},{default:d(()=>o[0]||(o[0]=[t("Documents")])),_:1}),o[2]||(o[2]=t(" / ")),n(a,{to:"/doc/http/"},{default:d(()=>o[1]||(o[1]=[t("@faasjs/http")])),_:1}),o[3]||(o[3]=t(" / HttpConfig"))]),o[9]||(o[9]=s('<h1 id="type-alias-httpconfig" tabindex="-1"><a class="header-anchor" href="#type-alias-httpconfig"><span>Type Alias: HttpConfig</span></a></h1><blockquote><p><strong>HttpConfig</strong> = <code>object</code></p></blockquote><h2 id="indexable" tabindex="-1"><a class="header-anchor" href="#indexable"><span>Indexable</span></a></h2><p>[<code>key</code>: <code>string</code>]: <code>any</code></p><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="config" tabindex="-1"><a class="header-anchor" href="#config"><span>config?</span></a></h3><blockquote><p><code>optional</code> <strong>config</strong>: <code>object</code></p></blockquote><h4 id="index-signature" tabindex="-1"><a class="header-anchor" href="#index-signature"><span>Index Signature</span></a></h4><p>[<code>key</code>: <code>string</code>]: <code>any</code></p><h4 id="cookie" tabindex="-1"><a class="header-anchor" href="#cookie"><span>cookie?</span></a></h4>',10)),e("blockquote",null,[e("p",null,[o[5]||(o[5]=e("code",null,"optional",-1)),o[6]||(o[6]=t()),o[7]||(o[7]=e("strong",null,"cookie",-1)),o[8]||(o[8]=t(": ")),n(a,{to:"/doc/http/type-aliases/CookieOptions.html"},{default:d(()=>o[4]||(o[4]=[e("code",null,"CookieOptions",-1)])),_:1})])]),o[10]||(o[10]=s('<h4 id="functionname" tabindex="-1"><a class="header-anchor" href="#functionname"><span>functionName?</span></a></h4><blockquote><p><code>optional</code> <strong>functionName</strong>: <code>string</code></p></blockquote><h4 id="ignorepathprefix" tabindex="-1"><a class="header-anchor" href="#ignorepathprefix"><span>ignorePathPrefix?</span></a></h4><blockquote><p><code>optional</code> <strong>ignorePathPrefix</strong>: <code>string</code></p></blockquote><h4 id="method" tabindex="-1"><a class="header-anchor" href="#method"><span>method?</span></a></h4><blockquote><p><code>optional</code> <strong>method</strong>: <code>&quot;BEGIN&quot;</code> | <code>&quot;GET&quot;</code> | <code>&quot;POST&quot;</code> | <code>&quot;DELETE&quot;</code> | <code>&quot;HEAD&quot;</code> | <code>&quot;PUT&quot;</code> | <code>&quot;OPTIONS&quot;</code> | <code>&quot;TRACE&quot;</code> | <code>&quot;PATCH&quot;</code> | <code>&quot;ANY&quot;</code></p></blockquote><p>POST as default</p><h4 id="path" tabindex="-1"><a class="header-anchor" href="#path"><span>path?</span></a></h4><blockquote><p><code>optional</code> <strong>path</strong>: <code>string</code></p></blockquote><p>file relative path as default</p><h4 id="timeout" tabindex="-1"><a class="header-anchor" href="#timeout"><span>timeout?</span></a></h4><blockquote><p><code>optional</code> <strong>timeout</strong>: <code>number</code></p></blockquote><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span>name?</span></a></h3><blockquote><p><code>optional</code> <strong>name</strong>: <code>string</code></p></blockquote>',14))])}const g=i(l,[["render",h]]),q=JSON.parse('{"path":"/doc/http/type-aliases/HttpConfig.html","title":"Type Alias: HttpConfig","lang":"en","frontmatter":{},"git":{},"filePathRelative":"doc/http/type-aliases/HttpConfig.md"}');export{g as comp,q as data};
