import{_ as c,c as o,b as e,a as l,d as t,e as s,w as p,r as i,o as u}from"./app-CeuSItVv.js";const r={};function d(k,n){const a=i("RouteLink");return u(),o("div",null,[e("p",null,[t(a,{to:"/doc/ant-design/"},{default:p(()=>n[0]||(n[0]=[s("Documents")])),_:1}),n[2]||(n[2]=s(" / ")),t(a,{to:"/doc/ant-design/"},{default:p(()=>n[1]||(n[1]=[s("@faasjs/ant-design")])),_:1}),n[3]||(n[3]=s(" / UnionFaasItemRender"))]),n[7]||(n[7]=l('<h1 id="type-alias-unionfaasitemrender-value-values" tabindex="-1"><a class="header-anchor" href="#type-alias-unionfaasitemrender-value-values"><span>Type Alias: UnionFaasItemRender()&lt;Value, Values&gt;</span></a></h1><blockquote><p><strong>UnionFaasItemRender</strong>&lt;<code>Value</code>, <code>Values</code>&gt; = (<code>value</code>, <code>values</code>, <code>index</code>, <code>scene</code>) =&gt; <code>React.ReactNode</code></p></blockquote><p>A type representing a function that renders a React node for a given item in a list.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="value" tabindex="-1"><a class="header-anchor" href="#value"><span>Value</span></a></h3><p><code>Value</code> = <code>any</code></p><h3 id="values" tabindex="-1"><a class="header-anchor" href="#values"><span>Values</span></a></h3><p><code>Values</code> = <code>any</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="value-1" tabindex="-1"><a class="header-anchor" href="#value-1"><span>value</span></a></h3><p><code>Value</code></p><p>The value of the current item.</p><h3 id="values-1" tabindex="-1"><a class="header-anchor" href="#values-1"><span>values</span></a></h3><p><code>Values</code></p><p>The entire list of values.</p><h3 id="index" tabindex="-1"><a class="header-anchor" href="#index"><span>index</span></a></h3><p><code>number</code></p><p>The index of the current item in the list.</p><h3 id="scene" tabindex="-1"><a class="header-anchor" href="#scene"><span>scene</span></a></h3>',19)),e("p",null,[t(a,{to:"/doc/ant-design/type-aliases/UnionScene.html"},{default:p(()=>n[4]||(n[4]=[e("code",null,"UnionScene",-1)])),_:1})]),e("p",null,[t(a,{to:"/doc/ant-design/type-aliases/UnionScene.html"},{default:p(()=>n[5]||(n[5]=[s("UnionScene")])),_:1}),n[6]||(n[6]=s(" - The scene in which the rendering is taking place."))]),n[8]||(n[8]=l(`<h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>React.ReactNode</code></p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-tsx line-numbers-mode" data-highlighter="prismjs" data-ext="tsx"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token keyword">type</span> <span class="token class-name">UnionFaasItemRender</span><span class="token punctuation">,</span> Form<span class="token punctuation">,</span> Description<span class="token punctuation">,</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/ant-design&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> nameReader<span class="token operator">:</span> <span class="token function-variable function">UnionFaasItemRender</span> <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token punctuation">,</span> values<span class="token punctuation">,</span> index<span class="token punctuation">,</span> scene<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">switch</span> <span class="token punctuation">(</span>scene<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token string">&#39;form&#39;</span><span class="token operator">:</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token string">&#39;description&#39;</span><span class="token operator">:</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token string">&#39;table&#39;</span><span class="token operator">:</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>value<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token keyword">default</span><span class="token operator">:</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token keyword">null</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    id<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    render<span class="token operator">:</span> nameReader<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span> <span class="token attr-name">items</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>items<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"> // Will render an input</span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Description</span></span> <span class="token attr-name">items</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>items<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;John&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"> // Will render a span</span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">items</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>items<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;John&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"> // Will render a span</span>
<span class="line">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4))])}const m=c(r,[["render",d]]),g=JSON.parse('{"path":"/doc/ant-design/type-aliases/UnionFaasItemRender.html","title":"Type Alias: UnionFaasItemRender()<Value, Values>","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type Parameters","slug":"type-parameters","link":"#type-parameters","children":[{"level":3,"title":"Value","slug":"value","link":"#value","children":[]},{"level":3,"title":"Values","slug":"values","link":"#values","children":[]}]},{"level":2,"title":"Parameters","slug":"parameters","link":"#parameters","children":[{"level":3,"title":"value","slug":"value-1","link":"#value-1","children":[]},{"level":3,"title":"values","slug":"values-1","link":"#values-1","children":[]},{"level":3,"title":"index","slug":"index","link":"#index","children":[]},{"level":3,"title":"scene","slug":"scene","link":"#scene","children":[]}]},{"level":2,"title":"Returns","slug":"returns","link":"#returns","children":[]},{"level":2,"title":"Example","slug":"example","link":"#example","children":[]}],"git":{},"filePathRelative":"doc/ant-design/type-aliases/UnionFaasItemRender.md"}');export{m as comp,g as data};
