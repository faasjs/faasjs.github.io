import{_ as d,r as c,o as r,c as l,a as o,d as t,w as a,b as e,e as n}from"./app-ogmZakh0.js";const i={},h=n('<h1 id="class-validator-tparams-tcookie-tsession" tabindex="-1"><a class="header-anchor" href="#class-validator-tparams-tcookie-tsession"><span>Class: Validator&lt;TParams, TCookie, TSession&gt;</span></a></h1><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type parameters</span></a></h2><p>• <strong>TParams</strong> extends <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; = <code>any</code></p><p>• <strong>TCookie</strong> extends <code>Record</code>&lt;<code>string</code>, <code>string</code>&gt; = <code>any</code></p><p>• <strong>TSession</strong> extends <code>Record</code>&lt;<code>string</code>, <code>string</code>&gt; = <code>any</code></p><h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h2><h3 id="new-validator-config" tabindex="-1"><a class="header-anchor" href="#new-validator-config"><span>new Validator(config)</span></a></h3>',7),p=o("strong",null,"new Validator",-1),_=o("code",null,"TParams",-1),u=o("code",null,"TCookie",-1),g=o("code",null,"TSession",-1),f=o("code",null,"config",-1),m=o("code",null,"Validator",-1),b=o("code",null,"TParams",-1),k=o("code",null,"TCookie",-1),T=o("code",null,"TSession",-1),x=o("h4",{id:"parameters",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#parameters"},[o("span",null,"Parameters")])],-1),V=o("strong",null,"config",-1),C=o("code",null,"ValidatorConfig",-1),v=o("code",null,"TParams",-1),y=o("code",null,"TCookie",-1),P=o("code",null,"TSession",-1),q=o("h4",{id:"returns",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#returns"},[o("span",null,"Returns")])],-1),O=o("code",null,"Validator",-1),R=o("code",null,"TParams",-1),S=o("code",null,"TCookie",-1),w=o("code",null,"TSession",-1),B=n('<h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="before" tabindex="-1"><a class="header-anchor" href="#before"><span>before?</span></a></h3><blockquote><p><strong>before</strong>?: <code>BeforeOption</code>&lt;<code>TParams</code>, <code>TCookie</code>, <code>TSession</code>&gt;</p></blockquote><h3 id="cookieconfig" tabindex="-1"><a class="header-anchor" href="#cookieconfig"><span>cookieConfig?</span></a></h3>',4),L=o("strong",null,"cookieConfig",-1),N=o("code",null,"ValidatorOptions",-1),j=o("code",null,"TCookie",-1),K=o("h3",{id:"paramsconfig",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#paramsconfig"},[o("span",null,"paramsConfig?")])],-1),D=o("strong",null,"paramsConfig",-1),E=o("code",null,"ValidatorOptions",-1),M=o("code",null,"TParams",-1),z=o("h3",{id:"sessionconfig",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#sessionconfig"},[o("span",null,"sessionConfig?")])],-1),A=o("strong",null,"sessionConfig",-1),F=o("code",null,"ValidatorOptions",-1),G=o("code",null,"TSession",-1),H=n('<h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h2><h3 id="valid" tabindex="-1"><a class="header-anchor" href="#valid"><span>valid()</span></a></h3><blockquote><p><strong>valid</strong>(<code>request</code>, <code>logger</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><p>• <strong>request</strong>: <code>Request</code>&lt;<code>TParams</code>, <code>TCookie</code>, <code>TSession</code>&gt;</p><p>• <strong>logger</strong>: <code>Logger</code></p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h3 id="validcontent" tabindex="-1"><a class="header-anchor" href="#validcontent"><span>validContent()</span></a></h3><blockquote><p><strong>validContent</strong>(<code>type</code>, <code>params</code>, <code>baseKey</code>, <code>config</code>, <code>logger</code>): <code>void</code></p></blockquote><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h4><p>• <strong>type</strong>: <code>string</code></p><p>• <strong>params</strong>: <code>Object</code></p><p>• <strong>baseKey</strong>: <code>string</code></p>',14),I=o("strong",null,"config",-1),J=o("code",null,"ValidatorOptions",-1),Q=o("code",null,"Record",-1),U=o("code",null,"string",-1),W=o("code",null,"any",-1),X=o("p",null,[e("• "),o("strong",null,"logger"),e(": "),o("code",null,"Logger")],-1),Y=o("h4",{id:"returns-2",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#returns-2"},[o("span",null,"Returns")])],-1),Z=o("p",null,[o("code",null,"void")],-1);function $(oo,eo){const s=c("RouterLink");return r(),l("div",null,[o("p",null,[t(s,{to:"/doc/http/"},{default:a(()=>[e("Documents")]),_:1}),e(" / "),t(s,{to:"/doc/http/"},{default:a(()=>[e("@faasjs/http")]),_:1}),e(" / Validator")]),h,o("blockquote",null,[o("p",null,[p,e("<"),_,e(", "),u,e(", "),g,e(">("),f,e("): "),t(s,{to:"/doc/http/classes/Validator.html"},{default:a(()=>[m]),_:1}),e("<"),b,e(", "),k,e(", "),T,e(">")])]),x,o("p",null,[e("• "),V,e(": "),t(s,{to:"/doc/http/type-aliases/ValidatorConfig.html"},{default:a(()=>[C]),_:1}),e("<"),v,e(", "),y,e(", "),P,e(">")]),q,o("p",null,[t(s,{to:"/doc/http/classes/Validator.html"},{default:a(()=>[O]),_:1}),e("<"),R,e(", "),S,e(", "),w,e(">")]),B,o("blockquote",null,[o("p",null,[L,e("?: "),t(s,{to:"/doc/http/type-aliases/ValidatorOptions.html"},{default:a(()=>[N]),_:1}),e("<"),j,e(">")])]),K,o("blockquote",null,[o("p",null,[D,e("?: "),t(s,{to:"/doc/http/type-aliases/ValidatorOptions.html"},{default:a(()=>[E]),_:1}),e("<"),M,e(">")])]),z,o("blockquote",null,[o("p",null,[A,e("?: "),t(s,{to:"/doc/http/type-aliases/ValidatorOptions.html"},{default:a(()=>[F]),_:1}),e("<"),G,e(">")])]),H,o("p",null,[e("• "),I,e(": "),t(s,{to:"/doc/http/type-aliases/ValidatorOptions.html"},{default:a(()=>[J]),_:1}),e("<"),Q,e("<"),U,e(", "),W,e(">>")]),X,Y,Z])}const to=d(i,[["render",$],["__file","Validator.html.vue"]]);export{to as default};
