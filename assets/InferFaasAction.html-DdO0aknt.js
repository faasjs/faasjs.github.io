import{_ as p,c as l,b as o,d as e,e as t,f as s,a as c,r as i,o as r}from"./app-DbqfG6ds.js";const d={};function u(k,n){const a=i("RouteLink");return r(),l("div",null,[o("p",null,[e(a,{to:"/doc/types/"},{default:t(()=>n[0]||(n[0]=[s("Documents")])),_:1}),n[2]||(n[2]=s(" / ")),e(a,{to:"/doc/types/"},{default:t(()=>n[1]||(n[1]=[s("@faasjs/types")])),_:1}),n[3]||(n[3]=s(" / InferFaasAction"))]),n[4]||(n[4]=c(`<h1 id="type-alias-inferfaasaction-tfunc" tabindex="-1"><a class="header-anchor" href="#type-alias-inferfaasaction-tfunc"><span>Type Alias: InferFaasAction&lt;TFunc&gt;</span></a></h1><blockquote><p><strong>InferFaasAction</strong>&lt;<code>TFunc</code>&gt;: <code>object</code></p></blockquote><p>Infer the FaasAction type from a Func.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><p>â€¢ <strong>TFunc</strong> <em>extends</em> <code>Func</code></p><h2 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration"><span>Type declaration</span></a></h2><h3 id="data" tabindex="-1"><a class="header-anchor" href="#data"><span>Data</span></a></h3><blockquote><p><strong>Data</strong>: <code>Awaited</code>&lt;<code>ReturnType</code>&lt;<code>ReturnType</code>&lt;<code>TFunc</code>[<code>&quot;export&quot;</code>]&gt;[<code>&quot;handler&quot;</code>]&gt;&gt;</p></blockquote><h3 id="params" tabindex="-1"><a class="header-anchor" href="#params"><span>Params</span></a></h3><blockquote><p><strong>Params</strong>: <code>Parameters</code>&lt;<code>ReturnType</code>&lt;<code>TFunc</code>[<code>&quot;export&quot;</code>]&gt;[<code>&quot;handler&quot;</code>]&gt;[<code>0</code>][<code>&quot;params&quot;</code>]</p></blockquote><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> useFunc <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/func&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> useHttp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/http&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> InferFaasAction <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/types&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> func <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useFunc</span><span class="token generic class-name"><span class="token operator">&lt;</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    params<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// define the params type</span></span>
<span class="line">      <span class="token builtin">number</span><span class="token operator">:</span> <span class="token builtin">number</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token builtin">unknown</span><span class="token punctuation">,</span> <span class="token comment">// context type, can be skipped</span></span>
<span class="line">  <span class="token builtin">number</span> <span class="token comment">// define the return type</span></span>
<span class="line"><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">useHttp</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> event<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> event<span class="token punctuation">.</span>params<span class="token punctuation">.</span><span class="token builtin">number</span> <span class="token operator">+</span> <span class="token number">1</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// declare the action type to FaasActions</span></span>
<span class="line"><span class="token keyword">declare</span> <span class="token keyword">module</span> <span class="token string">&#39;@faasjs/types&#39;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">interface</span> <span class="token class-name">FaasActions</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// if &#39;demo&#39; is the action path</span></span>
<span class="line">    <span class="token string-property property">&#39;demo&#39;</span><span class="token operator">:</span> InferFaasAction<span class="token operator">&lt;</span><span class="token keyword">typeof</span> func<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// export the func</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> func</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12))])}const v=p(d,[["render",u],["__file","InferFaasAction.html.vue"]]),b=JSON.parse('{"path":"/doc/types/type-aliases/InferFaasAction.html","title":"Type Alias: InferFaasAction<TFunc>","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type Parameters","slug":"type-parameters","link":"#type-parameters","children":[]},{"level":2,"title":"Type declaration","slug":"type-declaration","link":"#type-declaration","children":[{"level":3,"title":"Data","slug":"data","link":"#data","children":[]},{"level":3,"title":"Params","slug":"params","link":"#params","children":[]}]},{"level":2,"title":"Example","slug":"example","link":"#example","children":[]}],"git":{"updatedTime":null},"filePathRelative":"doc/types/type-aliases/InferFaasAction.md"}');export{v as comp,b as data};
