import{_ as d,r as s,o as i,c as r,a as o,d as a,w as n,b as e,e as c}from"./app-fkZxqJbk.js";const p={},h=c('<h1 id="type-alias-httpconfig-tparams-tcookie-tsession" tabindex="-1"><a class="header-anchor" href="#type-alias-httpconfig-tparams-tcookie-tsession"><span>Type alias: HttpConfig&lt;TParams, TCookie, TSession&gt;</span></a></h1><blockquote><p><strong>HttpConfig</strong>&lt;<code>TParams</code>, <code>TCookie</code>, <code>TSession</code>&gt;: <code>Object</code></p></blockquote><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type parameters</span></a></h2><p>• <strong>TParams</strong> extends <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; = <code>any</code></p><p>• <strong>TCookie</strong> extends <code>Record</code>&lt;<code>string</code>, <code>string</code>&gt; = <code>any</code></p><p>• <strong>TSession</strong> extends <code>Record</code>&lt;<code>string</code>, <code>string</code>&gt; = <code>any</code></p><h2 id="index-signature" tabindex="-1"><a class="header-anchor" href="#index-signature"><span>Index signature</span></a></h2><p>[<code>key</code>: <code>string</code>]: <code>any</code></p><h2 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration"><span>Type declaration</span></a></h2><h3 id="config" tabindex="-1"><a class="header-anchor" href="#config"><span>config?</span></a></h3><blockquote><p><strong>config</strong>?: <code>Object</code></p></blockquote><h4 id="index-signature-1" tabindex="-1"><a class="header-anchor" href="#index-signature-1"><span>Index signature</span></a></h4><p>[<code>key</code>: <code>string</code>]: <code>any</code></p><h3 id="config-cookie" tabindex="-1"><a class="header-anchor" href="#config-cookie"><span>config.cookie?</span></a></h3>',14),l=o("strong",null,"config.cookie",-1),g=o("code",null,"CookieOptions",-1),u=c('<h3 id="config-functionname" tabindex="-1"><a class="header-anchor" href="#config-functionname"><span>config.functionName?</span></a></h3><blockquote><p><strong>config.functionName</strong>?: <code>string</code></p></blockquote><h3 id="config-ignorepathprefix" tabindex="-1"><a class="header-anchor" href="#config-ignorepathprefix"><span>config.ignorePathPrefix?</span></a></h3><blockquote><p><strong>config.ignorePathPrefix</strong>?: <code>string</code></p></blockquote><h3 id="config-method" tabindex="-1"><a class="header-anchor" href="#config-method"><span>config.method?</span></a></h3><blockquote><p><strong>config.method</strong>?: <code>&quot;BEGIN&quot;</code> | <code>&quot;GET&quot;</code> | <code>&quot;POST&quot;</code> | <code>&quot;DELETE&quot;</code> | <code>&quot;HEAD&quot;</code> | <code>&quot;PUT&quot;</code> | <code>&quot;OPTIONS&quot;</code> | <code>&quot;TRACE&quot;</code> | <code>&quot;PATCH&quot;</code> | <code>&quot;ANY&quot;</code></p></blockquote><p>POST as default</p><h3 id="config-path" tabindex="-1"><a class="header-anchor" href="#config-path"><span>config.path?</span></a></h3><blockquote><p><strong>config.path</strong>?: <code>string</code></p></blockquote><p>file relative path as default</p><h3 id="config-timeout" tabindex="-1"><a class="header-anchor" href="#config-timeout"><span>config.timeout?</span></a></h3><blockquote><p><strong>config.timeout</strong>?: <code>number</code></p></blockquote><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span>name?</span></a></h3><blockquote><p><strong>name</strong>?: <code>string</code></p></blockquote><h3 id="validator" tabindex="-1"><a class="header-anchor" href="#validator"><span>validator?</span></a></h3>',15),f=o("strong",null,"validator",-1),q=o("code",null,"ValidatorConfig",-1),m=o("code",null,"TParams",-1),b=o("code",null,"TCookie",-1),k=o("code",null,"TSession",-1);function _(x,T){const t=s("RouterLink");return i(),r("div",null,[o("p",null,[a(t,{to:"/doc/http/"},{default:n(()=>[e("Documents")]),_:1}),e(" / "),a(t,{to:"/doc/http/"},{default:n(()=>[e("@faasjs/http")]),_:1}),e(" / HttpConfig")]),h,o("blockquote",null,[o("p",null,[l,e("?: "),a(t,{to:"/doc/http/type-aliases/CookieOptions.html"},{default:n(()=>[g]),_:1})])]),u,o("blockquote",null,[o("p",null,[f,e("?: "),a(t,{to:"/doc/http/type-aliases/ValidatorConfig.html"},{default:n(()=>[q]),_:1}),e("<"),m,e(", "),b,e(", "),k,e(">")])])])}const C=d(p,[["render",_],["__file","HttpConfig.html.vue"]]);export{C as default};
