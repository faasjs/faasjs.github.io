import{_ as r,c as d,b as n,d as o,e as l,f as s,a as t,r as i,o as p}from"./app-DVxCS5ri.js";const u={};function c(h,e){const a=i("RouteLink");return p(),d("div",null,[n("p",null,[o(a,{to:"/doc/test/"},{default:l(()=>e[0]||(e[0]=[s("Documents")])),_:1}),e[2]||(e[2]=s(" / ")),o(a,{to:"/doc/test/"},{default:l(()=>e[1]||(e[1]=[s("@faasjs/test")])),_:1}),e[3]||(e[3]=s(" / FuncWarper"))]),e[47]||(e[47]=t(`<h1 id="class-funcwarper" tabindex="-1"><a class="header-anchor" href="#class-funcwarper"><span>Class: FuncWarper</span></a></h1><p>Test Wrapper for a func</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> FuncWarper <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/test&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> func <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FuncWarper</span><span class="token punctuation">(</span>__dirname <span class="token operator">+</span> <span class="token string">&#39;/../demo.func.ts&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token function">expect</span><span class="token punctuation">(</span><span class="token keyword">await</span> func<span class="token punctuation">.</span><span class="token function">handler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span><span class="token string">&#39;Hello, world&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="indexable" tabindex="-1"><a class="header-anchor" href="#indexable"><span>Indexable</span></a></h2><p>[<code>key</code>: <code>string</code>]: <code>any</code></p><h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h2><h3 id="new-funcwarper" tabindex="-1"><a class="header-anchor" href="#new-funcwarper"><span>new FuncWarper()</span></a></h3>`,7)),n("blockquote",null,[n("p",null,[e[5]||(e[5]=n("strong",null,"new FuncWarper",-1)),e[6]||(e[6]=s("(")),e[7]||(e[7]=n("code",null,"initBy",-1)),e[8]||(e[8]=s("): ")),o(a,{to:"/doc/test/classes/FuncWarper.html"},{default:l(()=>e[4]||(e[4]=[n("code",null,"FuncWarper",-1)])),_:1})])]),e[48]||(e[48]=n("h4",{id:"parameters",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#parameters"},[n("span",null,"Parameters")])],-1)),e[49]||(e[49]=n("h5",{id:"initby",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#initby"},[n("span",null,"initBy")])],-1)),n("p",null,[o(a,{to:"/doc/test/classes/Func.html"},{default:l(()=>e[9]||(e[9]=[n("code",null,"Func",-1)])),_:1}),e[10]||(e[10]=s("<")),e[11]||(e[11]=n("code",null,"any",-1)),e[12]||(e[12]=s(", ")),e[13]||(e[13]=n("code",null,"any",-1)),e[14]||(e[14]=s(", ")),e[15]||(e[15]=n("code",null,"any",-1)),e[16]||(e[16]=s(">"))]),e[50]||(e[50]=n("h4",{id:"returns",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#returns"},[n("span",null,"Returns")])],-1)),n("p",null,[o(a,{to:"/doc/test/classes/FuncWarper.html"},{default:l(()=>e[17]||(e[17]=[n("code",null,"FuncWarper",-1)])),_:1})]),e[51]||(e[51]=n("h3",{id:"new-funcwarper-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#new-funcwarper-1"},[n("span",null,"new FuncWarper()")])],-1)),n("blockquote",null,[n("p",null,[e[19]||(e[19]=n("strong",null,"new FuncWarper",-1)),e[20]||(e[20]=s("(")),e[21]||(e[21]=n("code",null,"initBy",-1)),e[22]||(e[22]=s("): ")),o(a,{to:"/doc/test/classes/FuncWarper.html"},{default:l(()=>e[18]||(e[18]=[n("code",null,"FuncWarper",-1)])),_:1})])]),e[52]||(e[52]=t('<h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><h5 id="initby-1" tabindex="-1"><a class="header-anchor" href="#initby-1"><span>initBy</span></a></h5><p><code>string</code></p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4>',4)),n("p",null,[o(a,{to:"/doc/test/classes/FuncWarper.html"},{default:l(()=>e[23]||(e[23]=[n("code",null,"FuncWarper",-1)])),_:1})]),e[53]||(e[53]=t('<h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h2><h3 id="handler" tabindex="-1"><a class="header-anchor" href="#handler"><span>handler()</span></a></h3><blockquote><p><strong>handler</strong>&lt;<code>TResult</code>&gt;(<code>event</code>, <code>context</code>): <code>Promise</code>&lt;<code>TResult</code>&gt;</p></blockquote><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h4><p>• <strong>TResult</strong> = <code>any</code></p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h4><h5 id="event" tabindex="-1"><a class="header-anchor" href="#event"><span>event</span></a></h5><p><code>any</code> = <code>...</code></p><h5 id="context" tabindex="-1"><a class="header-anchor" href="#context"><span>context</span></a></h5><p><code>any</code> = <code>...</code></p><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>TResult</code>&gt;</p><h3 id="jsonhandler" tabindex="-1"><a class="header-anchor" href="#jsonhandler"><span>JSONhandler()</span></a></h3><blockquote><p><strong>JSONhandler</strong>&lt;<code>TData</code>&gt;(<code>body</code>?, <code>options</code>?): <code>Promise</code>&lt;{ <code>body</code>: <code>any</code>; <code>cookie</code>: <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;; <code>data</code>: <code>TData</code>; <code>error</code>: { <code>message</code>: <code>string</code>; }; <code>headers</code>: {}; <code>session</code>: <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;; <code>statusCode</code>: <code>number</code>; }&gt;</p></blockquote><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1"><span>Type Parameters</span></a></h4><p>• <strong>TData</strong> = <code>any</code></p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3"><span>Parameters</span></a></h4><h5 id="body" tabindex="-1"><a class="header-anchor" href="#body"><span>body?</span></a></h5><h5 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options?</span></a></h5><h6 id="cookie" tabindex="-1"><a class="header-anchor" href="#cookie"><span>cookie</span></a></h6><p>{}</p><h6 id="headers" tabindex="-1"><a class="header-anchor" href="#headers"><span>headers</span></a></h6><p>{}</p><h6 id="session" tabindex="-1"><a class="header-anchor" href="#session"><span>session</span></a></h6><p>{}</p><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3"><span>Returns</span></a></h4><p><code>Promise</code>&lt;{ <code>body</code>: <code>any</code>; <code>cookie</code>: <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;; <code>data</code>: <code>TData</code>; <code>error</code>: { <code>message</code>: <code>string</code>; }; <code>headers</code>: {}; <code>session</code>: <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;; <code>statusCode</code>: <code>number</code>; }&gt;</p><h3 id="mount" tabindex="-1"><a class="header-anchor" href="#mount"><span>mount()</span></a></h3><blockquote><p><strong>mount</strong>(<code>handler</code>?): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4"><span>Parameters</span></a></h4><h5 id="handler-1" tabindex="-1"><a class="header-anchor" href="#handler-1"><span>handler?</span></a></h5><p>(<code>func</code>) =&gt; <code>void</code> | <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="config" tabindex="-1"><a class="header-anchor" href="#config"><span>config</span></a></h3>',36)),n("blockquote",null,[n("p",null,[e[25]||(e[25]=n("code",null,"readonly",-1)),e[26]||(e[26]=s()),e[27]||(e[27]=n("strong",null,"config",-1)),e[28]||(e[28]=s(": ")),o(a,{to:"/doc/test/type-aliases/Config.html"},{default:l(()=>e[24]||(e[24]=[n("code",null,"Config",-1)])),_:1})])]),e[54]||(e[54]=n("h3",{id:"file",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#file"},[n("span",null,"file")])],-1)),e[55]||(e[55]=n("blockquote",null,[n("p",null,[n("code",null,"readonly"),s(),n("strong",null,"file"),s(": "),n("code",null,"string")])],-1)),e[56]||(e[56]=n("h3",{id:"func",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#func"},[n("span",null,"func")])],-1)),n("blockquote",null,[n("p",null,[e[30]||(e[30]=n("code",null,"readonly",-1)),e[31]||(e[31]=s()),e[32]||(e[32]=n("strong",null,"func",-1)),e[33]||(e[33]=s(": ")),o(a,{to:"/doc/test/classes/Func.html"},{default:l(()=>e[29]||(e[29]=[n("code",null,"Func",-1)])),_:1}),e[34]||(e[34]=s("<")),e[35]||(e[35]=n("code",null,"any",-1)),e[36]||(e[36]=s(", ")),e[37]||(e[37]=n("code",null,"any",-1)),e[38]||(e[38]=s(", ")),e[39]||(e[39]=n("code",null,"any",-1)),e[40]||(e[40]=s(">"))])]),e[57]||(e[57]=n("h3",{id:"logger",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#logger"},[n("span",null,"logger")])],-1)),e[58]||(e[58]=n("blockquote",null,[n("p",null,[n("code",null,"readonly"),s(),n("strong",null,"logger"),s(": "),n("code",null,"Logger")])],-1)),e[59]||(e[59]=n("h3",{id:"plugins",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#plugins"},[n("span",null,"plugins")])],-1)),n("blockquote",null,[n("p",null,[e[42]||(e[42]=n("code",null,"readonly",-1)),e[43]||(e[43]=s()),e[44]||(e[44]=n("strong",null,"plugins",-1)),e[45]||(e[45]=s(": ")),o(a,{to:"/doc/test/type-aliases/Plugin.html"},{default:l(()=>e[41]||(e[41]=[n("code",null,"Plugin",-1)])),_:1}),e[46]||(e[46]=s("[]"))])]),e[60]||(e[60]=n("h3",{id:"staging",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#staging"},[n("span",null,"staging")])],-1)),e[61]||(e[61]=n("blockquote",null,[n("p",null,[n("code",null,"readonly"),s(),n("strong",null,"staging"),s(": "),n("code",null,"string")])],-1))])}const f=r(u,[["render",c],["__file","FuncWarper.html.vue"]]),b=JSON.parse('{"path":"/doc/test/classes/FuncWarper.html","title":"Class: FuncWarper","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Indexable","slug":"indexable","link":"#indexable","children":[]},{"level":2,"title":"Constructors","slug":"constructors","link":"#constructors","children":[{"level":3,"title":"new FuncWarper()","slug":"new-funcwarper","link":"#new-funcwarper","children":[]},{"level":3,"title":"new FuncWarper()","slug":"new-funcwarper-1","link":"#new-funcwarper-1","children":[]}]},{"level":2,"title":"Methods","slug":"methods","link":"#methods","children":[{"level":3,"title":"handler()","slug":"handler","link":"#handler","children":[]},{"level":3,"title":"JSONhandler()","slug":"jsonhandler","link":"#jsonhandler","children":[]},{"level":3,"title":"mount()","slug":"mount","link":"#mount","children":[]}]},{"level":2,"title":"Properties","slug":"properties","link":"#properties","children":[{"level":3,"title":"config","slug":"config","link":"#config","children":[]},{"level":3,"title":"file","slug":"file","link":"#file","children":[]},{"level":3,"title":"func","slug":"func","link":"#func","children":[]},{"level":3,"title":"logger","slug":"logger","link":"#logger","children":[]},{"level":3,"title":"plugins","slug":"plugins","link":"#plugins","children":[]},{"level":3,"title":"staging","slug":"staging","link":"#staging","children":[]}]}],"git":{},"filePathRelative":"doc/test/classes/FuncWarper.md"}');export{f as comp,b as data};
