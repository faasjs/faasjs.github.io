import{_ as n,c as d,b as s,d as t,e as r,f as o,a,r as i,o as c}from"./app-BWE44JdZ.js";const p={};function g(f,e){const l=i("RouteLink");return c(),d("div",null,[s("p",null,[t(l,{to:"/doc/logger/"},{default:r(()=>e[0]||(e[0]=[o("Documents")])),_:1}),e[2]||(e[2]=o(" / ")),t(l,{to:"/doc/logger/"},{default:r(()=>e[1]||(e[1]=[o("@faasjs/logger")])),_:1}),e[3]||(e[3]=o(" / colorfy"))]),e[5]||(e[5]=a('<h1 id="function-colorfy" tabindex="-1"><a class="header-anchor" href="#function-colorfy"><span>Function: colorfy()</span></a></h1><blockquote><p><strong>colorfy</strong>(<code>level</code>, <code>message</code>): <code>string</code></p></blockquote><p>Apply ANSI color codes to a message based on the log level.</p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="level" tabindex="-1"><a class="header-anchor" href="#level"><span>level</span></a></h3>',5)),s("p",null,[t(l,{to:"/doc/logger/type-aliases/Level.html"},{default:r(()=>e[4]||(e[4]=[s("code",null,"Level",-1)])),_:1})]),e[6]||(e[6]=a('<p>The log level to determine the color.</p><h3 id="message" tabindex="-1"><a class="header-anchor" href="#message"><span>message</span></a></h3><p><code>string</code></p><p>The message to be colorized.</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>string</code></p><p>The colorized message string.</p>',7))])}const u=n(p,[["render",g],["__file","colorfy.html.vue"]]),h=JSON.parse('{"path":"/doc/logger/functions/colorfy.html","title":"Function: colorfy()","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Parameters","slug":"parameters","link":"#parameters","children":[{"level":3,"title":"level","slug":"level","link":"#level","children":[]},{"level":3,"title":"message","slug":"message","link":"#message","children":[]}]},{"level":2,"title":"Returns","slug":"returns","link":"#returns","children":[]}],"git":{},"filePathRelative":"doc/logger/functions/colorfy.md"}');export{u as comp,h as data};
