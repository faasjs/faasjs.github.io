import{_ as o,c as r,b as a,d as t,e as p,f as s,a as l,r as i,o as m}from"./app-DeOSLQOv.js";const c={};function u(d,n){const e=i("RouteLink");return m(),r("div",null,[a("p",null,[t(e,{to:"/doc/ant-design/"},{default:p(()=>n[0]||(n[0]=[s("Documents")])),_:1}),n[2]||(n[2]=s(" / ")),t(e,{to:"/doc/ant-design/"},{default:p(()=>n[1]||(n[1]=[s("@faasjs/ant-design")])),_:1}),n[3]||(n[3]=s(" / FormItem"))]),n[11]||(n[11]=l('<h1 id="function-formitem" tabindex="-1"><a class="header-anchor" href="#function-formitem"><span>Function: FormItem()</span></a></h1><blockquote><p><strong>FormItem</strong>&lt;<code>T</code>&gt;(<code>props</code>): <code>Element</code></p></blockquote><p>FormItem</p><ul><li>Based on <a href="https://ant.design/components/form#formitem" target="_blank" rel="noopener noreferrer">Ant Design Form.Item</a>.</li><li>Can be used without <a href="https://faasjs.com/doc/ant-design/#form" target="_blank" rel="noopener noreferrer">Form</a>.</li></ul><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><p>• <strong>T</strong> = <code>any</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2>',7)),a("p",null,[n[5]||(n[5]=s("• ")),n[6]||(n[6]=a("strong",null,"props",-1)),n[7]||(n[7]=s(": ")),t(e,{to:"/doc/ant-design/interfaces/FormItemProps.html"},{default:p(()=>n[4]||(n[4]=[a("code",null,"FormItemProps",-1)])),_:1}),n[8]||(n[8]=s("<")),n[9]||(n[9]=a("code",null,"T",-1)),n[10]||(n[10]=s(">"))]),n[12]||(n[12]=l(`<h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>Element</code></p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-tsx line-numbers-mode" data-highlighter="prismjs" data-ext="tsx" data-title="tsx"><pre><code><span class="line"><span class="token comment">// use inline type</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormItem</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>string<span class="token punctuation">&#39;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>name<span class="token punctuation">&#39;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// use custom type</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormItem</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>password<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input.Password</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4))])}const g=o(c,[["render",u],["__file","FormItem.html.vue"]]),f=JSON.parse('{"path":"/doc/ant-design/functions/FormItem.html","title":"Function: FormItem()","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type Parameters","slug":"type-parameters","link":"#type-parameters","children":[]},{"level":2,"title":"Parameters","slug":"parameters","link":"#parameters","children":[]},{"level":2,"title":"Returns","slug":"returns","link":"#returns","children":[]},{"level":2,"title":"Example","slug":"example","link":"#example","children":[]}],"git":{"updatedTime":null},"filePathRelative":"doc/ant-design/functions/FormItem.md"}');export{g as comp,f as data};
