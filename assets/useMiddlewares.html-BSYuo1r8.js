import{_ as o,c as r,b as e,d as t,e as p,f as n,a as l,r as i,o as c}from"./app-BmXtVD7Y.js";const d={};function u(k,s){const a=i("RouteLink");return c(),r("div",null,[e("p",null,[t(a,{to:"/doc/server/"},{default:p(()=>s[0]||(s[0]=[n("Documents")])),_:1}),s[2]||(s[2]=n(" / ")),t(a,{to:"/doc/server/"},{default:p(()=>s[1]||(s[1]=[n("@faasjs/server")])),_:1}),s[3]||(s[3]=n(" / useMiddlewares"))]),s[6]||(s[6]=l('<h1 id="function-usemiddlewares" tabindex="-1"><a class="header-anchor" href="#function-usemiddlewares"><span>Function: useMiddlewares()</span></a></h1><blockquote><p><strong>useMiddlewares</strong>(<code>handlers</code>): <code>Promise</code>&lt;<code>Func</code>&lt;<code>object</code>, <code>any</code>, <code>any</code>&gt;&gt;</p></blockquote><p>Apply an array of middleware functions to an event.</p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="handlers" tabindex="-1"><a class="header-anchor" href="#handlers"><span>handlers</span></a></h3>',5)),e("p",null,[t(a,{to:"/doc/server/type-aliases/Middleware.html"},{default:p(()=>s[4]||(s[4]=[e("code",null,"Middleware",-1)])),_:1}),s[5]||(s[5]=n("[]"))]),s[7]||(s[7]=l(`<p>An array of middleware functions to be applied.</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>Promise</code>&lt;<code>Func</code>&lt;<code>object</code>, <code>any</code>, <code>any</code>&gt;&gt;</p><p>A promise that resolves when all middleware functions have been applied.</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> useMiddlewares <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/server&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">useMiddlewares</span><span class="token punctuation">(</span><span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span>url <span class="token operator">===</span> <span class="token string">&#39;/hi&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span></span>
<span class="line">    response<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&#39;Hello, World!&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span>url <span class="token operator">===</span> <span class="token string">&#39;/hello&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span></span>
<span class="line">    response<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&#39;Hi, World!&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6))])}const v=o(d,[["render",u],["__file","useMiddlewares.html.vue"]]),h=JSON.parse('{"path":"/doc/server/functions/useMiddlewares.html","title":"Function: useMiddlewares()","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Parameters","slug":"parameters","link":"#parameters","children":[{"level":3,"title":"handlers","slug":"handlers","link":"#handlers","children":[]}]},{"level":2,"title":"Returns","slug":"returns","link":"#returns","children":[]},{"level":2,"title":"Example","slug":"example","link":"#example","children":[]}],"git":{},"filePathRelative":"doc/server/functions/useMiddlewares.md"}');export{v as comp,h as data};
