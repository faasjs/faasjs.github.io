import{_ as r,r as d,o as l,a as c,b as e,d as s,w as n,F as i,c as o,e as t}from"./app.a0a9b381.js";const p={},h=o('<h1 id="namespace-form" tabindex="-1"><a class="header-anchor" href="#namespace-form" aria-hidden="true">#</a> Namespace: Form</h1><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of contents</h2><h3 id="variables" tabindex="-1"><a class="header-anchor" href="#variables" aria-hidden="true">#</a> Variables</h3>',3),u=t("Item"),m=t("useForm"),_=e("h2",{id:"variables-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#variables-1","aria-hidden":"true"},"#"),t(" Variables")],-1),f=e("h3",{id:"item",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#item","aria-hidden":"true"},"#"),t(" Item")],-1),b=t("\u2022 "),y=e("strong",null,"Item",-1),g=t(": <T>("),x=e("code",null,"props",-1),k=t(": "),v=e("code",null,"FormItemProps",-1),F=t("<"),T=e("code",null,"T",-1),I=t(">) => "),V=e("code",null,"Element",-1),N=o(`<h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4><p>\u25B8 &lt;<code>T</code>&gt;(<code>props</code>): <code>Element</code></p><p>FormItem, can be used without Form.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// use inline type</span>
<span class="token operator">&lt;</span>FormItem item<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">,</span> id<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>

<span class="token comment">// use custom type</span>
<span class="token operator">&lt;</span>FormItem item<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token string">&#39;password&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>Input<span class="token punctuation">.</span>Password <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h5 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h5>`,7),w=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),P=e("td",{style:{"text-align":"left"}},[e("code",null,"props")],-1),E={style:{"text-align":"left"}},R=e("code",null,"FormItemProps",-1),B=t("<"),C=e("code",null,"T",-1),L=t(">"),S=o('<h5 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h5><p><code>Element</code></p><hr><h3 id="useform" tabindex="-1"><a class="header-anchor" href="#useform" aria-hidden="true">#</a> useForm</h3><p>\u2022 <strong>useForm</strong>: &lt;Values&gt;(<code>form?</code>: <code>FormInstance</code>&lt;<code>Values</code>&gt;) =&gt; [<code>FormInstance</code>&lt;<code>Values</code>&gt;]</p><h4 id="type-declaration-1" tabindex="-1"><a class="header-anchor" href="#type-declaration-1" aria-hidden="true">#</a> Type declaration</h4><p>\u25B8 &lt;<code>Values</code>&gt;(<code>form?</code>): [<code>FormInstance</code>&lt;<code>Values</code>&gt;]</p><h5 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Values</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h5 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>form?</code></td><td style="text-align:left;"><code>FormInstance</code>&lt;<code>Values</code>&gt;</td></tr></tbody></table><h5 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h5><p>[<code>FormInstance</code>&lt;<code>Values</code>&gt;]</p>',13);function j(q,z){const a=d("RouterLink");return l(),c(i,null,[h,e("ul",null,[e("li",null,[s(a,{to:"/doc/ant-design/modules/Form.html#item"},{default:n(()=>[u]),_:1})]),e("li",null,[s(a,{to:"/doc/ant-design/modules/Form.html#useform"},{default:n(()=>[m]),_:1})])]),_,f,e("p",null,[b,y,g,x,k,s(a,{to:"/doc/ant-design/modules.html#formitemprops"},{default:n(()=>[v]),_:1}),F,T,I,V]),N,e("table",null,[w,e("tbody",null,[e("tr",null,[P,e("td",E,[s(a,{to:"/doc/ant-design/modules.html#formitemprops"},{default:n(()=>[R]),_:1}),B,C,L])])])]),S],64)}var D=r(p,[["render",j],["__file","Form.html.vue"]]);export{D as default};
