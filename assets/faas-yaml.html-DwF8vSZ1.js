import{_ as a,c as n,a as e,o as l}from"./app-BRUPUmbl.js";const i={};function t(p,s){return l(),n("div",null,s[0]||(s[0]=[e(`<h1 id="faas-yaml" tabindex="-1"><a class="header-anchor" href="#faas-yaml"><span>faas.yaml</span></a></h1><p>为了灵活高效的处理简单应用和复杂应用的配置，FaasJS 采用了递归式的配置方式。</p><h2 id="文件名" tabindex="-1"><a class="header-anchor" href="#文件名"><span>文件名</span></a></h2><p>配置文件的名字统一为 <strong>faas.yaml</strong>。</p><h2 id="读取顺序" tabindex="-1"><a class="header-anchor" href="#读取顺序"><span>读取顺序</span></a></h2><p>当编译云函数文件时，会从云函数所在在文件夹开始，逐级向外寻找配置文件并合并配置，合并配置的优先级也以云函数所在文件夹的配置文件为最高优先级。</p><p>比如下面的文件结构：<code>| 表示文件夹，- 表示文件</code></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">| root</span>
<span class="line">  - faas.yaml</span>
<span class="line">  | user</span>
<span class="line">    - faas.yaml</span>
<span class="line">    | account</span>
<span class="line">      - faas.yaml</span>
<span class="line">      - create.func.ts</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当编译 <code>create.func.ts</code> 时，会依次读取：</p><ol><li><code>account/faas.yaml</code></li><li><code>user/faas.yaml</code></li><li><code>root/faas.yaml</code></li></ol><p>然后按以下顺序进行配置项的合并和覆盖（后面的覆盖前面的）：</p><ol><li><code>root/faas.yaml</code></li><li><code>user/faas.yaml</code></li><li><code>account/faas.yaml</code></li></ol><h2 id="节点说明" tabindex="-1"><a class="header-anchor" href="#节点说明"><span>节点说明</span></a></h2><h3 id="一级节点-环境节点" tabindex="-1"><a class="header-anchor" href="#一级节点-环境节点"><span>一级节点：环境节点</span></a></h3><ul><li><strong>defaults</strong> 默认环境，必须存在，用于设置全局默认配置</li><li><strong>local</strong> 默认本地开发环境</li><li><strong>testing</strong> 默认线上测试环境</li><li><strong>production</strong> 默认线上正式环境</li></ul><h3 id="二级节点-服务商、插件-部署节点" tabindex="-1"><a class="header-anchor" href="#二级节点-服务商、插件-部署节点"><span>二级节点：服务商、插件 &amp; 部署节点</span></a></h3><ul><li><strong>providers</strong> 服务商节点，用于配置服务商的 Token 等全局信息。</li><li><strong>plugins</strong> 插件节点，各个插件会读取此处的配置作为默认配置。</li><li><strong>deploy</strong> 部署节点</li></ul><h3 id="三级节点-具体配置" tabindex="-1"><a class="header-anchor" href="#三级节点-具体配置"><span>三级节点：具体配置</span></a></h3><h4 id="插件节点" tabindex="-1"><a class="header-anchor" href="#插件节点"><span>插件节点</span></a></h4><p>节点名可自行设定，多个同类插件可以设定为多个插件配置。</p><p>若节点名为插件的名字，则视为该插件的默认节点。</p><ul><li><strong>type</strong> 插件类型</li><li><strong>provider</strong> 服务商名字，即 providers 中设置的 key；对于非服务商云资源（如数据库），此项不填写</li><li><strong>config</strong> 具体配置项，不同类型有不同的可配置项</li></ul><p>例：</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">plugins</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">function</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">provider</span><span class="token punctuation">:</span> first</span>
<span class="line">    <span class="token key atrule">type</span><span class="token punctuation">:</span> faas</span>
<span class="line">    <span class="token key atrule">config</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">MemorySize</span><span class="token punctuation">:</span> <span class="token number">128</span></span>
<span class="line">  <span class="token key atrule">second_faas</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">provider</span><span class="token punctuation">:</span> second</span>
<span class="line">    <span class="token key atrule">type</span><span class="token punctuation">:</span> faas</span>
<span class="line">    <span class="token key atrule">config</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">MemorySize</span><span class="token punctuation">:</span> <span class="token number">256</span></span>
<span class="line">  <span class="token key atrule">mysql</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">type</span><span class="token punctuation">:</span> mysql</span>
<span class="line">    <span class="token key atrule">config</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">host</span><span class="token punctuation">:</span> 127.0.0.1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24)]))}const r=a(i,[["render",t],["__file","faas-yaml.html.vue"]]),o=JSON.parse('{"path":"/zh/guide/excel/faas-yaml.html","title":"faas.yaml","lang":"zh","frontmatter":{},"headers":[{"level":2,"title":"文件名","slug":"文件名","link":"#文件名","children":[]},{"level":2,"title":"读取顺序","slug":"读取顺序","link":"#读取顺序","children":[]},{"level":2,"title":"节点说明","slug":"节点说明","link":"#节点说明","children":[{"level":3,"title":"一级节点：环境节点","slug":"一级节点-环境节点","link":"#一级节点-环境节点","children":[]},{"level":3,"title":"二级节点：服务商、插件 & 部署节点","slug":"二级节点-服务商、插件-部署节点","link":"#二级节点-服务商、插件-部署节点","children":[]},{"level":3,"title":"三级节点：具体配置","slug":"三级节点-具体配置","link":"#三级节点-具体配置","children":[]}]}],"git":{"updatedTime":1736565931000},"filePathRelative":"zh/guide/excel/faas-yaml.md"}');export{r as comp,o as data};
