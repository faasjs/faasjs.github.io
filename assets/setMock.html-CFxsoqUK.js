import{_ as l,r as c,c as i,b as a,d as t,w as p,e as n,a as o,o as r}from"./app-FEUINH3D.js";const u={};function d(k,s){const e=c("RouteLink");return r(),i("div",null,[a("p",null,[t(e,{to:"/doc/browser/"},{default:p(()=>s[0]||(s[0]=[n("Documents")])),_:1}),s[2]||(s[2]=n(" / ")),t(e,{to:"/doc/browser/"},{default:p(()=>s[1]||(s[1]=[n("@faasjs/browser")])),_:1}),s[3]||(s[3]=n(" / setMock"))]),s[8]||(s[8]=o('<h1 id="function-setmock" tabindex="-1"><a class="header-anchor" href="#function-setmock"><span>Function: setMock()</span></a></h1><blockquote><p><strong>setMock</strong>(<code>handler</code>): <code>void</code></p></blockquote><p>Set mock handler for testing</p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2>',4)),a("p",null,[s[5]||(s[5]=n("â€¢ ")),s[6]||(s[6]=a("strong",null,"handler",-1)),s[7]||(s[7]=n(": ")),t(e,{to:"/doc/browser/type-aliases/MockHandler.html"},{default:p(()=>s[4]||(s[4]=[a("code",null,"MockHandler",-1)])),_:1})]),s[9]||(s[9]=o(`<p>mock handler, set <code>undefined</code> to clear mock</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>void</code></p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> setMock <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/browser&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">setMock</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> action<span class="token punctuation">,</span> params<span class="token punctuation">,</span> options <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    status<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span></span>
<span class="line">    data<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      name<span class="token operator">:</span> <span class="token string">&#39;FaasJS&#39;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FaasBrowserClient</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span> <span class="token comment">// response.data.name === &#39;FaasJS&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5))])}const v=l(u,[["render",d],["__file","setMock.html.vue"]]),b=JSON.parse('{"path":"/doc/browser/functions/setMock.html","title":"Function: setMock()","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Parameters","slug":"parameters","link":"#parameters","children":[]},{"level":2,"title":"Returns","slug":"returns","link":"#returns","children":[]},{"level":2,"title":"Example","slug":"example","link":"#example","children":[]}],"git":{"updatedTime":null},"filePathRelative":"doc/browser/functions/setMock.md"}');export{v as comp,b as data};
