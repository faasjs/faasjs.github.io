import{_ as d,c,b as s,d as n,e as t,f as a,a as r,r as i,o as l}from"./app-CM8GoKmW.js";const p={};function u(h,e){const o=i("RouteLink");return l(),c("div",null,[s("p",null,[n(o,{to:"/doc/cloud_function/"},{default:t(()=>e[0]||(e[0]=[a("Documents")])),_:1}),e[2]||(e[2]=a(" / ")),n(o,{to:"/doc/cloud_function/"},{default:t(()=>e[1]||(e[1]=[a("@faasjs/cloud_function")])),_:1}),e[3]||(e[3]=a(" / CloudFunctionAdapter"))]),e[4]||(e[4]=r('<h1 id="type-alias-cloudfunctionadapter" tabindex="-1"><a class="header-anchor" href="#type-alias-cloudfunctionadapter"><span>Type Alias: CloudFunctionAdapter</span></a></h1><blockquote><p><strong>CloudFunctionAdapter</strong>: <code>object</code></p></blockquote><h2 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration"><span>Type declaration</span></a></h2><h3 id="invokecloudfunction" tabindex="-1"><a class="header-anchor" href="#invokecloudfunction"><span>invokeCloudFunction()</span></a></h3><blockquote><p><strong>invokeCloudFunction</strong>: (<code>name</code>, <code>data</code>, <code>options</code>?) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span>name</span></a></h5><p><code>string</code></p><h5 id="data" tabindex="-1"><a class="header-anchor" href="#data"><span>data</span></a></h5><p><code>any</code></p><h5 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options?</span></a></h5><p><code>any</code></p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h3 id="invokesynccloudfunction" tabindex="-1"><a class="header-anchor" href="#invokesynccloudfunction"><span>invokeSyncCloudFunction()</span></a></h3><blockquote><p><strong>invokeSyncCloudFunction</strong>: &lt;<code>TResult</code>&gt;(<code>name</code>, <code>data</code>, <code>options</code>?) =&gt; <code>Promise</code>&lt;<code>TResult</code>&gt;</p></blockquote><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h4><p>â€¢ <strong>TResult</strong></p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><h5 id="name-1" tabindex="-1"><a class="header-anchor" href="#name-1"><span>name</span></a></h5><p><code>string</code></p><h5 id="data-1" tabindex="-1"><a class="header-anchor" href="#data-1"><span>data</span></a></h5><p><code>any</code></p><h5 id="options-1" tabindex="-1"><a class="header-anchor" href="#options-1"><span>options?</span></a></h5><p><code>any</code></p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>TResult</code>&gt;</p>',27))])}const m=d(p,[["render",u],["__file","CloudFunctionAdapter.html.vue"]]),k=JSON.parse('{"path":"/doc/cloud_function/type-aliases/CloudFunctionAdapter.html","title":"Type Alias: CloudFunctionAdapter","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type declaration","slug":"type-declaration","link":"#type-declaration","children":[{"level":3,"title":"invokeCloudFunction()","slug":"invokecloudfunction","link":"#invokecloudfunction","children":[]},{"level":3,"title":"invokeSyncCloudFunction()","slug":"invokesynccloudfunction","link":"#invokesynccloudfunction","children":[]}]}],"git":{},"filePathRelative":"doc/cloud_function/type-aliases/CloudFunctionAdapter.md"}');export{m as comp,k as data};
