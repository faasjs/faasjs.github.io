import{_ as t,r as p,o,c,a as n,b as a,d as e,e as l}from"./app-CaW80npB.js";const i={},u=l(`<h1 id="faasjs-test" tabindex="-1"><a class="header-anchor" href="#faasjs-test"><span>@faasjs/test</span></a></h1><p>FaasJS 内置插件，无需额外安装。</p><p>此组件用于构建自动化测试。</p><h2 id="package-json-配置" tabindex="-1"><a class="header-anchor" href="#package-json-配置"><span>package.json 配置</span></a></h2><p>可以在 package.json 中添加如下配置：</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token property">&quot;jest&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;verbose&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;transform&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;.(jsx|tsx?)&quot;</span><span class="token operator">:</span> <span class="token string">&quot;@faasjs/jest&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;collectCoverageFrom&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;**/*.ts&quot;</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;testRegex&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/*\\\\.test\\\\.ts$&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;modulePathIgnorePatterns&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;/tmp/&quot;</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;setupFilesAfterEnv&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;@faasjs/test/lib/jest.setup.js&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="命令行" tabindex="-1"><a class="header-anchor" href="#命令行"><span>命令行</span></a></h2><p>在完成 <code>package.json</code> 配置后，可以使用以下命令进行自动化测试：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>  <span class="token function">npm</span> <span class="token builtin class-name">exec</span> jest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="编写测试用例" tabindex="-1"><a class="header-anchor" href="#编写测试用例"><span>编写测试用例</span></a></h2><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token comment">// 引入 FaasJS 的测试函数封装类</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> FuncWarper <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/test&#39;</span>
<span class="token comment">// 引入云函数文件，假设云函数文件在 \`../index.func\`</span>
<span class="token keyword">import</span> Func <span class="token keyword">from</span> <span class="token string">&#39;../index.func&#39;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;should work&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 读取目标云函数文件</span>
    <span class="token keyword">const</span> func <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FuncWarper</span><span class="token punctuation">(</span>Func<span class="token punctuation">)</span>

    <span class="token comment">// 触发云函数</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> func<span class="token punctuation">.</span><span class="token function">handler</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment">// 校验响应结果</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span><span class="token string">&#39;{&quot;data&quot;:&quot;Hello, world&quot;}&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关文档" tabindex="-1"><a class="header-anchor" href="#相关文档"><span>相关文档</span></a></h2>`,12),r={href:"https://jestjs.io/",target:"_blank",rel:"noopener noreferrer"},d={href:"https://jestjs.io/docs/en/expect",target:"_blank",rel:"noopener noreferrer"};function k(v,m){const s=p("ExternalLinkIcon");return o(),c("div",null,[u,n("ul",null,[n("li",null,[n("a",r,[a("Jest"),e(s)])]),n("li",null,[n("a",d,[a("Jest Expect"),e(s)])])])])}const b=t(i,[["render",k],["__file","test.html.vue"]]),f=JSON.parse('{"path":"/zh/doc/test.html","title":"@faasjs/test","lang":"zh","frontmatter":{},"headers":[{"level":2,"title":"package.json 配置","slug":"package-json-配置","link":"#package-json-配置","children":[]},{"level":2,"title":"命令行","slug":"命令行","link":"#命令行","children":[]},{"level":2,"title":"编写测试用例","slug":"编写测试用例","link":"#编写测试用例","children":[]},{"level":2,"title":"相关文档","slug":"相关文档","link":"#相关文档","children":[]}],"git":{"updatedTime":1708849395000},"filePathRelative":"zh/doc/test.md"}');export{b as comp,f as data};
