import{_ as o,r as c,c as l,b as n,d as a,w as t,e as s,a as p,o as i}from"./app--Hv8fpCh.js";const u={},r=n("h1",{id:"type-alias-funceventtype-t",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#type-alias-funceventtype-t"},[n("span",null,"Type Alias: FuncEventType<T>")])],-1),d=n("strong",null,"FuncEventType",-1),_=n("code",null,"T",-1),h=n("code",null,"T",-1),m=n("em",null,"extends",-1),k=n("code",null,"Func",-1),y=n("code",null,"any",-1),v=n("code",null,"any",-1),f=n("code",null,"P",-1),T=n("code",null,"any",-1),g=n("p",null,"Get the event type of a func",-1),x=n("h2",{id:"type-parameters",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#type-parameters"},[n("span",null,"Type Parameters")])],-1),b=n("strong",null,"T",-1),F=n("em",null,"extends",-1),E=n("code",null,"Func",-1),w=n("code",null,"any",-1),N=n("code",null,"any",-1),P=n("code",null,"any",-1),V=p(`<h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> useFunc<span class="token punctuation">,</span> <span class="token keyword">type</span> <span class="token class-name">FuncEventType</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/func&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> func <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useFunc</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token punctuation">{</span> counter<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">FuncEventType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> func<span class="token operator">&gt;</span> <span class="token comment">// =&gt; { counter: number }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function j(B,R){const e=c("RouteLink");return i(),l("div",null,[n("p",null,[a(e,{to:"/doc/test/"},{default:t(()=>[s("Documents")]),_:1}),s(" / "),a(e,{to:"/doc/test/"},{default:t(()=>[s("@faasjs/test")]),_:1}),s(" / FuncEventType")]),r,n("blockquote",null,[n("p",null,[d,s("<"),_,s(">: "),h,s(),m,s(),a(e,{to:"/doc/test/classes/Func.html"},{default:t(()=>[k]),_:1}),s("<infer P, "),y,s(", "),v,s("> ? "),f,s(" : "),T])]),g,x,n("p",null,[s("â€¢ "),b,s(),F,s(),a(e,{to:"/doc/test/classes/Func.html"},{default:t(()=>[E]),_:1}),s("<"),w,s(", "),N,s(", "),P,s(">")]),V])}const C=o(u,[["render",j],["__file","FuncEventType.html.vue"]]),L=JSON.parse('{"path":"/doc/test/type-aliases/FuncEventType.html","title":"Type Alias: FuncEventType<T>","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type Parameters","slug":"type-parameters","link":"#type-parameters","children":[]},{"level":2,"title":"Example","slug":"example","link":"#example","children":[]}],"git":{"updatedTime":null},"filePathRelative":"doc/test/type-aliases/FuncEventType.md"}');export{C as comp,L as data};
