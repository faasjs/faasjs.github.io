import{_ as a,c as s,b as d,d as o,e as r,f as n,a as c,r as i,o as l}from"./app-DWr1BD6u.js";const p={};function g(u,e){const t=i("RouteLink");return l(),s("div",null,[d("p",null,[o(t,{to:"/doc/knex/"},{default:r(()=>e[0]||(e[0]=[n("Documents")])),_:1}),e[2]||(e[2]=n(" / ")),o(t,{to:"/doc/knex/"},{default:r(()=>e[1]||(e[1]=[n("@faasjs/knex")])),_:1}),e[3]||(e[3]=n(" / originKnex"))]),e[4]||(e[4]=c('<h1 id="function-originknex" tabindex="-1"><a class="header-anchor" href="#function-originknex"><span>Function: originKnex()</span></a></h1><blockquote><p><strong>originKnex</strong>&lt;<code>TRecord</code>, <code>TResult</code>&gt;(<code>config</code>): <code>Knex</code>&lt;<code>TRecord</code>, <code>TResult</code>&gt;</p></blockquote><p>Origin <a href="https://knexjs.org/" target="_blank" rel="noopener noreferrer">knex</a> instance.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><p>• <strong>TRecord</strong> <em>extends</em> <code>object</code> = <code>any</code></p><p>• <strong>TResult</strong> = <code>unknown</code>[]</p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><p>• <strong>config</strong>: <code>string</code> | <code>Config</code>&lt;<code>any</code>&gt;</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>Knex</code>&lt;<code>TRecord</code>, <code>TResult</code>&gt;</p>',10))])}const m=a(p,[["render",g],["__file","originKnex.html.vue"]]),f=JSON.parse('{"path":"/doc/knex/functions/originKnex.html","title":"Function: originKnex()","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type Parameters","slug":"type-parameters","link":"#type-parameters","children":[]},{"level":2,"title":"Parameters","slug":"parameters","link":"#parameters","children":[]},{"level":2,"title":"Returns","slug":"returns","link":"#returns","children":[]}],"git":{"updatedTime":null},"filePathRelative":"doc/knex/functions/originKnex.md"}');export{m as comp,f as data};
