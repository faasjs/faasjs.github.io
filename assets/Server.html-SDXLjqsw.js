import{_ as t,r as c,o as p,c as d,a as e,d as a,w as n,b as s,e as r}from"./app-4prM7q_v.js";const l={},h=r(`<h1 id="class-server" tabindex="-1"><a class="header-anchor" href="#class-server"><span>Class: Server</span></a></h1><p>FaasJS Server.</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> server <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Server</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
 port<span class="token operator">:</span> <span class="token number">8080</span><span class="token punctuation">,</span>
 cache<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h2><h3 id="new-server-root-opts" tabindex="-1"><a class="header-anchor" href="#new-server-root-opts"><span>new Server(root, opts)</span></a></h3>`,5),i=e("strong",null,"new Server",-1),u=e("code",null,"root",-1),g=e("code",null,"opts",-1),b=e("code",null,"Server",-1),v=r('<h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><p>• <strong>root</strong>: <code>string</code></p><p>Project path</p><p>• <strong>opts?</strong>: <code>Object</code></p><p>Options</p><p>• <strong>opts.cache?</strong>: <code>boolean</code></p><p>Enable cache, default is false</p><p>• <strong>opts.onError?</strong>: (<code>error</code>) =&gt; <code>void</code></p><p>• <strong>opts.port?</strong>: <code>number</code></p><p>Port, default is 3000</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4>',11),m=e("code",null,"Server",-1),k=r('<h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="logger" tabindex="-1"><a class="header-anchor" href="#logger"><span>logger</span></a></h3><blockquote><p><strong><code>readonly</code></strong> <strong>logger</strong>: <code>Logger</code></p></blockquote><h3 id="onerror" tabindex="-1"><a class="header-anchor" href="#onerror"><span>onError?</span></a></h3><blockquote><p><strong>onError</strong>?: (<code>error</code>) =&gt; <code>void</code></p></blockquote><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><p>• <strong>error</strong>: <code>Error</code></p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>void</code></p><h3 id="opts" tabindex="-1"><a class="header-anchor" href="#opts"><span>opts</span></a></h3><blockquote><p><strong><code>readonly</code></strong> <strong>opts</strong>: <code>Object</code></p></blockquote><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration"><span>Type declaration</span></a></h4><h5 id="cache" tabindex="-1"><a class="header-anchor" href="#cache"><span>cache</span></a></h5><blockquote><p><strong>cache</strong>: <code>boolean</code></p></blockquote><h5 id="port" tabindex="-1"><a class="header-anchor" href="#port"><span>port</span></a></h5><blockquote><p><strong>port</strong>: <code>number</code></p></blockquote><h3 id="root" tabindex="-1"><a class="header-anchor" href="#root"><span>root</span></a></h3><blockquote><p><strong><code>readonly</code></strong> <strong>root</strong>: <code>string</code></p></blockquote><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h2><h3 id="close" tabindex="-1"><a class="header-anchor" href="#close"><span>close()</span></a></h3><blockquote><p><strong>close</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h3 id="listen" tabindex="-1"><a class="header-anchor" href="#listen"><span>listen()</span></a></h3><blockquote><p><strong>listen</strong>(): <code>Server</code>&lt;<em>typeof</em> <code>IncomingMessage</code>, <em>typeof</em> <code>ServerResponse</code>&gt;</p></blockquote><p>Start server.</p><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3"><span>Returns</span></a></h4><p><code>Server</code>&lt;<em>typeof</em> <code>IncomingMessage</code>, <em>typeof</em> <code>ServerResponse</code>&gt;</p><h3 id="processrequest" tabindex="-1"><a class="header-anchor" href="#processrequest"><span>processRequest()</span></a></h3><blockquote><p><strong>processRequest</strong>(<code>path</code>, <code>req</code>, <code>res</code>, <code>requestedAt</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h4><p>• <strong>path</strong>: <code>string</code></p><p>• <strong>req</strong>: <code>IncomingMessage</code></p><p>• <strong>res</strong>: <code>ServerResponse</code>&lt;<code>IncomingMessage</code>&gt; &amp; <code>Object</code></p><p>• <strong>requestedAt</strong>: <code>number</code></p><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p>',37);function f(_,x){const o=c("RouterLink");return p(),d("div",null,[e("p",null,[a(o,{to:"/doc/server/"},{default:n(()=>[s("Documents")]),_:1}),s(" / "),a(o,{to:"/doc/server/"},{default:n(()=>[s("@faasjs/server")]),_:1}),s(" / Server")]),h,e("blockquote",null,[e("p",null,[i,s("("),u,s(", "),g,s("?): "),a(o,{to:"/doc/server/classes/Server.html"},{default:n(()=>[b]),_:1})])]),v,e("p",null,[a(o,{to:"/doc/server/classes/Server.html"},{default:n(()=>[m]),_:1})]),k])}const S=t(l,[["render",f],["__file","Server.html.vue"]]);export{S as default};
