import{_ as n,c as d,b as o,d as a,e as l,f as t,a as r,r as p,o as i}from"./app-DeOSLQOv.js";const m={};function u(c,e){const s=p("RouteLink");return i(),d("div",null,[o("p",null,[a(s,{to:"/doc/react/"},{default:l(()=>e[0]||(e[0]=[t("Documents")])),_:1}),e[2]||(e[2]=t(" / ")),a(s,{to:"/doc/react/"},{default:l(()=>e[1]||(e[1]=[t("@faasjs/react")])),_:1}),e[3]||(e[3]=t(" / FormProps"))]),e[12]||(e[12]=r('<h1 id="type-alias-formprops-values-formelements" tabindex="-1"><a class="header-anchor" href="#type-alias-formprops-values-formelements"><span>Type Alias: FormProps&lt;Values, FormElements&gt;</span></a></h1><blockquote><p><strong>FormProps</strong>&lt;<code>Values</code>, <code>FormElements</code>&gt;: <code>object</code></p></blockquote><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><p>• <strong>Values</strong> <em>extends</em> <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; = <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</p>',4)),o("p",null,[e[6]||(e[6]=t("• ")),e[7]||(e[7]=o("strong",null,"FormElements",-1)),e[8]||(e[8]=t()),e[9]||(e[9]=o("em",null,"extends",-1)),e[10]||(e[10]=t()),a(s,{to:"/doc/react/type-aliases/FormElementTypes.html"},{default:l(()=>e[4]||(e[4]=[o("code",null,"FormElementTypes",-1)])),_:1}),e[11]||(e[11]=t(" = ")),a(s,{to:"/doc/react/type-aliases/FormElementTypes.html"},{default:l(()=>e[5]||(e[5]=[o("code",null,"FormElementTypes",-1)])),_:1})]),e[13]||(e[13]=r('<h2 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration"><span>Type declaration</span></a></h2><h3 id="defaultvalues" tabindex="-1"><a class="header-anchor" href="#defaultvalues"><span>defaultValues?</span></a></h3><blockquote><p><code>optional</code> <strong>defaultValues</strong>: <code>Values</code></p></blockquote><h3 id="elements" tabindex="-1"><a class="header-anchor" href="#elements"><span>elements?</span></a></h3><blockquote><p><code>optional</code> <strong>elements</strong>: <code>FormElements</code></p></blockquote><h3 id="items" tabindex="-1"><a class="header-anchor" href="#items"><span>items</span></a></h3><blockquote><p><strong>items</strong>: <code>FormLabelElementProps</code>[]</p></blockquote><h3 id="onsubmit" tabindex="-1"><a class="header-anchor" href="#onsubmit"><span>onSubmit()?</span></a></h3><blockquote><p><code>optional</code> <strong>onSubmit</strong>: (<code>values</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><p>• <strong>values</strong>: <code>Values</code></p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p>',13))])}const h=n(m,[["render",u],["__file","FormProps.html.vue"]]),g=JSON.parse('{"path":"/doc/react/type-aliases/FormProps.html","title":"Type Alias: FormProps<Values, FormElements>","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type Parameters","slug":"type-parameters","link":"#type-parameters","children":[]},{"level":2,"title":"Type declaration","slug":"type-declaration","link":"#type-declaration","children":[{"level":3,"title":"defaultValues?","slug":"defaultvalues","link":"#defaultvalues","children":[]},{"level":3,"title":"elements?","slug":"elements","link":"#elements","children":[]},{"level":3,"title":"items","slug":"items","link":"#items","children":[]},{"level":3,"title":"onSubmit()?","slug":"onsubmit","link":"#onsubmit","children":[]}]}],"git":{"updatedTime":null},"filePathRelative":"doc/react/type-aliases/FormProps.md"}');export{h as comp,g as data};
