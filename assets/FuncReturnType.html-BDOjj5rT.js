import{_ as c,r as o,o as l,c as p,a as n,d as a,w as t,b as e,e as u}from"./app-CK7D_tkn.js";const r={},d=n("h1",{id:"type-alias-funcreturntype-t",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#type-alias-funcreturntype-t"},[n("span",null,"Type alias: FuncReturnType<T>")])],-1),i=n("strong",null,"FuncReturnType",-1),_=n("code",null,"T",-1),h=n("code",null,"T",-1),m=n("code",null,"Func",-1),y=n("code",null,"any",-1),k=n("code",null,"any",-1),f=n("code",null,"R",-1),T=n("code",null,"any",-1),v=u(`<p>Get the return type of a func</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useFunc<span class="token punctuation">,</span> <span class="token keyword">type</span> <span class="token class-name">FuncReturnType</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/func&#39;</span>

<span class="token keyword">const</span> func <span class="token operator">=</span> <span class="token function">useFunc</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span>

FuncReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> func<span class="token operator">&gt;</span> <span class="token comment">// =&gt; number</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type parameters</span></a></h2>`,4),x=n("strong",null,"T",-1),F=n("code",null,"Func",-1),g=n("code",null,"any",-1),R=n("code",null,"any",-1),b=n("code",null,"any",-1);function w(N,V){const s=o("RouteLink");return l(),p("div",null,[n("p",null,[a(s,{to:"/doc/func/"},{default:t(()=>[e("Documents")]),_:1}),e(" / "),a(s,{to:"/doc/func/"},{default:t(()=>[e("@faasjs/func")]),_:1}),e(" / FuncReturnType")]),d,n("blockquote",null,[n("p",null,[i,e("<"),_,e(">: "),h,e(" extends "),a(s,{to:"/doc/func/classes/Func.html"},{default:t(()=>[m]),_:1}),e("<"),y,e(", "),k,e(", infer R> ? "),f,e(" : "),T])]),v,n("p",null,[e("â€¢ "),x,e(" extends "),a(s,{to:"/doc/func/classes/Func.html"},{default:t(()=>[F]),_:1}),e("<"),g,e(", "),R,e(", "),b,e(">")])])}const E=c(r,[["render",w],["__file","FuncReturnType.html.vue"]]),j=JSON.parse('{"path":"/doc/func/type-aliases/FuncReturnType.html","title":"Type alias: FuncReturnType<T>","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Example","slug":"example","link":"#example","children":[]},{"level":2,"title":"Type parameters","slug":"type-parameters","link":"#type-parameters","children":[]}],"git":{"updatedTime":null},"filePathRelative":"doc/func/type-aliases/FuncReturnType.md"}');export{E as comp,j as data};
