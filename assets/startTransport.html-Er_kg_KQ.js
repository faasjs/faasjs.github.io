import{_ as l,c as p,b as e,d as a,e as r,f as t,a as o,r as i,o as d}from"./app-BYD7mR1L.js";const c={};function u(m,s){const n=i("RouteLink");return d(),p("div",null,[e("p",null,[a(n,{to:"/doc/logger/"},{default:r(()=>s[0]||(s[0]=[t("Documents")])),_:1}),s[2]||(s[2]=t(" / ")),a(n,{to:"/doc/logger/"},{default:r(()=>s[1]||(s[1]=[t("@faasjs/logger")])),_:1}),s[3]||(s[3]=t(" / startTransport"))]),s[7]||(s[7]=o('<h1 id="function-starttransport" tabindex="-1"><a class="header-anchor" href="#function-starttransport"><span>Function: startTransport()</span></a></h1><blockquote><p><strong>startTransport</strong>(<code>options</code>?): <code>void</code></p></blockquote><p>Starts the logging transport with the specified options.</p><p>This function sets a timeout to periodically flush cached messages. If there are any cached messages, it will flush them and then restart the process.</p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options?</span></a></h3>',6)),e("p",null,[a(n,{to:"/doc/logger/type-aliases/TransportOptions.html"},{default:r(()=>s[4]||(s[4]=[e("code",null,"TransportOptions",-1)])),_:1}),s[5]||(s[5]=t(" = ")),s[6]||(s[6]=e("code",null,"{}",-1))]),s[8]||(s[8]=o(`<p>The options to configure the logging transport.</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>void</code></p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> startTransport <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/logger&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5))])}const g=l(c,[["render",u],["__file","startTransport.html.vue"]]),f=JSON.parse('{"path":"/doc/logger/functions/startTransport.html","title":"Function: startTransport()","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Parameters","slug":"parameters","link":"#parameters","children":[{"level":3,"title":"options?","slug":"options","link":"#options","children":[]}]},{"level":2,"title":"Returns","slug":"returns","link":"#returns","children":[]},{"level":2,"title":"Example","slug":"example","link":"#example","children":[]}],"git":{},"filePathRelative":"doc/logger/functions/startTransport.md"}');export{g as comp,f as data};
