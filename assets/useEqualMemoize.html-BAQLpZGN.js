import{_ as n,r,c as u,b as l,d as o,w as s,e as a,a as i,o as d}from"./app-DItxPU7M.js";const m={};function c(p,e){const t=r("RouteLink");return d(),u("div",null,[l("p",null,[o(t,{to:"/doc/react/"},{default:s(()=>e[0]||(e[0]=[a("Documents")])),_:1}),e[2]||(e[2]=a(" / ")),o(t,{to:"/doc/react/"},{default:s(()=>e[1]||(e[1]=[a("@faasjs/react")])),_:1}),e[3]||(e[3]=a(" / useEqualMemoize"))]),e[4]||(e[4]=i('<h1 id="function-useequalmemoize" tabindex="-1"><a class="header-anchor" href="#function-useequalmemoize"><span>Function: useEqualMemoize()</span></a></h1><blockquote><p><strong>useEqualMemoize</strong>(<code>value</code>): <code>any</code></p></blockquote><p>Custom hook that memoizes a value using deep equality comparison.</p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><p>â€¢ <strong>value</strong>: <code>any</code></p><p>The value to be memoized.</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>any</code></p><p>The memoized value.</p>',9))])}const f=n(m,[["render",c],["__file","useEqualMemoize.html.vue"]]),q=JSON.parse('{"path":"/doc/react/functions/useEqualMemoize.html","title":"Function: useEqualMemoize()","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Parameters","slug":"parameters","link":"#parameters","children":[]},{"level":2,"title":"Returns","slug":"returns","link":"#returns","children":[]}],"git":{"updatedTime":null},"filePathRelative":"doc/react/functions/useEqualMemoize.md"}');export{f as comp,q as data};
