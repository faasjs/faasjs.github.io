import{_ as l,c as o,b as s,d as e,e as p,f as a,a as i,r as c,o as u}from"./app-B_Qfx6X3.js";const r={};function k(d,n){const t=c("RouteLink");return u(),o("div",null,[s("p",null,[e(t,{to:"/doc/ant-design/"},{default:p(()=>n[0]||(n[0]=[a("Documents")])),_:1}),n[2]||(n[2]=a(" / ")),e(t,{to:"/doc/ant-design/"},{default:p(()=>n[1]||(n[1]=[a("@faasjs/ant-design")])),_:1}),n[3]||(n[3]=a(" / UnionFaasItemElement"))]),n[26]||(n[26]=s("h1",{id:"type-alias-unionfaasitemelement-value-values",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#type-alias-unionfaasitemelement-value-values"},[s("span",null,"Type Alias: UnionFaasItemElement<Value, Values>")])],-1)),s("blockquote",null,[s("p",null,[n[6]||(n[6]=s("strong",null,"UnionFaasItemElement",-1)),n[7]||(n[7]=a("<")),n[8]||(n[8]=s("code",null,"Value",-1)),n[9]||(n[9]=a(", ")),n[10]||(n[10]=s("code",null,"Values",-1)),n[11]||(n[11]=a(">: ")),n[12]||(n[12]=s("code",null,"ReactElement",-1)),n[13]||(n[13]=a("<")),e(t,{to:"/doc/ant-design/type-aliases/UnionFaasItemInjection.html"},{default:p(()=>n[4]||(n[4]=[s("code",null,"UnionFaasItemInjection",-1)])),_:1}),n[14]||(n[14]=a("<")),n[15]||(n[15]=s("code",null,"Value",-1)),n[16]||(n[16]=a(", ")),n[17]||(n[17]=s("code",null,"Values",-1)),n[18]||(n[18]=a(">> | ")),n[19]||(n[19]=s("code",null,"FC",-1)),n[20]||(n[20]=a("<")),e(t,{to:"/doc/ant-design/type-aliases/UnionFaasItemInjection.html"},{default:p(()=>n[5]||(n[5]=[s("code",null,"UnionFaasItemInjection",-1)])),_:1}),n[21]||(n[21]=a("<")),n[22]||(n[22]=s("code",null,"Value",-1)),n[23]||(n[23]=a(", ")),n[24]||(n[24]=s("code",null,"Values",-1)),n[25]||(n[25]=a(">>"))])]),n[27]||(n[27]=i(`<p>Represents a React element that is used in the UnionFaasItem context.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><p>• <strong>Value</strong> = <code>any</code></p><p>The type of the value associated with the element. Defaults to <code>any</code>.</p><p>• <strong>Values</strong> = <code>any</code></p><p>The type of the values associated with the element. Defaults to <code>any</code>.</p><p>This type can either be a React element with the specified injection types or <code>null</code>.</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-tsx line-numbers-mode" data-highlighter="prismjs" data-ext="tsx" data-title="tsx"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token keyword">type</span> <span class="token class-name">UnionFaasItemElement</span><span class="token punctuation">,</span> Form<span class="token punctuation">,</span> Description<span class="token punctuation">,</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/ant-design&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> NameComponent<span class="token operator">:</span> <span class="token function-variable function">UnionFaasItemElement</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> scene<span class="token punctuation">,</span> value <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">switch</span> <span class="token punctuation">(</span>scene<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">switch</span> <span class="token punctuation">(</span>scene<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token string">&#39;form&#39;</span><span class="token operator">:</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token string">&#39;description&#39;</span><span class="token operator">:</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token string">&#39;table&#39;</span><span class="token operator">:</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>value<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token keyword">default</span><span class="token operator">:</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token keyword">null</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">   id<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span></span>
<span class="line">   children<span class="token operator">:</span> NameComponent <span class="token comment">// both \`NameComponent\` and \`&lt;NameComponent /&gt;\` is valid</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">   </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span> <span class="token attr-name">items</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>items<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"> // Will render an input</span>
<span class="line">   </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Description</span></span> <span class="token attr-name">items</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>items<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;John&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"> // Will render a span</span>
<span class="line">   </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">items</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>items<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;John&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"> // Will render a span</span>
<span class="line"> </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9))])}const v=l(r,[["render",k],["__file","UnionFaasItemElement.html.vue"]]),g=JSON.parse('{"path":"/doc/ant-design/type-aliases/UnionFaasItemElement.html","title":"Type Alias: UnionFaasItemElement<Value, Values>","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type Parameters","slug":"type-parameters","link":"#type-parameters","children":[]},{"level":2,"title":"Example","slug":"example","link":"#example","children":[]}],"git":{},"filePathRelative":"doc/ant-design/type-aliases/UnionFaasItemElement.md"}');export{v as comp,g as data};
