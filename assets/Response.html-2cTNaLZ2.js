import{_ as r,c as p,b as e,a as d,d as o,e as a,w as t,r as l,o as c}from"./app-DudbQBtN.js";const i={};function u(h,s){const n=l("RouteLink");return c(),p("div",null,[e("p",null,[o(n,{to:"/doc/react/"},{default:t(()=>s[0]||(s[0]=[a("Documents")])),_:1}),s[2]||(s[2]=a(" / ")),o(n,{to:"/doc/react/"},{default:t(()=>s[1]||(s[1]=[a("@faasjs/react")])),_:1}),s[3]||(s[3]=a(" / Response"))]),s[9]||(s[9]=d(`<h1 id="class-response-t" tabindex="-1"><a class="header-anchor" href="#class-response-t"><span>Class: Response&lt;T&gt;</span></a></h1><p>Response class</p><p>Example:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  status<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span></span>
<span class="line">  data<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    name<span class="token operator">:</span> <span class="token string">&#39;FaasJS&#39;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="t" tabindex="-1"><a class="header-anchor" href="#t"><span>T</span></a></h3><p><code>T</code> = <code>any</code></p><h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor"><span>Constructor</span></a></h3><blockquote><p><strong>new Response</strong>&lt;<code>T</code>&gt;(<code>props</code>): <code>Response</code>&lt;<code>T</code>&gt;</p></blockquote><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="props" tabindex="-1"><a class="header-anchor" href="#props"><span>props</span></a></h5><p><code>ResponseProps</code>&lt;<code>T</code>&gt; = <code>{}</code></p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>Response</code>&lt;<code>T</code>&gt;</p><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="body" tabindex="-1"><a class="header-anchor" href="#body"><span>body</span></a></h3><blockquote><p><code>readonly</code> <strong>body</strong>: <code>any</code></p></blockquote><h3 id="data" tabindex="-1"><a class="header-anchor" href="#data"><span>data?</span></a></h3><blockquote><p><code>readonly</code> <code>optional</code> <strong>data</strong>: <code>T</code></p></blockquote><h3 id="headers" tabindex="-1"><a class="header-anchor" href="#headers"><span>headers</span></a></h3>`,21)),e("blockquote",null,[e("p",null,[s[5]||(s[5]=e("code",null,"readonly",-1)),s[6]||(s[6]=a()),s[7]||(s[7]=e("strong",null,"headers",-1)),s[8]||(s[8]=a(": ")),o(n,{to:"/doc/react/type-aliases/ResponseHeaders.html"},{default:t(()=>s[4]||(s[4]=[e("code",null,"ResponseHeaders",-1)])),_:1})])]),s[10]||(s[10]=e("h3",{id:"status",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#status"},[e("span",null,"status")])],-1)),s[11]||(s[11]=e("blockquote",null,[e("p",null,[e("code",null,"readonly"),a(),e("strong",null,"status"),a(": "),e("code",null,"number")])],-1))])}const m=r(i,[["render",u]]),k=JSON.parse('{"path":"/doc/react/classes/Response.html","title":"Class: Response<T>","lang":"en","frontmatter":{},"git":{},"filePathRelative":"doc/react/classes/Response.md"}');export{m as comp,k as data};
