import{_ as c,r as l,c as o,b as n,d as a,w as t,e,a as p,o as u}from"./app-jjiIXugZ.js";const r={},i=n("h1",{id:"type-alias-funcreturntype-t",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#type-alias-funcreturntype-t"},[n("span",null,"Type Alias: FuncReturnType<T>")])],-1),d=n("strong",null,"FuncReturnType",-1),_=n("code",null,"T",-1),h=n("code",null,"T",-1),m=n("em",null,"extends",-1),y=n("code",null,"Func",-1),k=n("code",null,"any",-1),f=n("code",null,"any",-1),T=n("code",null,"R",-1),v=n("code",null,"any",-1),x=n("p",null,"Get the return type of a func",-1),F=n("h2",{id:"type-parameters",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#type-parameters"},[n("span",null,"Type Parameters")])],-1),b=n("strong",null,"T",-1),g=n("em",null,"extends",-1),R=n("code",null,"Func",-1),w=n("code",null,"any",-1),N=n("code",null,"any",-1),V=n("code",null,"any",-1),j=p(`<h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> useFunc<span class="token punctuation">,</span> <span class="token keyword">type</span> <span class="token class-name">FuncReturnType</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/func&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> func <span class="token operator">=</span> <span class="token function">useFunc</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">FuncReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> func<span class="token operator">&gt;</span> <span class="token comment">// =&gt; number</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function B(E,P){const s=l("RouteLink");return u(),o("div",null,[n("p",null,[a(s,{to:"/doc/func/"},{default:t(()=>[e("Documents")]),_:1}),e(" / "),a(s,{to:"/doc/func/"},{default:t(()=>[e("@faasjs/func")]),_:1}),e(" / FuncReturnType")]),i,n("blockquote",null,[n("p",null,[d,e("<"),_,e(">: "),h,e(),m,e(),a(s,{to:"/doc/func/classes/Func.html"},{default:t(()=>[y]),_:1}),e("<"),k,e(", "),f,e(", infer R> ? "),T,e(" : "),v])]),x,F,n("p",null,[e("â€¢ "),b,e(),g,e(),a(s,{to:"/doc/func/classes/Func.html"},{default:t(()=>[R]),_:1}),e("<"),w,e(", "),N,e(", "),V,e(">")]),j])}const C=c(r,[["render",B],["__file","FuncReturnType.html.vue"]]),L=JSON.parse('{"path":"/doc/func/type-aliases/FuncReturnType.html","title":"Type Alias: FuncReturnType<T>","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type Parameters","slug":"type-parameters","link":"#type-parameters","children":[]},{"level":2,"title":"Example","slug":"example","link":"#example","children":[]}],"git":{"updatedTime":null},"filePathRelative":"doc/func/type-aliases/FuncReturnType.md"}');export{C as comp,L as data};
