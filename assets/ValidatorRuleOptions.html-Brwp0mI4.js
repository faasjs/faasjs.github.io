import{_ as i,r as s,o as r,c as d,a as t,d as o,w as l,b as e,e as n}from"./app-C2oU96l-.js";const c={},p=n('<h1 id="type-alias-validatorruleoptions" tabindex="-1"><a class="header-anchor" href="#type-alias-validatorruleoptions"><span>Type alias: ValidatorRuleOptions</span></a></h1><blockquote><p><strong>ValidatorRuleOptions</strong>: <code>Object</code></p></blockquote><h2 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration"><span>Type declaration</span></a></h2><h3 id="config" tabindex="-1"><a class="header-anchor" href="#config"><span>config?</span></a></h3>',4),h=t("strong",null,"config",-1),u=t("code",null,"Partial",-1),g=t("code",null,"ValidatorOptions",-1),f=n('<h3 id="default" tabindex="-1"><a class="header-anchor" href="#default"><span>default?</span></a></h3><blockquote><p><strong>default</strong>?: <code>any</code></p></blockquote><h3 id="in" tabindex="-1"><a class="header-anchor" href="#in"><span>in?</span></a></h3><blockquote><p><strong>in</strong>?: <code>any</code>[]</p></blockquote><h3 id="regexp" tabindex="-1"><a class="header-anchor" href="#regexp"><span>regexp?</span></a></h3><blockquote><p><strong>regexp</strong>?: <code>RegExp</code></p></blockquote><h3 id="required" tabindex="-1"><a class="header-anchor" href="#required"><span>required?</span></a></h3><blockquote><p><strong>required</strong>?: <code>boolean</code></p></blockquote><h3 id="type" tabindex="-1"><a class="header-anchor" href="#type"><span>type?</span></a></h3><blockquote><p><strong>type</strong>?: <code>ValidatorRuleOptionsType</code></p></blockquote>',10);function _(b,k){const a=s("RouteLink");return r(),d("div",null,[t("p",null,[o(a,{to:"/doc/http/"},{default:l(()=>[e("Documents")]),_:1}),e(" / "),o(a,{to:"/doc/http/"},{default:l(()=>[e("@faasjs/http")]),_:1}),e(" / ValidatorRuleOptions")]),p,t("blockquote",null,[t("p",null,[h,e("?: "),u,e("<"),o(a,{to:"/doc/http/type-aliases/ValidatorOptions.html"},{default:l(()=>[g]),_:1}),e(">")])]),f])}const x=i(c,[["render",_],["__file","ValidatorRuleOptions.html.vue"]]),q=JSON.parse('{"path":"/doc/http/type-aliases/ValidatorRuleOptions.html","title":"Type alias: ValidatorRuleOptions","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type declaration","slug":"type-declaration","link":"#type-declaration","children":[{"level":3,"title":"config?","slug":"config","link":"#config","children":[]},{"level":3,"title":"default?","slug":"default","link":"#default","children":[]},{"level":3,"title":"in?","slug":"in","link":"#in","children":[]},{"level":3,"title":"regexp?","slug":"regexp","link":"#regexp","children":[]},{"level":3,"title":"required?","slug":"required","link":"#required","children":[]},{"level":3,"title":"type?","slug":"type","link":"#type","children":[]}]}],"git":{"updatedTime":null},"filePathRelative":"doc/http/type-aliases/ValidatorRuleOptions.md"}');export{x as comp,q as data};
