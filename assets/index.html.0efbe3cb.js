import{_ as n,r as d,o as l,c,b as e,d as a,e as t,w as i,a as s}from"./app.3f31406d.js";const p={},h=e("h1",{id:"faasjs-ant-design",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#faasjs-ant-design","aria-hidden":"true"},"#"),t(" @faasjs/ant-design")],-1),g={href:"https://github.com/faasjs/faasjs/blob/main/packages/faasjs/browser/LICENSE",target:"_blank",rel:"noopener noreferrer"},f=e("img",{src:"https://img.shields.io/npm/l/@faasjs/browser.svg",alt:"License: MIT"},null,-1),m={href:"https://www.npmjs.com/package/@faasjs/browser",target:"_blank",rel:"noopener noreferrer"},u=e("img",{src:"https://img.shields.io/npm/v/@faasjs/browser/stable.svg",alt:"NPM Stable Version"},null,-1),y={href:"https://www.npmjs.com/package/@faasjs/browser",target:"_blank",rel:"noopener noreferrer"},x=e("img",{src:"https://img.shields.io/npm/v/@faasjs/browser/beta.svg",alt:"NPM Beta Version"},null,-1),b={href:"https://faasjs.com",target:"_blank",rel:"noopener noreferrer"},k={href:"https://ant.design",target:"_blank",rel:"noopener noreferrer"},P={href:"https://reactrouter.com",target:"_blank",rel:"noopener noreferrer"},v=s(`<h2 id="install" tabindex="-1"><a class="header-anchor" href="#install" aria-hidden="true">#</a> Install</h2><pre><code>npm install @faasjs/ant-design
</code></pre><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><p>In <code>@faasjs/ant-design</code>, we use <code>FaasItemProps</code> to provide data structures for components.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">FaasItemType</span> <span class="token operator">=</span>
  <span class="token string">&#39;string&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;string[]&#39;</span> <span class="token operator">|</span>
  <span class="token string">&#39;number&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;number[]&#39;</span> <span class="token operator">|</span>
  <span class="token string">&#39;boolean&#39;</span> <span class="token operator">|</span>
  <span class="token string">&#39;date&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;time&#39;</span> <span class="token operator">|</span>
  <span class="token string">&#39;object&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;object[]&#39;</span>

<span class="token keyword">type</span> <span class="token class-name">FaasItemProps</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  type<span class="token operator">:</span> FaasItemTypes
  id<span class="token operator">:</span> <span class="token builtin">string</span>
  title<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="form" tabindex="-1"><a class="header-anchor" href="#form" aria-hidden="true">#</a> Form</h3>`,6),T={href:"https://ant.design/components/form/#Form",target:"_blank",rel:"noopener noreferrer"},E=e("h3",{id:"formitem",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#formitem","aria-hidden":"true"},"#"),t(" FormItem")],-1),F={href:"https://ant.design/components/form/#Form.Item",target:"_blank",rel:"noopener noreferrer"},I=e("h2",{id:"modules",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#modules","aria-hidden":"true"},"#"),t(" Modules")],-1),w=e("h3",{id:"namespaces",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#namespaces","aria-hidden":"true"},"#"),t(" Namespaces")],-1),_=s(`<h3 id="type-aliases" tabindex="-1"><a class="header-anchor" href="#type-aliases" aria-hidden="true">#</a> Type Aliases</h3><ul><li><a href="#baseitemprops">BaseItemProps</a></li><li><a href="#baseoption">BaseOption</a></li><li><a href="#blankprops">BlankProps</a></li><li><a href="#calendarprops">CalendarProps</a></li><li><a href="#configproviderprops">ConfigProviderProps</a></li><li><a href="#datepickerprops">DatePickerProps</a></li><li><a href="#descriptionitemprops">DescriptionItemProps</a></li><li><a href="#descriptionprops">DescriptionProps</a></li><li><a href="#drawerprops">DrawerProps</a></li><li><a href="#extenddescriptionitemprops">ExtendDescriptionItemProps</a></li><li><a href="#extenddescriptiontypeprops">ExtendDescriptionTypeProps</a></li><li><a href="#extendformitemprops">ExtendFormItemProps</a></li><li><a href="#extendformtypeprops">ExtendFormTypeProps</a></li><li><a href="#extendtableitemprops">ExtendTableItemProps</a></li><li><a href="#extendtabletypeprops">ExtendTableTypeProps</a></li><li><a href="#extendtypes">ExtendTypes</a></li><li><a href="#faasitemprops">FaasItemProps</a></li><li><a href="#faasitemtype">FaasItemType</a></li><li><a href="#faasitemtypevalue">FaasItemTypeValue</a></li><li><a href="#formitemprops">FormItemProps</a></li><li><a href="#formprops">FormProps</a></li><li><a href="#linkprops">LinkProps</a></li><li><a href="#modalprops">ModalProps</a></li><li><a href="#routesprops">RoutesProps</a></li><li><a href="#tableitemprops">TableItemProps</a></li><li><a href="#tableprops">TableProps</a></li><li><a href="#timepickerprops">TimePickerProps</a></li><li><a href="#titleprops">TitleProps</a></li><li><a href="#setdrawerprops">setDrawerProps</a></li><li><a href="#setmodalprops">setModalProps</a></li></ul><h3 id="variables" tabindex="-1"><a class="header-anchor" href="#variables" aria-hidden="true">#</a> Variables</h3><ul><li><a href="#configcontext">ConfigContext</a></li><li><a href="#datepicker">DatePicker</a></li></ul><h3 id="functions" tabindex="-1"><a class="header-anchor" href="#functions" aria-hidden="true">#</a> Functions</h3><ul><li><a href="#blank">Blank</a></li><li><a href="#calendar">Calendar</a></li><li><a href="#configprovider">ConfigProvider</a></li><li><a href="#description">Description</a></li><li><a href="#form">Form</a></li><li><a href="#formitem">FormItem</a></li><li><a href="#link">Link</a></li><li><a href="#pagenotfound">PageNotFound</a></li><li><a href="#routes">Routes</a></li><li><a href="#table">Table</a></li><li><a href="#timepicker">TimePicker</a></li><li><a href="#title">Title</a></li><li><a href="#transferoptions">transferOptions</a></li><li><a href="#useconfigcontext">useConfigContext</a></li><li><a href="#usedrawer">useDrawer</a></li><li><a href="#usemodal">useModal</a></li></ul><h2 id="type-aliases-1" tabindex="-1"><a class="header-anchor" href="#type-aliases-1" aria-hidden="true">#</a> Type Aliases</h2><h3 id="baseitemprops" tabindex="-1"><a class="header-anchor" href="#baseitemprops" aria-hidden="true">#</a> BaseItemProps</h3><p>Ƭ <strong>BaseItemProps</strong>: <code>Object</code></p><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>id</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>options?</code></td><td style="text-align:left;"><a href="#baseoption"><code>BaseOption</code></a>[]</td></tr><tr><td style="text-align:left;"><code>title?</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><hr><h3 id="baseoption" tabindex="-1"><a class="header-anchor" href="#baseoption" aria-hidden="true">#</a> BaseOption</h3><p>Ƭ <strong>BaseOption</strong>: <code>string</code> | <code>number</code> | { <code>label</code>: <code>string</code> ; <code>value?</code>: <code>string</code> | <code>number</code> }</p><hr><h3 id="blankprops" tabindex="-1"><a class="header-anchor" href="#blankprops" aria-hidden="true">#</a> BlankProps</h3><p>Ƭ <strong>BlankProps</strong>: <code>Object</code></p><h4 id="type-declaration-1" tabindex="-1"><a class="header-anchor" href="#type-declaration-1" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>text?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>value?</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><hr><h3 id="calendarprops" tabindex="-1"><a class="header-anchor" href="#calendarprops" aria-hidden="true">#</a> CalendarProps</h3><p>Ƭ <strong>CalendarProps</strong>: <code>AntdProps</code>&lt;<code>Dayjs</code>&gt;</p><hr><h3 id="configproviderprops" tabindex="-1"><a class="header-anchor" href="#configproviderprops" aria-hidden="true">#</a> ConfigProviderProps</h3><p>Ƭ <strong>ConfigProviderProps</strong>: <code>Object</code></p><h4 id="type-declaration-2" tabindex="-1"><a class="header-anchor" href="#type-declaration-2" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Blank?</code></td><td style="text-align:left;">{ <code>text?</code>: <code>string</code> }</td></tr><tr><td style="text-align:left;"><code>Blank.text?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>Form?</code></td><td style="text-align:left;">{ <code>submit?</code>: { <code>text?</code>: <code>string</code> } }</td></tr><tr><td style="text-align:left;"><code>Form.submit?</code></td><td style="text-align:left;">{ <code>text?</code>: <code>string</code> }</td></tr><tr><td style="text-align:left;"><code>Form.submit.text?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>Link?</code></td><td style="text-align:left;">{ <code>style?</code>: <code>CSSProperties</code> ; <code>target?</code>: <code>string</code> }</td></tr><tr><td style="text-align:left;"><code>Link.style?</code></td><td style="text-align:left;"><code>CSSProperties</code></td></tr><tr><td style="text-align:left;"><code>Link.target?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>Title?</code></td><td style="text-align:left;">{ <code>separator?</code>: <code>string</code> ; <code>suffix?</code>: <code>string</code> }</td></tr><tr><td style="text-align:left;"><code>Title.separator?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>Title.suffix?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>antd?</code></td><td style="text-align:left;"><code>AntdConfigProviderProps</code></td></tr><tr><td style="text-align:left;"><code>common?</code></td><td style="text-align:left;">{ <code>add?</code>: <code>string</code> ; <code>all?</code>: <code>string</code> ; <code>blank?</code>: <code>string</code> ; <code>delete?</code>: <code>string</code> ; <code>pageNotFound?</code>: <code>string</code> ; <code>required?</code>: <code>string</code> ; <code>reset?</code>: <code>string</code> ; <code>search?</code>: <code>string</code> ; <code>submit?</code>: <code>string</code> }</td></tr><tr><td style="text-align:left;"><code>common.add?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>common.all?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>common.blank?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>common.delete?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>common.pageNotFound?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>common.required?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>common.reset?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>common.search?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>common.submit?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>lang?</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><hr><h3 id="datepickerprops" tabindex="-1"><a class="header-anchor" href="#datepickerprops" aria-hidden="true">#</a> DatePickerProps</h3><p>Ƭ <strong>DatePickerProps</strong>: <code>PickerDateProps</code>&lt;<code>Dayjs</code>&gt;</p><hr><h3 id="descriptionitemprops" tabindex="-1"><a class="header-anchor" href="#descriptionitemprops" aria-hidden="true">#</a> DescriptionItemProps</h3><p>Ƭ <strong>DescriptionItemProps</strong>&lt;<code>T</code>&gt;: { <code>children?</code>: <code>JSX.Element</code> ; <code>render?</code>: (<code>value</code>: <code>T</code>, <code>values</code>: <code>any</code>) =&gt; <code>ReactNode</code> | <code>JSX.Element</code> } &amp; <a href="#faasitemprops"><code>FaasItemProps</code></a> &amp; { <code>object?</code>: <a href="#descriptionitemprops"><code>DescriptionItemProps</code></a>[] }</p><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><hr><h3 id="descriptionprops" tabindex="-1"><a class="header-anchor" href="#descriptionprops" aria-hidden="true">#</a> DescriptionProps</h3><p>Ƭ <strong>DescriptionProps</strong>&lt;<code>T</code>, <code>ExtendItemProps</code>&gt;: { <code>dataSource?</code>: <code>T</code> ; <code>extendTypes?</code>: { <code>[key: string]</code>: <a href="#extenddescriptiontypeprops"><code>ExtendDescriptionTypeProps</code></a>; } ; <code>faasData?</code>: <code>FaasDataWrapperProps</code>&lt;<code>T</code>&gt; ; <code>items</code>: (<a href="#descriptionitemprops"><code>DescriptionItemProps</code></a> | <code>ExtendItemProps</code>)[] ; <code>renderTitle?</code>: (<code>values</code>: <code>T</code>) =&gt; <code>ReactNode</code> | <code>JSX.Element</code> } &amp; <code>DescriptionsProps</code></p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>any</code></td></tr><tr><td style="text-align:left;"><code>ExtendItemProps</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><hr><h3 id="drawerprops" tabindex="-1"><a class="header-anchor" href="#drawerprops" aria-hidden="true">#</a> DrawerProps</h3><p>Ƭ <strong>DrawerProps</strong>: <code>AntdDrawerProps</code> &amp; { <code>children?</code>: <code>JSX.Element</code> | <code>JSX.Element</code>[] }</p><hr><h3 id="extenddescriptionitemprops" tabindex="-1"><a class="header-anchor" href="#extenddescriptionitemprops" aria-hidden="true">#</a> ExtendDescriptionItemProps</h3><p>Ƭ <strong>ExtendDescriptionItemProps</strong>: <a href="#baseitemprops"><code>BaseItemProps</code></a></p><hr><h3 id="extenddescriptiontypeprops" tabindex="-1"><a class="header-anchor" href="#extenddescriptiontypeprops" aria-hidden="true">#</a> ExtendDescriptionTypeProps</h3><p>Ƭ <strong>ExtendDescriptionTypeProps</strong>: <code>Object</code></p><h4 id="type-declaration-3" tabindex="-1"><a class="header-anchor" href="#type-declaration-3" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>children?</code></td><td style="text-align:left;"><code>JSX.Element</code> | <code>null</code></td></tr><tr><td style="text-align:left;"><code>render?</code></td><td style="text-align:left;">(<code>value</code>: <code>any</code>, <code>values</code>: <code>any</code>) =&gt; <code>ReactNode</code> | <code>JSX.Element</code></td></tr></tbody></table><hr><h3 id="extendformitemprops" tabindex="-1"><a class="header-anchor" href="#extendformitemprops" aria-hidden="true">#</a> ExtendFormItemProps</h3><p>Ƭ <strong>ExtendFormItemProps</strong>: <a href="#baseitemprops"><code>BaseItemProps</code></a> &amp; <code>AntdFormItemProps</code></p><hr><h3 id="extendformtypeprops" tabindex="-1"><a class="header-anchor" href="#extendformtypeprops" aria-hidden="true">#</a> ExtendFormTypeProps</h3><p>Ƭ <strong>ExtendFormTypeProps</strong>: <code>Object</code></p><h4 id="type-declaration-4" tabindex="-1"><a class="header-anchor" href="#type-declaration-4" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>children?</code></td><td style="text-align:left;"><code>ReactNode</code></td></tr></tbody></table><hr><h3 id="extendtableitemprops" tabindex="-1"><a class="header-anchor" href="#extendtableitemprops" aria-hidden="true">#</a> ExtendTableItemProps</h3><p>Ƭ <strong>ExtendTableItemProps</strong>&lt;<code>T</code>&gt;: <a href="#baseitemprops"><code>BaseItemProps</code></a> &amp; <code>Omit</code>&lt;<code>AntdTableColumnProps</code>&lt;<code>T</code>&gt;, <code>&quot;children&quot;</code>&gt;</p><h4 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><hr><h3 id="extendtabletypeprops" tabindex="-1"><a class="header-anchor" href="#extendtabletypeprops" aria-hidden="true">#</a> ExtendTableTypeProps</h3><p>Ƭ <strong>ExtendTableTypeProps</strong>: <code>Object</code></p><h4 id="type-declaration-5" tabindex="-1"><a class="header-anchor" href="#type-declaration-5" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>children?</code></td><td style="text-align:left;"><code>JSX.Element</code> | <code>null</code></td></tr><tr><td style="text-align:left;"><code>render?</code></td><td style="text-align:left;">(<code>value</code>: <code>any</code>, <code>values</code>: <code>any</code>, <code>index</code>: <code>number</code>) =&gt; <code>JSX.Element</code> | <code>string</code> | <code>number</code> | <code>boolean</code> | <code>null</code></td></tr></tbody></table><hr><h3 id="extendtypes" tabindex="-1"><a class="header-anchor" href="#extendtypes" aria-hidden="true">#</a> ExtendTypes</h3><p>Ƭ <strong>ExtendTypes</strong>: <code>Object</code></p><h4 id="index-signature" tabindex="-1"><a class="header-anchor" href="#index-signature" aria-hidden="true">#</a> Index signature</h4><p>▪ [type: <code>string</code>]: <a href="#extendformtypeprops"><code>ExtendFormTypeProps</code></a></p><hr><h3 id="faasitemprops" tabindex="-1"><a class="header-anchor" href="#faasitemprops" aria-hidden="true">#</a> FaasItemProps</h3><p>Ƭ <strong>FaasItemProps</strong>: <a href="#baseitemprops"><code>BaseItemProps</code></a> &amp; { <code>type?</code>: <a href="#faasitemtype"><code>FaasItemType</code></a> }</p><hr><h3 id="faasitemtype" tabindex="-1"><a class="header-anchor" href="#faasitemtype" aria-hidden="true">#</a> FaasItemType</h3><p>Ƭ <strong>FaasItemType</strong>: <code>&quot;string&quot;</code> | <code>&quot;string[]&quot;</code> | <code>&quot;number&quot;</code> | <code>&quot;number[]&quot;</code> | <code>&quot;boolean&quot;</code> | <code>&quot;date&quot;</code> | <code>&quot;time&quot;</code> | <code>&quot;object&quot;</code> | <code>&quot;object[]&quot;</code></p><hr><h3 id="faasitemtypevalue" tabindex="-1"><a class="header-anchor" href="#faasitemtypevalue" aria-hidden="true">#</a> FaasItemTypeValue</h3><p>Ƭ <strong>FaasItemTypeValue</strong>: <code>Object</code></p><p>FaasItemType&#39;s value type</p><h4 id="type-declaration-6" tabindex="-1"><a class="header-anchor" href="#type-declaration-6" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>date</code></td><td style="text-align:left;"><code>Dayjs</code></td></tr><tr><td style="text-align:left;"><code>number</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>number[]</code></td><td style="text-align:left;"><code>number</code>[]</td></tr><tr><td style="text-align:left;"><code>object</code></td><td style="text-align:left;"><code>any</code></td></tr><tr><td style="text-align:left;"><code>object[]</code></td><td style="text-align:left;"><code>any</code>[]</td></tr><tr><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>string[]</code></td><td style="text-align:left;"><code>string</code>[]</td></tr><tr><td style="text-align:left;"><code>time</code></td><td style="text-align:left;"><code>Dayjs</code></td></tr></tbody></table><hr><h3 id="formitemprops" tabindex="-1"><a class="header-anchor" href="#formitemprops" aria-hidden="true">#</a> FormItemProps</h3><p>Ƭ <strong>FormItemProps</strong>&lt;<code>T</code>&gt;: { <code>children?</code>: <code>ReactNode</code> ; <code>extendTypes?</code>: <a href="#extendtypes"><code>ExtendTypes</code></a> ; <code>label?</code>: <code>string</code> | <code>false</code> ; <code>render?</code>: (<code>value?</code>: <code>any</code>) =&gt; <code>ReactNode</code> | <code>JSX.Element</code> ; <code>rules?</code>: <code>RuleObject</code>[] } &amp; <code>FormItemInputProps</code> &amp; <a href="#faasitemprops"><code>FaasItemProps</code></a> &amp; <code>Omit</code>&lt;<code>AntdFormItemProps</code>&lt;<code>T</code>&gt;, <code>&quot;children&quot;</code>&gt;</p><h4 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><hr><h3 id="formprops" tabindex="-1"><a class="header-anchor" href="#formprops" aria-hidden="true">#</a> FormProps</h3><p>Ƭ <strong>FormProps</strong>&lt;<code>Values</code>, <code>ExtendItemProps</code>&gt;: { <code>beforeItems?</code>: <code>JSX.Element</code> | <code>JSX.Element</code>[] ; <code>children?</code>: <code>ReactNode</code> ; <code>extendTypes?</code>: <a href="#extendtypes"><code>ExtendTypes</code></a> ; <code>footer?</code>: <code>JSX.Element</code> | <code>JSX.Element</code>[] ; <code>items?</code>: (<a href="#formitemprops"><code>FormItemProps</code></a> | <code>ExtendItemProps</code>)[] ; <code>onFinish?</code>: (<code>values</code>: <code>Values</code>, <code>submit?</code>: (<code>values</code>: <code>any</code>) =&gt; <code>Promise</code>&lt;<code>any</code>&gt;) =&gt; <code>Promise</code>&lt;<code>any</code>&gt; ; <code>submit?</code>: <code>false</code> | { <code>text?</code>: <code>string</code> ; <code>to?</code>: { <code>action</code>: <code>string</code> ; <code>params?</code>: <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; } } } &amp; <code>Omit</code>&lt;<code>AntdFormProps</code>&lt;<code>Values</code>&gt;, <code>&quot;onFinish&quot;</code> | <code>&quot;children&quot;</code>&gt;</p><h4 id="type-parameters-4" tabindex="-1"><a class="header-anchor" href="#type-parameters-4" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Values</code></td><td style="text-align:left;"><code>any</code></td></tr><tr><td style="text-align:left;"><code>ExtendItemProps</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><hr><h3 id="linkprops" tabindex="-1"><a class="header-anchor" href="#linkprops" aria-hidden="true">#</a> LinkProps</h3><p>Ƭ <strong>LinkProps</strong>: <code>Object</code></p><h4 id="type-declaration-7" tabindex="-1"><a class="header-anchor" href="#type-declaration-7" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>button?</code></td><td style="text-align:left;"><code>ButtonProps</code></td></tr><tr><td style="text-align:left;"><code>children?</code></td><td style="text-align:left;"><code>ReactNode</code></td></tr><tr><td style="text-align:left;"><code>href</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>style?</code></td><td style="text-align:left;"><code>CSSProperties</code></td></tr><tr><td style="text-align:left;"><code>target?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>text?</code></td><td style="text-align:left;"><code>string</code> | <code>number</code></td></tr></tbody></table><hr><h3 id="modalprops" tabindex="-1"><a class="header-anchor" href="#modalprops" aria-hidden="true">#</a> ModalProps</h3><p>Ƭ <strong>ModalProps</strong>: <code>AntdModalProps</code> &amp; { <code>children?</code>: <code>JSX.Element</code> | <code>JSX.Element</code>[] | <code>string</code> }</p><hr><h3 id="routesprops" tabindex="-1"><a class="header-anchor" href="#routesprops" aria-hidden="true">#</a> RoutesProps</h3><p>Ƭ <strong>RoutesProps</strong>: <code>Object</code></p><h4 id="type-declaration-8" tabindex="-1"><a class="header-anchor" href="#type-declaration-8" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>fallback?</code></td><td style="text-align:left;"><code>JSX.Element</code></td></tr><tr><td style="text-align:left;"><code>notFound?</code></td><td style="text-align:left;"><code>JSX.Element</code></td></tr><tr><td style="text-align:left;"><code>routes</code></td><td style="text-align:left;"><code>RouteProps</code> &amp; { <code>page?</code>: <code>LazyExoticComponent</code>&lt;<code>ComponentType</code>&lt;<code>any</code>&gt;&gt; }[]</td></tr></tbody></table><hr><h3 id="tableitemprops" tabindex="-1"><a class="header-anchor" href="#tableitemprops" aria-hidden="true">#</a> TableItemProps</h3><p>Ƭ <strong>TableItemProps</strong>&lt;<code>T</code>&gt;: { <code>children?</code>: <code>JSX.Element</code> | <code>null</code> ; <code>optionsType?</code>: <code>&quot;auto&quot;</code> } &amp; <a href="#faasitemprops"><code>FaasItemProps</code></a> &amp; <code>Omit</code>&lt;<code>AntdTableColumnProps</code>&lt;<code>T</code>&gt;, <code>&quot;children&quot;</code>&gt;</p><h4 id="type-parameters-5" tabindex="-1"><a class="header-anchor" href="#type-parameters-5" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><hr><h3 id="tableprops" tabindex="-1"><a class="header-anchor" href="#tableprops" aria-hidden="true">#</a> TableProps</h3><p>Ƭ <strong>TableProps</strong>&lt;<code>T</code>, <code>ExtendTypes</code>&gt;: { <code>extendTypes?</code>: { <code>[key: string]</code>: <a href="#extendtabletypeprops"><code>ExtendTableTypeProps</code></a>; } ; <code>faasData?</code>: <code>FaasDataWrapperProps</code>&lt;<code>T</code>&gt; ; <code>items</code>: (<a href="#tableitemprops"><code>TableItemProps</code></a> | <code>ExtendTypes</code> &amp; <a href="#extendtableitemprops"><code>ExtendTableItemProps</code></a>)[] ; <code>onChange?</code>: (<code>pagination</code>: <code>TablePaginationConfig</code>, <code>filters</code>: <code>Record</code>&lt;<code>string</code>, <code>FilterValue</code> | <code>null</code>&gt;, <code>sorter</code>: <code>SorterResult</code>&lt;<code>T</code>&gt; | <code>SorterResult</code>&lt;<code>T</code>&gt;[], <code>extra</code>: <code>TableCurrentDataSource</code>&lt;<code>T</code>&gt;) =&gt; { <code>extra</code>: <code>TableCurrentDataSource</code>&lt;<code>T</code>&gt; ; <code>filters</code>: <code>Record</code>&lt;<code>string</code>, <code>FilterValue</code> | <code>null</code>&gt; ; <code>pagination</code>: <code>TablePaginationConfig</code> ; <code>sorter</code>: <code>SorterResult</code>&lt;<code>T</code>&gt; | <code>SorterResult</code>&lt;<code>T</code>&gt;[] } } &amp; <code>AntdTableProps</code>&lt;<code>T</code>&gt;</p><h4 id="type-parameters-6" tabindex="-1"><a class="header-anchor" href="#type-parameters-6" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>any</code></td></tr><tr><td style="text-align:left;"><code>ExtendTypes</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><hr><h3 id="timepickerprops" tabindex="-1"><a class="header-anchor" href="#timepickerprops" aria-hidden="true">#</a> TimePickerProps</h3><p>Ƭ <strong>TimePickerProps</strong>: <code>Omit</code>&lt;<code>PickerTimeProps</code>&lt;<code>Dayjs</code>&gt;, <code>&quot;picker&quot;</code>&gt;</p><hr><h3 id="titleprops" tabindex="-1"><a class="header-anchor" href="#titleprops" aria-hidden="true">#</a> TitleProps</h3><p>Ƭ <strong>TitleProps</strong>: <code>Object</code></p><h4 id="type-declaration-9" tabindex="-1"><a class="header-anchor" href="#type-declaration-9" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>children?</code></td><td style="text-align:left;"><code>JSX.Element</code></td><td style="text-align:left;">return children</td></tr><tr><td style="text-align:left;"><code>h1?</code></td><td style="text-align:left;"><code>boolean</code> | { <code>className?</code>: <code>string</code> ; <code>style?</code>: <code>React.CSSProperties</code> }</td><td style="text-align:left;">return a h1 element</td></tr><tr><td style="text-align:left;"><code>header?</code></td><td style="text-align:left;"><code>PageHeaderProps</code></td><td style="text-align:left;">return a PageHeader element</td></tr><tr><td style="text-align:left;"><code>plain?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">return a pure text element</td></tr><tr><td style="text-align:left;"><code>separator?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>-</code> as default</td></tr><tr><td style="text-align:left;"><code>suffix?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>title</code></td><td style="text-align:left;"><code>string</code> | <code>string</code>[]</td><td style="text-align:left;">-</td></tr></tbody></table><hr><h3 id="setdrawerprops" tabindex="-1"><a class="header-anchor" href="#setdrawerprops" aria-hidden="true">#</a> setDrawerProps</h3><p>Ƭ <strong>setDrawerProps</strong>: (<code>changes</code>: <code>Partial</code>&lt;<a href="#drawerprops"><code>DrawerProps</code></a>&gt;) =&gt; <code>void</code></p><h4 id="type-declaration-10" tabindex="-1"><a class="header-anchor" href="#type-declaration-10" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>changes</code>): <code>void</code></p><h5 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>changes</code></td><td style="text-align:left;"><code>Partial</code>&lt;<a href="#drawerprops"><code>DrawerProps</code></a>&gt;</td></tr></tbody></table><h5 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h5><p><code>void</code></p><hr><h3 id="setmodalprops" tabindex="-1"><a class="header-anchor" href="#setmodalprops" aria-hidden="true">#</a> setModalProps</h3><p>Ƭ <strong>setModalProps</strong>: (<code>changes</code>: <code>Partial</code>&lt;<a href="#modalprops"><code>ModalProps</code></a>&gt;) =&gt; <code>void</code></p><h4 id="type-declaration-11" tabindex="-1"><a class="header-anchor" href="#type-declaration-11" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>changes</code>): <code>void</code></p><h5 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>changes</code></td><td style="text-align:left;"><code>Partial</code>&lt;<a href="#modalprops"><code>ModalProps</code></a>&gt;</td></tr></tbody></table><h5 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h5><p><code>void</code></p><h2 id="variables-1" tabindex="-1"><a class="header-anchor" href="#variables-1" aria-hidden="true">#</a> Variables</h2><h3 id="configcontext" tabindex="-1"><a class="header-anchor" href="#configcontext" aria-hidden="true">#</a> ConfigContext</h3><p>• <code>Const</code> <strong>ConfigContext</strong>: <code>Context</code>&lt;<a href="#configproviderprops"><code>ConfigProviderProps</code></a>&gt;</p><hr><h3 id="datepicker" tabindex="-1"><a class="header-anchor" href="#datepicker" aria-hidden="true">#</a> DatePicker</h3><p>• <code>Const</code> <strong>DatePicker</strong>: <code>PickerComponentClass</code>&lt;<code>Object</code>, <code>unknown</code>&gt; &amp; {}</p><h2 id="functions-1" tabindex="-1"><a class="header-anchor" href="#functions-1" aria-hidden="true">#</a> Functions</h2><h3 id="blank" tabindex="-1"><a class="header-anchor" href="#blank" aria-hidden="true">#</a> Blank</h3><p>▸ <strong>Blank</strong>(<code>options?</code>): <code>JSX.Element</code></p><p>If value is undefined or null, return text, otherwise return value.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>options?</code></td><td style="text-align:left;"><a href="#blankprops"><code>BlankProps</code></a></td><td style="text-align:left;">{object}</td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4><p><code>JSX.Element</code></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">&lt;</span>Blank value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">undefined</span><span class="token punctuation">}</span> text<span class="token operator">=</span><span class="token string">&quot;Empty&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h3 id="calendar" tabindex="-1"><a class="header-anchor" href="#calendar" aria-hidden="true">#</a> Calendar</h3><p>▸ <strong>Calendar</strong>(<code>props</code>): <code>Element</code></p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>props</code></td><td style="text-align:left;"><code>CalendarProps</code>&lt;<code>Dayjs</code>&gt;</td></tr></tbody></table><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4><p><code>Element</code></p><hr><h3 id="configprovider" tabindex="-1"><a class="header-anchor" href="#configprovider" aria-hidden="true">#</a> ConfigProvider</h3><p>▸ <strong>ConfigProvider</strong>(<code>__namedParameters</code>): <code>Element</code></p><p>Config for @faasjs/ant-design components.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">&lt;</span>ConfigProvider config<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
  common<span class="token operator">:</span> <span class="token punctuation">{</span>
    blank<span class="token operator">:</span> <span class="token string">&#39;Empty&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>Blank <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>ConfigProvider<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>__namedParameters</code></td><td style="text-align:left;"><code>Object</code></td></tr><tr><td style="text-align:left;"><code>__namedParameters.children</code></td><td style="text-align:left;"><code>ReactNode</code></td></tr><tr><td style="text-align:left;"><code>__namedParameters.config</code></td><td style="text-align:left;"><a href="#configproviderprops"><code>ConfigProviderProps</code></a></td></tr></tbody></table><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4><p><code>Element</code></p><hr><h3 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> Description</h3><p>▸ <strong>Description</strong>&lt;<code>T</code>&gt;(<code>props</code>): <code>Element</code></p><h4 id="type-parameters-7" tabindex="-1"><a class="header-anchor" href="#type-parameters-7" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>props</code></td><td style="text-align:left;"><a href="#descriptionprops"><code>DescriptionProps</code></a>&lt;<code>T</code>, <code>any</code>&gt;</td></tr></tbody></table><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h4><p><code>Element</code></p><hr><h3 id="form-1" tabindex="-1"><a class="header-anchor" href="#form-1" aria-hidden="true">#</a> Form</h3><p>▸ <strong>Form</strong>&lt;<code>Values</code>&gt;(<code>props</code>): <code>Element</code></p><p>Form component with Ant Design &amp; FaasJS</p><p><strong><code>Ref</code></strong></p><p>https://ant.design/components/form/</p><h4 id="type-parameters-8" tabindex="-1"><a class="header-anchor" href="#type-parameters-8" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Values</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>props</code></td><td style="text-align:left;"><a href="#formprops"><code>FormProps</code></a>&lt;<code>Values</code>, <code>any</code>&gt;</td></tr></tbody></table><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4><p><code>Element</code></p><hr><h3 id="formitem-1" tabindex="-1"><a class="header-anchor" href="#formitem-1" aria-hidden="true">#</a> FormItem</h3><p>▸ <strong>FormItem</strong>&lt;<code>T</code>&gt;(<code>props</code>): <code>Element</code></p><p>FormItem, can be used without Form.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// use inline type</span>
<span class="token operator">&lt;</span>FormItem item<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">,</span> id<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>

<span class="token comment">// use custom type</span>
<span class="token operator">&lt;</span>FormItem item<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token string">&#39;password&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>Input<span class="token punctuation">.</span>Password <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="type-parameters-9" tabindex="-1"><a class="header-anchor" href="#type-parameters-9" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>props</code></td><td style="text-align:left;"><a href="#formitemprops"><code>FormItemProps</code></a>&lt;<code>T</code>&gt;</td></tr></tbody></table><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h4><p><code>Element</code></p><hr><h3 id="link" tabindex="-1"><a class="header-anchor" href="#link" aria-hidden="true">#</a> Link</h3><p>▸ <strong>Link</strong>(<code>__namedParameters</code>): <code>Element</code></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// pure link</span>
<span class="token operator">&lt;</span>Link href<span class="token operator">=</span><span class="token string">&quot;/&quot;</span><span class="token operator">&gt;</span>Home<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">&gt;</span>

<span class="token comment">// link with button</span>
<span class="token operator">&lt;</span>Link href<span class="token operator">=</span><span class="token string">&quot;/&quot;</span> button<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>type<span class="token operator">:</span><span class="token string">&#39;primary&#39;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>Home<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>__namedParameters</code></td><td style="text-align:left;"><a href="#linkprops"><code>LinkProps</code></a></td></tr></tbody></table><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8" aria-hidden="true">#</a> Returns</h4><p><code>Element</code></p><hr><h3 id="pagenotfound" tabindex="-1"><a class="header-anchor" href="#pagenotfound" aria-hidden="true">#</a> PageNotFound</h3><p>▸ <strong>PageNotFound</strong>(): <code>Element</code></p><h4 id="returns-9" tabindex="-1"><a class="header-anchor" href="#returns-9" aria-hidden="true">#</a> Returns</h4><p><code>Element</code></p><hr><h3 id="routes" tabindex="-1"><a class="header-anchor" href="#routes" aria-hidden="true">#</a> Routes</h3><p>▸ <strong>Routes</strong>(<code>props</code>): <code>Element</code></p><p>Routes with lazy loading and 404 page.</p><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> lazy <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> BrowserRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-router-dom&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">App</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">BrowserRouter</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Routes</span></span> <span class="token attr-name">routes</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        path<span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
        page<span class="token operator">:</span> <span class="token function">lazy</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;./pages/home&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">BrowserRouter</span></span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>props</code></td><td style="text-align:left;"><a href="#routesprops"><code>RoutesProps</code></a></td></tr></tbody></table><h4 id="returns-10" tabindex="-1"><a class="header-anchor" href="#returns-10" aria-hidden="true">#</a> Returns</h4><p><code>Element</code></p><hr><h3 id="table" tabindex="-1"><a class="header-anchor" href="#table" aria-hidden="true">#</a> Table</h3><p>▸ <strong>Table</strong>&lt;<code>T</code>, <code>ExtendTypes</code>&gt;(<code>props</code>): <code>Element</code></p><p>Table component with Ant Design &amp; FaasJS</p><p><strong><code>Ref</code></strong></p><p>https://ant.design/components/table/</p><h4 id="type-parameters-10" tabindex="-1"><a class="header-anchor" href="#type-parameters-10" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>any</code></td></tr><tr><td style="text-align:left;"><code>ExtendTypes</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="parameters-10" tabindex="-1"><a class="header-anchor" href="#parameters-10" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>props</code></td><td style="text-align:left;"><a href="#tableprops"><code>TableProps</code></a>&lt;<code>T</code>, <code>ExtendTypes</code>&gt;</td></tr></tbody></table><h4 id="returns-11" tabindex="-1"><a class="header-anchor" href="#returns-11" aria-hidden="true">#</a> Returns</h4><p><code>Element</code></p><hr><h3 id="timepicker" tabindex="-1"><a class="header-anchor" href="#timepicker" aria-hidden="true">#</a> TimePicker</h3><p>▸ <strong>TimePicker</strong>(<code>props</code>): <code>ReactElement</code>&lt;<code>any</code>, <code>string</code> | <code>JSXElementConstructor</code>&lt;<code>any</code>&gt;&gt;</p><p><strong>NOTE</strong>: Exotic components are not callable.</p><h4 id="parameters-11" tabindex="-1"><a class="header-anchor" href="#parameters-11" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>props</code></td><td style="text-align:left;"><a href="#timepickerprops"><code>TimePickerProps</code></a> &amp; <code>RefAttributes</code>&lt;<code>any</code>&gt;</td></tr></tbody></table><h4 id="returns-12" tabindex="-1"><a class="header-anchor" href="#returns-12" aria-hidden="true">#</a> Returns</h4><p><code>ReactElement</code>&lt;<code>any</code>, <code>string</code> | <code>JSXElementConstructor</code>&lt;<code>any</code>&gt;&gt;</p><hr><h3 id="title" tabindex="-1"><a class="header-anchor" href="#title" aria-hidden="true">#</a> Title</h3><p>▸ <strong>Title</strong>(<code>props</code>): <code>JSX.Element</code></p><p>Title is used to change the title of the page. Return null by default.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// return null</span>
<span class="token operator">&lt;</span>Title title<span class="token operator">=</span><span class="token string">&#39;hi&#39;</span> <span class="token operator">/</span><span class="token operator">&gt;</span> <span class="token comment">// =&gt; change the document.title to &#39;hi&#39;</span>
<span class="token operator">&lt;</span>Title title<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span> <span class="token comment">// =&gt; change the document.title to &#39;a - b&#39;</span>

<span class="token comment">// return h1</span>
<span class="token operator">&lt;</span>Title title<span class="token operator">=</span><span class="token string">&#39;hi&#39;</span> h1 <span class="token operator">/</span><span class="token operator">&gt;</span> <span class="token comment">// =&gt; &lt;h1&gt;hi&lt;/h1&gt;</span>
<span class="token operator">&lt;</span>Title title<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span> h1 <span class="token operator">/</span><span class="token operator">&gt;</span> <span class="token comment">// =&gt; &lt;h1&gt;a&lt;/h1&gt;</span>

<span class="token comment">// return children</span>
<span class="token operator">&lt;</span>Title title<span class="token operator">=</span><span class="token string">&#39;hi&#39;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>CustomTitle <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Title<span class="token operator">&gt;</span> <span class="token comment">// =&gt; &lt;CustomTitle /&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-12" tabindex="-1"><a class="header-anchor" href="#parameters-12" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>props</code></td><td style="text-align:left;"><a href="#titleprops"><code>TitleProps</code></a></td></tr></tbody></table><h4 id="returns-13" tabindex="-1"><a class="header-anchor" href="#returns-13" aria-hidden="true">#</a> Returns</h4><p><code>JSX.Element</code></p><hr><h3 id="transferoptions" tabindex="-1"><a class="header-anchor" href="#transferoptions" aria-hidden="true">#</a> transferOptions</h3><p>▸ <strong>transferOptions</strong>(<code>options</code>): { <code>label</code>: <code>string</code> ; <code>value?</code>: <code>string</code> | <code>number</code> }[]</p><h4 id="parameters-13" tabindex="-1"><a class="header-anchor" href="#parameters-13" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>options</code></td><td style="text-align:left;"><a href="#baseoption"><code>BaseOption</code></a>[]</td></tr></tbody></table><h4 id="returns-14" tabindex="-1"><a class="header-anchor" href="#returns-14" aria-hidden="true">#</a> Returns</h4><p>{ <code>label</code>: <code>string</code> ; <code>value?</code>: <code>string</code> | <code>number</code> }[]</p><hr><h3 id="useconfigcontext" tabindex="-1"><a class="header-anchor" href="#useconfigcontext" aria-hidden="true">#</a> useConfigContext</h3><p>▸ <strong>useConfigContext</strong>(): <a href="#configproviderprops"><code>ConfigProviderProps</code></a></p><h4 id="returns-15" tabindex="-1"><a class="header-anchor" href="#returns-15" aria-hidden="true">#</a> Returns</h4><p><a href="#configproviderprops"><code>ConfigProviderProps</code></a></p><hr><h3 id="usedrawer" tabindex="-1"><a class="header-anchor" href="#usedrawer" aria-hidden="true">#</a> useDrawer</h3><p>▸ <strong>useDrawer</strong>(<code>init?</code>): <code>Object</code></p><p>Hook style drawer.</p><h4 id="parameters-14" tabindex="-1"><a class="header-anchor" href="#parameters-14" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>init?</code></td><td style="text-align:left;"><a href="#drawerprops"><code>DrawerProps</code></a></td><td style="text-align:left;">initial props <code>ts function Example() { const { drawer, setDrawerProps } = useDrawer() return &lt;&gt; &lt;Button onClick={ () =&gt; setDrawerProps(prev =&gt; ({ open: !prev.open})) }&gt; Toggle &lt;/Button&gt; {drawer} &lt;/&gt; } </code></td></tr></tbody></table><h4 id="returns-16" tabindex="-1"><a class="header-anchor" href="#returns-16" aria-hidden="true">#</a> Returns</h4><p><code>Object</code></p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>drawer</code></td><td style="text-align:left;"><code>Element</code></td></tr><tr><td style="text-align:left;"><code>drawerProps</code></td><td style="text-align:left;"><a href="#drawerprops"><code>DrawerProps</code></a></td></tr><tr><td style="text-align:left;"><code>setDrawerProps</code></td><td style="text-align:left;">(<code>changes</code>: <code>Partial</code>&lt;<a href="#drawerprops"><code>DrawerProps</code></a>&gt;) =&gt; <code>void</code></td></tr></tbody></table><hr><h3 id="usemodal" tabindex="-1"><a class="header-anchor" href="#usemodal" aria-hidden="true">#</a> useModal</h3><p>▸ <strong>useModal</strong>(<code>init?</code>): <code>Object</code></p><p>Hook style modal.</p><h4 id="parameters-15" tabindex="-1"><a class="header-anchor" href="#parameters-15" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>init?</code></td><td style="text-align:left;"><a href="#modalprops"><code>ModalProps</code></a></td><td style="text-align:left;">initial props <code>ts function Example() { const { modal, setModalProps } = useModal() return &lt;&gt; &lt;Button onClick={() =&gt; setModalProps({ open: true })}&gt;Open Modal&lt;/Button&gt; {modal}&lt;/&gt; } </code></td></tr></tbody></table><h4 id="returns-17" tabindex="-1"><a class="header-anchor" href="#returns-17" aria-hidden="true">#</a> Returns</h4><p><code>Object</code></p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>modal</code></td><td style="text-align:left;"><code>Element</code></td></tr><tr><td style="text-align:left;"><code>modalProps</code></td><td style="text-align:left;"><a href="#modalprops"><code>ModalProps</code></a></td></tr><tr><td style="text-align:left;"><code>setModalProps</code></td><td style="text-align:left;">(<code>changes</code>: <code>Partial</code>&lt;<a href="#modalprops"><code>ModalProps</code></a>&gt;) =&gt; <code>void</code></td></tr></tbody></table>`,289);function D(N,C){const o=d("ExternalLinkIcon"),r=d("RouterLink");return l(),c("div",null,[h,e("p",null,[e("a",g,[f,a(o)]),e("a",m,[u,a(o)]),e("a",y,[x,a(o)])]),e("p",null,[t("UI components based on "),e("a",b,[t("FaasJS"),a(o)]),t(", "),e("a",k,[t("Ant Design"),a(o)]),t(" and "),e("a",P,[t("React Router"),a(o)]),t(".")]),v,e("p",null,[t("Form are based on "),e("a",T,[t("Ant Design's Form component"),a(o)]),t(".")]),E,e("p",null,[t("Form are based on "),e("a",F,[t("Ant Design's Form.Item component"),a(o)]),t(".")]),I,w,e("ul",null,[e("li",null,[a(r,{to:"/doc/ant-design/modules/Form.html"},{default:i(()=>[t("Form")]),_:1})])]),_])}const j=n(p,[["render",D],["__file","index.html.vue"]]);export{j as default};
