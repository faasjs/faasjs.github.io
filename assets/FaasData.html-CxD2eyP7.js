import{_ as s,c,b as r,a as n,d as o,e as a,f as d,r as l,o as p}from"./app-BcCnmMux.js";const i={};function m(f,e){const t=l("RouteLink");return p(),c("div",null,[r("p",null,[o(t,{to:"/doc/react/"},{default:d(()=>e[0]||(e[0]=[a("Documents")])),_:1}),e[2]||(e[2]=a(" / ")),o(t,{to:"/doc/react/"},{default:d(()=>e[1]||(e[1]=[a("@faasjs/react")])),_:1}),e[3]||(e[3]=a(" / FaasData"))]),e[4]||(e[4]=n('<h1 id="type-alias-faasdata-t" tabindex="-1"><a class="header-anchor" href="#type-alias-faasdata-t"><span>Type Alias: FaasData&lt;T&gt;</span></a></h1><blockquote><p><strong>FaasData</strong>&lt;<code>T</code>&gt;: <code>T</code> <em>extends</em> <code>FaasActionPaths</code> ? <code>FaasActions</code>[<code>T</code>][<code>&quot;Data&quot;</code>] : <code>T</code> <em>extends</em> <code>ReactServerAction</code> ? <code>Awaited</code>&lt;<code>ReturnType</code>&lt;<code>T</code>&gt;&gt; : <code>T</code> <em>extends</em> <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; ? <code>T</code> : <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</p></blockquote><p>Infer the returning data type.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><p>â€¢ <strong>T</strong> = <code>any</code></p>',5))])}const y=s(i,[["render",m],["__file","FaasData.html.vue"]]),g=JSON.parse('{"path":"/doc/react/type-aliases/FaasData.html","title":"Type Alias: FaasData<T>","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type Parameters","slug":"type-parameters","link":"#type-parameters","children":[]}],"git":{},"filePathRelative":"doc/react/type-aliases/FaasData.md"}');export{y as comp,g as data};
