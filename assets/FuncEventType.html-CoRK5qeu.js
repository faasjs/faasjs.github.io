import{_ as l,c as o,b as s,a as u,d as e,e as t,w as p,r,o as i}from"./app-DK9KTdMJ.js";const d={};function k(m,n){const a=r("RouteLink");return i(),o("div",null,[s("p",null,[e(a,{to:"/doc/func/"},{default:p(()=>[...n[0]||(n[0]=[t("Documents",-1)])]),_:1}),n[2]||(n[2]=t(" / ",-1)),e(a,{to:"/doc/func/"},{default:p(()=>[...n[1]||(n[1]=[t("@faasjs/func",-1)])]),_:1}),n[3]||(n[3]=t(" / FuncEventType",-1))]),n[33]||(n[33]=s("h1",{id:"type-alias-funceventtype-t",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#type-alias-funceventtype-t"},[s("span",null,"Type Alias: FuncEventType<T>")])],-1)),s("blockquote",null,[s("p",null,[n[5]||(n[5]=s("strong",null,"FuncEventType",-1)),n[6]||(n[6]=t("<",-1)),n[7]||(n[7]=s("code",null,"T",-1)),n[8]||(n[8]=t("> = ",-1)),n[9]||(n[9]=s("code",null,"T",-1)),n[10]||(n[10]=t()),n[11]||(n[11]=s("em",null,"extends",-1)),n[12]||(n[12]=t()),e(a,{to:"/doc/func/classes/Func.html"},{default:p(()=>[...n[4]||(n[4]=[s("code",null,"Func",-1)])]),_:1}),n[13]||(n[13]=t("<infer P, ",-1)),n[14]||(n[14]=s("code",null,"any",-1)),n[15]||(n[15]=t(", ",-1)),n[16]||(n[16]=s("code",null,"any",-1)),n[17]||(n[17]=t("> ? ",-1)),n[18]||(n[18]=s("code",null,"P",-1)),n[19]||(n[19]=t(" : ",-1)),n[20]||(n[20]=s("code",null,"any",-1))])]),n[34]||(n[34]=s("p",null,"Get the event type of a func",-1)),n[35]||(n[35]=s("h2",{id:"type-parameters",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#type-parameters"},[s("span",null,"Type Parameters")])],-1)),n[36]||(n[36]=s("h3",{id:"t",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#t"},[s("span",null,"T")])],-1)),s("p",null,[n[22]||(n[22]=s("code",null,"T",-1)),n[23]||(n[23]=t()),n[24]||(n[24]=s("em",null,"extends",-1)),n[25]||(n[25]=t()),e(a,{to:"/doc/func/classes/Func.html"},{default:p(()=>[...n[21]||(n[21]=[s("code",null,"Func",-1)])]),_:1}),n[26]||(n[26]=t("<",-1)),n[27]||(n[27]=s("code",null,"any",-1)),n[28]||(n[28]=t(", ",-1)),n[29]||(n[29]=s("code",null,"any",-1)),n[30]||(n[30]=t(", ",-1)),n[31]||(n[31]=s("code",null,"any",-1)),n[32]||(n[32]=t(">",-1))]),n[37]||(n[37]=u(`<h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> useFunc<span class="token punctuation">,</span> <span class="token keyword">type</span> <span class="token class-name">FuncEventType</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/func&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> func <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useFunc</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token punctuation">{</span> counter<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">FuncEventType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> func<span class="token operator">&gt;</span> <span class="token comment">// =&gt; { counter: number }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2))])}const f=l(d,[["render",k]]),v=JSON.parse('{"path":"/doc/func/type-aliases/FuncEventType.html","title":"Type Alias: FuncEventType<T>","lang":"en","frontmatter":{},"git":{},"filePathRelative":"doc/func/type-aliases/FuncEventType.md"}');export{f as comp,v as data};
