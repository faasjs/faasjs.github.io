import{_ as l,c,b as e,d as t,e as o,f as n,a as p,r,o as i}from"./app-Bie6IxQ1.js";const d={};function u(k,s){const a=r("RouteLink");return i(),c("div",null,[e("p",null,[t(a,{to:"/doc/browser/"},{default:o(()=>s[0]||(s[0]=[n("Documents")])),_:1}),s[2]||(s[2]=n(" / ")),t(a,{to:"/doc/browser/"},{default:o(()=>s[1]||(s[1]=[n("@faasjs/browser")])),_:1}),s[3]||(s[3]=n(" / setMock"))]),s[5]||(s[5]=p('<h1 id="function-setmock" tabindex="-1"><a class="header-anchor" href="#function-setmock"><span>Function: setMock()</span></a></h1><blockquote><p><strong>setMock</strong>(<code>handler</code>): <code>void</code></p></blockquote><p>Set mock handler for testing</p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="handler" tabindex="-1"><a class="header-anchor" href="#handler"><span>handler</span></a></h3>',5)),e("p",null,[t(a,{to:"/doc/browser/type-aliases/MockHandler.html"},{default:o(()=>s[4]||(s[4]=[e("code",null,"MockHandler",-1)])),_:1})]),s[6]||(s[6]=p(`<p>mock handler, set <code>null</code> or <code>undefined</code> to clear mock</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>void</code></p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> setMock <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/browser&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">setMock</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>action<span class="token punctuation">,</span> params<span class="token punctuation">,</span> options<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    status<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span></span>
<span class="line">    data<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      name<span class="token operator">:</span> <span class="token string">&#39;FaasJS&#39;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FaasBrowserClient</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span> <span class="token comment">// response.data.name === &#39;FaasJS&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5))])}const v=l(d,[["render",u],["__file","setMock.html.vue"]]),h=JSON.parse('{"path":"/doc/browser/functions/setMock.html","title":"Function: setMock()","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Parameters","slug":"parameters","link":"#parameters","children":[{"level":3,"title":"handler","slug":"handler","link":"#handler","children":[]}]},{"level":2,"title":"Returns","slug":"returns","link":"#returns","children":[]},{"level":2,"title":"Example","slug":"example","link":"#example","children":[]}],"git":{},"filePathRelative":"doc/browser/functions/setMock.md"}');export{v as comp,h as data};
