"use strict";(self.webpackChunkfaasjs_docs=self.webpackChunkfaasjs_docs||[]).push([[9782],{8129:(e,t,d)=>{d.r(t),d.d(t,{data:()=>a});const a={key:"v-4dd5dff0",path:"/doc/request/",title:"@faasjs/request",lang:"en",frontmatter:{},excerpt:"",headers:[{level:2,title:"Install",slug:"install",children:[]},{level:2,title:"Modules",slug:"modules",children:[{level:3,title:"Type aliases",slug:"type-aliases",children:[]},{level:3,title:"Functions",slug:"functions",children:[]}]},{level:2,title:"Type aliases",slug:"type-aliases-1",children:[{level:3,title:"Request",slug:"request",children:[]},{level:3,title:"RequestOptions",slug:"requestoptions",children:[]},{level:3,title:"Response",slug:"response",children:[]}]},{level:2,title:"Functions",slug:"functions-1",children:[{level:3,title:"querystringify",slug:"querystringify",children:[]},{level:3,title:"request",slug:"request-1",children:[]},{level:3,title:"setMock",slug:"setmock",children:[]}]}],git:{updatedTime:null},filePathRelative:"doc/request/README.md"}},9664:(e,t,d)=>{d.r(t),d.d(t,{default:()=>f});var a=d(6252);const l=(0,a._)("h1",{id:"faasjs-request",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#faasjs-request","aria-hidden":"true"},"#"),(0,a.Uk)(" @faasjs/request")],-1),s={href:"https://github.com/faasjs/faasjs/blob/main/packages/faasjs/request/LICENSE",target:"_blank",rel:"noopener noreferrer"},r=(0,a._)("img",{src:"https://img.shields.io/npm/l/@faasjs/request.svg",alt:"License: MIT"},null,-1),o={href:"https://www.npmjs.com/package/@faasjs/request",target:"_blank",rel:"noopener noreferrer"},n=(0,a._)("img",{src:"https://img.shields.io/npm/v/@faasjs/request/stable.svg",alt:"NPM Stable Version"},null,-1),i={href:"https://www.npmjs.com/package/@faasjs/request",target:"_blank",rel:"noopener noreferrer"},c=(0,a._)("img",{src:"https://img.shields.io/npm/v/@faasjs/request/beta.svg",alt:"NPM Beta Version"},null,-1),h=(0,a.uE)('<p>FaasJS&#39;s request module.</p><h2 id="install" tabindex="-1"><a class="header-anchor" href="#install" aria-hidden="true">#</a> Install</h2><pre><code>npm install @faasjs/request\n</code></pre><h2 id="modules" tabindex="-1"><a class="header-anchor" href="#modules" aria-hidden="true">#</a> Modules</h2><h3 id="type-aliases" tabindex="-1"><a class="header-anchor" href="#type-aliases" aria-hidden="true">#</a> Type aliases</h3><ul><li><a href="#request">Request</a></li><li><a href="#requestoptions">RequestOptions</a></li><li><a href="#response">Response</a></li></ul><h3 id="functions" tabindex="-1"><a class="header-anchor" href="#functions" aria-hidden="true">#</a> Functions</h3><ul><li><a href="#querystringify">querystringify</a></li><li><a href="#request">request</a></li><li><a href="#setmock">setMock</a></li></ul><h2 id="type-aliases-1" tabindex="-1"><a class="header-anchor" href="#type-aliases-1" aria-hidden="true">#</a> Type aliases</h2><h3 id="request" tabindex="-1"><a class="header-anchor" href="#request" aria-hidden="true">#</a> Request</h3><p>Ƭ <strong>Request</strong>: <code>Object</code></p><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>body?</code></td><td style="text-align:left;"><code>Object</code></td></tr><tr><td style="text-align:left;"><code>headers?</code></td><td style="text-align:left;"><code>http.OutgoingHttpHeaders</code></td></tr><tr><td style="text-align:left;"><code>host?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>method?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>path?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>query?</code></td><td style="text-align:left;"><code>http.OutgoingHttpHeaders</code></td></tr></tbody></table><hr><h3 id="requestoptions" tabindex="-1"><a class="header-anchor" href="#requestoptions" aria-hidden="true">#</a> RequestOptions</h3><p>Ƭ <strong>RequestOptions</strong>: <code>Object</code></p><h4 id="type-declaration-1" tabindex="-1"><a class="header-anchor" href="#type-declaration-1" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>agent?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>auth?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">HTTP 认证头，格式为 user:password</td></tr><tr><td style="text-align:left;"><code>body?</code></td><td style="text-align:left;">{ [key: string]: <code>any</code>; } | <code>string</code></td><td style="text-align:left;">请求体</td></tr><tr><td style="text-align:left;"><code>downloadStream?</code></td><td style="text-align:left;"><code>NodeJS.WritableStream</code></td><td style="text-align:left;">下载流，用于直接将响应内容保存到本地文件，通过 fs.createWriteStream 创建</td></tr><tr><td style="text-align:left;"><code>file?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">上传文件的完整路径</td></tr><tr><td style="text-align:left;"><code>headers?</code></td><td style="text-align:left;"><code>http.OutgoingHttpHeaders</code></td><td style="text-align:left;">请求头</td></tr><tr><td style="text-align:left;"><code>method?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">请求方法，默认为 GET</td></tr><tr><td style="text-align:left;"><code>passphrase?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>pfx?</code></td><td style="text-align:left;"><code>Buffer</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>query?</code></td><td style="text-align:left;"><code>Object</code></td><td style="text-align:left;">请求参数，放置于 path 后，若需放置在 body 中，请使用 body 参数</td></tr><tr><td style="text-align:left;"><code>timeout?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">最长耗时，单位为毫秒</td></tr><tr><td style="text-align:left;"><code>parse?</code></td><td style="text-align:left;">(<code>body</code>: <code>string</code>) =&gt; <code>any</code></td><td style="text-align:left;">body 解析器，默认为 JSON.parse</td></tr></tbody></table><hr><h3 id="response" tabindex="-1"><a class="header-anchor" href="#response" aria-hidden="true">#</a> Response</h3><p>Ƭ <strong>Response</strong>&lt;<code>T</code>&gt;: <code>Object</code></p><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="type-declaration-2" tabindex="-1"><a class="header-anchor" href="#type-declaration-2" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>body</code></td><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>headers</code></td><td style="text-align:left;"><code>http.OutgoingHttpHeaders</code></td></tr><tr><td style="text-align:left;"><code>request?</code></td><td style="text-align:left;"><a href="#request"><code>Request</code></a></td></tr><tr><td style="text-align:left;"><code>statusCode?</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>statusMessage?</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h2 id="functions-1" tabindex="-1"><a class="header-anchor" href="#functions-1" aria-hidden="true">#</a> Functions</h2><h3 id="querystringify" tabindex="-1"><a class="header-anchor" href="#querystringify" aria-hidden="true">#</a> querystringify</h3><p>▸ <strong>querystringify</strong>(<code>obj</code>): <code>string</code></p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>obj</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><hr><h3 id="request-1" tabindex="-1"><a class="header-anchor" href="#request-1" aria-hidden="true">#</a> request</h3><p>▸ <strong>request</strong>&lt;<code>T</code>&gt;(<code>url</code>, <code>[options={}]?</code>): <code>Promise</code>&lt;<a href="#response"><code>Response</code></a>&lt;<code>T</code>&gt;&gt;</p><p>发起网络请求</p><p><strong><code>url</code></strong> https://faasjs.com/doc/request.html</p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>url</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">请求路径或完整网址</td></tr><tr><td style="text-align:left;"><code>[options={}]</code></td><td style="text-align:left;"><a href="#requestoptions"><code>RequestOptions</code></a></td><td style="text-align:left;">参数和配置</td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<a href="#response"><code>Response</code></a>&lt;<code>T</code>&gt;&gt;</p><hr><h3 id="setmock" tabindex="-1"><a class="header-anchor" href="#setmock" aria-hidden="true">#</a> setMock</h3><p>▸ <strong>setMock</strong>(<code>handler</code>): <code>void</code></p><p>设置模拟请求</p><p><strong><code>example</code></strong> setMock(async (url, options) =&gt; Promise.resolve({ headers: {}, statusCode: 200, body: { data: &#39;ok&#39; } }))</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>handler</code></td><td style="text-align:left;"><code>Mock</code></td><td style="text-align:left;">模拟函数，若设置为 null 则表示清除模拟函数</td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p>',52),g={},f=(0,d(3744).Z)(g,[["render",function(e,t){const d=(0,a.up)("ExternalLinkIcon");return(0,a.wg)(),(0,a.iD)(a.HY,null,[l,(0,a._)("p",null,[(0,a._)("a",s,[r,(0,a.Wm)(d)]),(0,a._)("a",o,[n,(0,a.Wm)(d)]),(0,a._)("a",i,[c,(0,a.Wm)(d)])]),h],64)}]])},3744:(e,t)=>{t.Z=(e,t)=>{const d=e.__vccOpts||e;for(const[e,a]of t)d[e]=a;return d}}}]);