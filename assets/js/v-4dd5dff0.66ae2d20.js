"use strict";(self.webpackChunkfaasjs_docs=self.webpackChunkfaasjs_docs||[]).push([[9782],{8129:(e,t,l)=>{l.r(t),l.d(t,{data:()=>d});const d={key:"v-4dd5dff0",path:"/doc/request/",title:"@faasjs/request",lang:"en",frontmatter:{},excerpt:"",headers:[{level:2,title:"Modules",slug:"modules",children:[{level:3,title:"Type aliases",slug:"type-aliases",children:[]},{level:3,title:"Functions",slug:"functions",children:[]}]},{level:2,title:"Type aliases",slug:"type-aliases-1",children:[{level:3,title:"Request",slug:"request",children:[]},{level:3,title:"RequestOptions",slug:"requestoptions",children:[]},{level:3,title:"Response",slug:"response",children:[]}]},{level:2,title:"Functions",slug:"functions-1",children:[{level:3,title:"querystringify",slug:"querystringify",children:[]},{level:3,title:"request",slug:"request-1",children:[]},{level:3,title:"setMock",slug:"setmock",children:[]}]}],git:{updatedTime:null},filePathRelative:"doc/request/README.md"}},7033:(e,t,l)=>{l.r(t),l.d(t,{default:()=>ie});var d=l(6252);const a=(0,d._)("h1",{id:"faasjs-request",tabindex:"-1"},[(0,d._)("a",{class:"header-anchor",href:"#faasjs-request","aria-hidden":"true"},"#"),(0,d.Uk)(" @faasjs/request")],-1),s=(0,d._)("p",null,"网络请求库",-1),r={href:"https://github.com/faasjs/faasjs/blob/main/packages/faasjs/request/LICENSE",target:"_blank",rel:"noopener noreferrer"},n=(0,d._)("img",{src:"https://img.shields.io/npm/l/@faasjs/request.svg",alt:"License: MIT"},null,-1),o={href:"https://www.npmjs.com/package/@faasjs/request",target:"_blank",rel:"noopener noreferrer"},i=(0,d._)("img",{src:"https://img.shields.io/npm/v/@faasjs/request/stable.svg",alt:"NPM Stable Version"},null,-1),c={href:"https://www.npmjs.com/package/@faasjs/request",target:"_blank",rel:"noopener noreferrer"},h=(0,d._)("img",{src:"https://img.shields.io/npm/v/@faasjs/request/beta.svg",alt:"NPM Beta Version"},null,-1),u=(0,d._)("p",null,"https://faasjs.com/doc/request.html",-1),f=(0,d._)("h2",{id:"modules",tabindex:"-1"},[(0,d._)("a",{class:"header-anchor",href:"#modules","aria-hidden":"true"},"#"),(0,d.Uk)(" Modules")],-1),y=(0,d._)("h3",{id:"type-aliases",tabindex:"-1"},[(0,d._)("a",{class:"header-anchor",href:"#type-aliases","aria-hidden":"true"},"#"),(0,d.Uk)(" Type aliases")],-1),g=(0,d.Uk)("Request"),p=(0,d.Uk)("RequestOptions"),x=(0,d.Uk)("Response"),_=(0,d._)("h3",{id:"functions",tabindex:"-1"},[(0,d._)("a",{class:"header-anchor",href:"#functions","aria-hidden":"true"},"#"),(0,d.Uk)(" Functions")],-1),m=(0,d.Uk)("querystringify"),b=(0,d.Uk)("request"),q=(0,d.Uk)("setMock"),k=(0,d.uE)('<h2 id="type-aliases-1" tabindex="-1"><a class="header-anchor" href="#type-aliases-1" aria-hidden="true">#</a> Type aliases</h2><h3 id="request" tabindex="-1"><a class="header-anchor" href="#request" aria-hidden="true">#</a> Request</h3><p>Ƭ <strong>Request</strong>: <code>Object</code></p><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>body?</code></td><td style="text-align:left;"><code>Object</code></td></tr><tr><td style="text-align:left;"><code>headers?</code></td><td style="text-align:left;"><code>http.OutgoingHttpHeaders</code></td></tr><tr><td style="text-align:left;"><code>host?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>method?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>path?</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>query?</code></td><td style="text-align:left;"><code>http.OutgoingHttpHeaders</code></td></tr></tbody></table><hr><h3 id="requestoptions" tabindex="-1"><a class="header-anchor" href="#requestoptions" aria-hidden="true">#</a> RequestOptions</h3><p>Ƭ <strong>RequestOptions</strong>: <code>Object</code></p><h4 id="type-declaration-1" tabindex="-1"><a class="header-anchor" href="#type-declaration-1" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>agent?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>auth?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">HTTP 认证头，格式为 user:password</td></tr><tr><td style="text-align:left;"><code>body?</code></td><td style="text-align:left;">{ [key: string]: <code>any</code>; } | <code>string</code></td><td style="text-align:left;">请求体</td></tr><tr><td style="text-align:left;"><code>downloadStream?</code></td><td style="text-align:left;"><code>NodeJS.WritableStream</code></td><td style="text-align:left;">下载流，用于直接将响应内容保存到本地文件，通过 fs.createWriteStream 创建</td></tr><tr><td style="text-align:left;"><code>file?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">上传文件的完整路径</td></tr><tr><td style="text-align:left;"><code>headers?</code></td><td style="text-align:left;"><code>http.OutgoingHttpHeaders</code></td><td style="text-align:left;">请求头</td></tr><tr><td style="text-align:left;"><code>method?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">请求方法，默认为 GET</td></tr><tr><td style="text-align:left;"><code>passphrase?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>pfx?</code></td><td style="text-align:left;"><code>Buffer</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>query?</code></td><td style="text-align:left;"><code>Object</code></td><td style="text-align:left;">请求参数，放置于 path 后，若需放置在 body 中，请使用 body 参数</td></tr><tr><td style="text-align:left;"><code>timeout?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">最长耗时，单位为毫秒</td></tr><tr><td style="text-align:left;"><code>parse?</code></td><td style="text-align:left;">(<code>body</code>: <code>string</code>) =&gt; <code>any</code></td><td style="text-align:left;">body 解析器，默认为 JSON.parse</td></tr></tbody></table><hr><h3 id="response" tabindex="-1"><a class="header-anchor" href="#response" aria-hidden="true">#</a> Response</h3><p>Ƭ <strong>Response</strong>&lt;<code>T</code>&gt;: <code>Object</code></p><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="type-declaration-2" tabindex="-1"><a class="header-anchor" href="#type-declaration-2" aria-hidden="true">#</a> Type declaration</h4>',16),T=(0,d._)("thead",null,[(0,d._)("tr",null,[(0,d._)("th",{style:{"text-align":"left"}},"Name"),(0,d._)("th",{style:{"text-align":"left"}},"Type")])],-1),j=(0,d._)("tr",null,[(0,d._)("td",{style:{"text-align":"left"}},[(0,d._)("code",null,"body")]),(0,d._)("td",{style:{"text-align":"left"}},[(0,d._)("code",null,"T")])],-1),v=(0,d._)("tr",null,[(0,d._)("td",{style:{"text-align":"left"}},[(0,d._)("code",null,"headers")]),(0,d._)("td",{style:{"text-align":"left"}},[(0,d._)("code",null,"http.OutgoingHttpHeaders")])],-1),R=(0,d._)("td",{style:{"text-align":"left"}},[(0,d._)("code",null,"request?")],-1),U={style:{"text-align":"left"}},w=(0,d._)("code",null,"Request",-1),O=(0,d._)("tr",null,[(0,d._)("td",{style:{"text-align":"left"}},[(0,d._)("code",null,"statusCode?")]),(0,d._)("td",{style:{"text-align":"left"}},[(0,d._)("code",null,"number")])],-1),W=(0,d._)("tr",null,[(0,d._)("td",{style:{"text-align":"left"}},[(0,d._)("code",null,"statusMessage?")]),(0,d._)("td",{style:{"text-align":"left"}},[(0,d._)("code",null,"string")])],-1),M=(0,d.uE)('<h2 id="functions-1" tabindex="-1"><a class="header-anchor" href="#functions-1" aria-hidden="true">#</a> Functions</h2><h3 id="querystringify" tabindex="-1"><a class="header-anchor" href="#querystringify" aria-hidden="true">#</a> querystringify</h3><p>▸ <strong>querystringify</strong>(<code>obj</code>): <code>string</code></p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>obj</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><hr><h3 id="request-1" tabindex="-1"><a class="header-anchor" href="#request-1" aria-hidden="true">#</a> request</h3>',9),N=(0,d.Uk)("▸ "),E=(0,d._)("strong",null,"request",-1),H=(0,d.Uk)("<"),P=(0,d._)("code",null,"T",-1),S=(0,d.Uk)(">("),C=(0,d._)("code",null,"url",-1),D=(0,d.Uk)(", "),F=(0,d._)("code",null,"[options={}]?",-1),L=(0,d.Uk)("): "),I=(0,d._)("code",null,"Promise",-1),B=(0,d.Uk)("<"),J=(0,d._)("code",null,"Response",-1),V=(0,d.Uk)("<"),Z=(0,d._)("code",null,"T",-1),A=(0,d.Uk)(">>"),G=(0,d.uE)('<p>发起网络请求</p><p><strong><code>url</code></strong> https://faasjs.com/doc/request.html</p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4>',5),Y=(0,d._)("thead",null,[(0,d._)("tr",null,[(0,d._)("th",{style:{"text-align":"left"}},"Name"),(0,d._)("th",{style:{"text-align":"left"}},"Type"),(0,d._)("th",{style:{"text-align":"left"}},"Description")])],-1),z=(0,d._)("tr",null,[(0,d._)("td",{style:{"text-align":"left"}},[(0,d._)("code",null,"url")]),(0,d._)("td",{style:{"text-align":"left"}},[(0,d._)("code",null,"string")]),(0,d._)("td",{style:{"text-align":"left"}},"请求路径或完整网址")],-1),K=(0,d._)("td",{style:{"text-align":"left"}},[(0,d._)("code",null,"[options={}]")],-1),Q={style:{"text-align":"left"}},X=(0,d._)("code",null,"RequestOptions",-1),$=(0,d._)("td",{style:{"text-align":"left"}},"参数和配置",-1),ee=(0,d._)("h4",{id:"returns-1",tabindex:"-1"},[(0,d._)("a",{class:"header-anchor",href:"#returns-1","aria-hidden":"true"},"#"),(0,d.Uk)(" Returns")],-1),te=(0,d._)("code",null,"Promise",-1),le=(0,d.Uk)("<"),de=(0,d._)("code",null,"Response",-1),ae=(0,d.Uk)("<"),se=(0,d._)("code",null,"T",-1),re=(0,d.Uk)(">>"),ne=(0,d.uE)('<hr><h3 id="setmock" tabindex="-1"><a class="header-anchor" href="#setmock" aria-hidden="true">#</a> setMock</h3><p>▸ <strong>setMock</strong>(<code>handler</code>): <code>void</code></p><p>设置模拟请求</p><p><strong><code>example</code></strong> setMock(async (url, options) =&gt; Promise.resolve({ headers: {}, statusCode: 200, body: { data: &#39;ok&#39; } }))</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>handler</code></td><td style="text-align:left;"><code>Mock</code></td><td style="text-align:left;">模拟函数，若设置为 null 则表示清除模拟函数</td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p>',9),oe={},ie=(0,l(3744).Z)(oe,[["render",function(e,t){const l=(0,d.up)("ExternalLinkIcon"),oe=(0,d.up)("RouterLink");return(0,d.wg)(),(0,d.iD)(d.HY,null,[a,s,(0,d._)("p",null,[(0,d._)("a",r,[n,(0,d.Wm)(l)]),(0,d._)("a",o,[i,(0,d.Wm)(l)]),(0,d._)("a",c,[h,(0,d.Wm)(l)])]),u,f,y,(0,d._)("ul",null,[(0,d._)("li",null,[(0,d.Wm)(oe,{to:"/doc/request/modules.html#request"},{default:(0,d.w5)((()=>[g])),_:1})]),(0,d._)("li",null,[(0,d.Wm)(oe,{to:"/doc/request/modules.html#requestoptions"},{default:(0,d.w5)((()=>[p])),_:1})]),(0,d._)("li",null,[(0,d.Wm)(oe,{to:"/doc/request/modules.html#response"},{default:(0,d.w5)((()=>[x])),_:1})])]),_,(0,d._)("ul",null,[(0,d._)("li",null,[(0,d.Wm)(oe,{to:"/doc/request/modules.html#querystringify"},{default:(0,d.w5)((()=>[m])),_:1})]),(0,d._)("li",null,[(0,d.Wm)(oe,{to:"/doc/request/modules.html#request"},{default:(0,d.w5)((()=>[b])),_:1})]),(0,d._)("li",null,[(0,d.Wm)(oe,{to:"/doc/request/modules.html#setmock"},{default:(0,d.w5)((()=>[q])),_:1})])]),k,(0,d._)("table",null,[T,(0,d._)("tbody",null,[j,v,(0,d._)("tr",null,[R,(0,d._)("td",U,[(0,d.Wm)(oe,{to:"/doc/request/modules.html#request"},{default:(0,d.w5)((()=>[w])),_:1})])]),O,W])]),M,(0,d._)("p",null,[N,E,H,P,S,C,D,F,L,I,B,(0,d.Wm)(oe,{to:"/doc/request/modules.html#response"},{default:(0,d.w5)((()=>[J])),_:1}),V,Z,A]),G,(0,d._)("table",null,[Y,(0,d._)("tbody",null,[z,(0,d._)("tr",null,[K,(0,d._)("td",Q,[(0,d.Wm)(oe,{to:"/doc/request/modules.html#requestoptions"},{default:(0,d.w5)((()=>[X])),_:1})]),$])])]),ee,(0,d._)("p",null,[te,le,(0,d.Wm)(oe,{to:"/doc/request/modules.html#response"},{default:(0,d.w5)((()=>[de])),_:1}),ae,se,re]),ne],64)}]])},3744:(e,t)=>{t.Z=(e,t)=>{const l=e.__vccOpts||e;for(const[e,d]of t)l[e]=d;return l}}}]);