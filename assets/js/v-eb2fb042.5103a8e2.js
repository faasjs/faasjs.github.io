"use strict";(self.webpackChunkfaasjs_docs=self.webpackChunkfaasjs_docs||[]).push([[6895],{135:(p,a,e)=>{e.r(a),e.d(a,{data:()=>t});const t={key:"v-eb2fb042",path:"/zh/blog/2021-07-10.html",title:"FaaS 开发之道",lang:"zh",frontmatter:{},excerpt:"",headers:[],git:{updatedTime:1641031507e3},filePathRelative:"zh/blog/2021-07-10.md"}},3238:(p,a,e)=>{e.r(a),e.d(a,{default:()=>r});const t=(0,e(6252).uE)('<h1 id="faas-开发之道" tabindex="-1"><a class="header-anchor" href="#faas-开发之道" aria-hidden="true">#</a> FaaS 开发之道</h1><p><em>发布于 2021-07-10</em></p><p>以下内容整理自爆爆奢内部培训：</p><p>以前技术与业务之间有着巨大的沟壑，业务有需求时，需要跨部门沟通，先找产品经理，产品经理细化后，再找项目经理进行排期，最后由开发完成上线。</p><p>整个工作流程不仅人员多、时间长，而且流程中任意一个节点失真严重一些，都会导致最终上线质量的不可控。</p><p>并且因为研发系统自身的复杂性，导致整个链路不得不那么长。</p><p>但现在随着基础设施的提升，特别是 FaaS 架构成为了切实可行的架构后，研发系统的复杂性被大幅降低了，开发人员有了更多的精力可以往前走，走近业务。从而缩短距离，降低失真。</p><p>那作为一个开发人员，该怎么往前走呢？</p><p>我建议从提升观察能力入手。</p><p>作为一个经常跟抽象概念打交道的开发人员，大脑已经被训练的习惯于抽象思考，但现实世界是具象的。并且不仅是具象，还是多维的，且每个维度都是具象的。</p><p><strong>开发人员必须有意识的去观察具象的世界，去追求现实世界的反馈，来避免在抽象的世界里自嗨。</strong></p><p>比如前阵子仓库的拣货发货效率低，需要优化。作为开发人员，要如何观察这个事情呢？</p><p>通常来说，有这几个基本维度需要被观察到：人员、场地、步骤。</p><p>人员：有几个人？分别是谁？如何分工的？未来的人员规划是怎么样的？</p><p>场地：有几个场地？分别是哪几个场地？每个场地要做什么事情？未来场地的规划是怎么样的？</p><p>步骤：有几个步骤？每个步骤分别需要哪些人员和场地？步骤之间的交付是怎么进行的？未来步骤的规划是怎么样的？</p><p>通过观察上面这些问题，可以了解到大致的情况。如果在这个层面就发现了不少值得优化的地方，那就可以开始进行初步的优化了。</p><p>但如果要继续精进，就需要更深入的去观察其中一个或多个维度。</p><p>比如说人员这个维度：人员的身高是多少？步距是多少？工作台和作业场地是否能够让他们快捷的完成工作？等等。</p><p>随着你观察的深入，你会发现越来越多的问题，越来越多的挑战。</p><p>当你一个个去面对和完成这些挑战时，获得的不仅是现实世界的反馈，还有包括技术能力在内全方面的能力提升。</p><p>其实反过来看，你会发现 FaaS 架构其实也是为了解决研发流程的现实问题而产生的，因此 FaaS 不仅仅是个技术架构，还是对整个研发流程的优化。</p><p>因此，请牢记：<strong>追求现实世界的反馈，不要在抽象的世界里自嗨。</strong></p>',23),s={},r=(0,e(3744).Z)(s,[["render",function(p,a){return t}]])},3744:(p,a)=>{a.Z=(p,a)=>{const e=p.__vccOpts||p;for(const[p,t]of a)e[p]=t;return e}}}]);