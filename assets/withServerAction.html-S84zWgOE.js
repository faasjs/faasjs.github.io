import{_ as o,r as p,c,b as r,d as a,w as t,e as s,a as i,o as l}from"./app-_0o30Gtl.js";const d={};function u(m,n){const e=p("RouteLink");return l(),c("div",null,[r("p",null,[a(e,{to:"/doc/nextjs/"},{default:t(()=>n[0]||(n[0]=[s("Documents")])),_:1}),n[2]||(n[2]=s(" / ")),a(e,{to:"/doc/nextjs/"},{default:t(()=>n[1]||(n[1]=[s("@faasjs/nextjs")])),_:1}),n[3]||(n[3]=s(" / withServerAction"))]),n[4]||(n[4]=i(`<h1 id="function-withserveraction" tabindex="-1"><a class="header-anchor" href="#function-withserveraction"><span>Function: withServerAction()</span></a></h1><blockquote><p><strong>withServerAction</strong>&lt;<code>TComponentProps</code>, <code>TAction</code>&gt;(<code>Component</code>, <code>action</code>, <code>params</code>?, <code>options</code>?): <code>React.FC</code>&lt;<code>TComponentProps</code>&gt;</p></blockquote><p>HOC to call a server action and handle loading and error states</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><p>• <strong>TComponentProps</strong> <em>extends</em> <code>object</code></p><p>• <strong>TAction</strong> <em>extends</em> (...<code>args</code>) =&gt; <code>Promise</code>&lt;<code>any</code>&gt; = <code>any</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><p>• <strong>Component</strong>: <code>FC</code>&lt;<code>TComponentProps</code>&gt;</p><p>• <strong>action</strong>: <code>TAction</code></p><p>• <strong>params?</strong>: <code>Parameters</code>&lt;<code>TAction</code>&gt;</p><p>• <strong>options?</strong></p><p>• <strong>options.error?</strong>: <code>ReactNode</code></p><p>• <strong>options.loading?</strong>: <code>ReactNode</code></p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>React.FC</code>&lt;<code>TComponentProps</code>&gt;</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-tsx line-numbers-mode" data-highlighter="prismjs" data-ext="tsx" data-title="tsx"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> withServerAction <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/nextjs/client&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> fetchData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./fetchData&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> Example <span class="token operator">=</span> <span class="token function">withServerAction</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> data <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line"> <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Data: </span><span class="token punctuation">{</span>data<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span> fetchData<span class="token punctuation">,</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17))])}const g=o(d,[["render",u],["__file","withServerAction.html.vue"]]),h=JSON.parse('{"path":"/doc/nextjs/functions/withServerAction.html","title":"Function: withServerAction()","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type Parameters","slug":"type-parameters","link":"#type-parameters","children":[]},{"level":2,"title":"Parameters","slug":"parameters","link":"#parameters","children":[]},{"level":2,"title":"Returns","slug":"returns","link":"#returns","children":[]},{"level":2,"title":"Example","slug":"example","link":"#example","children":[]}],"git":{"updatedTime":null},"filePathRelative":"doc/nextjs/functions/withServerAction.md"}');export{g as comp,h as data};
