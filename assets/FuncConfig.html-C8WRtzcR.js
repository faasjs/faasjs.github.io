import{_ as a,r as s,o as c,c as d,a as e,d as l,w as o,b as t,e as i}from"./app-QyD7034V.js";const r={},p=i('<h1 id="type-alias-funcconfig-tevent-tcontext-tresult" tabindex="-1"><a class="header-anchor" href="#type-alias-funcconfig-tevent-tcontext-tresult"><span>Type alias: FuncConfig&lt;TEvent, TContext, TResult&gt;</span></a></h1><blockquote><p><strong>FuncConfig</strong>&lt;<code>TEvent</code>, <code>TContext</code>, <code>TResult</code>&gt;: <code>Object</code></p></blockquote><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type parameters</span></a></h2><p>• <strong>TEvent</strong> = <code>any</code></p><p>• <strong>TContext</strong> = <code>any</code></p><p>• <strong>TResult</strong> = <code>any</code></p><h2 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration"><span>Type declaration</span></a></h2><h3 id="handler" tabindex="-1"><a class="header-anchor" href="#handler"><span>handler?</span></a></h3>',8),u=e("strong",null,[e("code",null,"optional")],-1),h=e("strong",null,"handler",-1),_=e("code",null,"Handler",-1),g=e("code",null,"TEvent",-1),f=e("code",null,"TContext",-1),y=e("code",null,"TResult",-1),T=e("h3",{id:"plugins",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#plugins"},[e("span",null,"plugins?")])],-1),m=e("strong",null,[e("code",null,"optional")],-1),x=e("strong",null,"plugins",-1),v=e("code",null,"Plugin",-1);function C(k,b){const n=s("RouteLink");return c(),d("div",null,[e("p",null,[l(n,{to:"/doc/test/"},{default:o(()=>[t("Documents")]),_:1}),t(" / "),l(n,{to:"/doc/test/"},{default:o(()=>[t("@faasjs/test")]),_:1}),t(" / FuncConfig")]),p,e("blockquote",null,[e("p",null,[u,t(),h,t(": "),l(n,{to:"/doc/test/type-aliases/Handler.html"},{default:o(()=>[_]),_:1}),t("<"),g,t(", "),f,t(", "),y,t(">")])]),T,e("blockquote",null,[e("p",null,[m,t(),x,t(": "),l(n,{to:"/doc/test/type-aliases/Plugin.html"},{default:o(()=>[v]),_:1}),t("[]")])])])}const R=a(r,[["render",C],["__file","FuncConfig.html.vue"]]),E=JSON.parse('{"path":"/doc/test/type-aliases/FuncConfig.html","title":"Type alias: FuncConfig<TEvent, TContext, TResult>","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type parameters","slug":"type-parameters","link":"#type-parameters","children":[]},{"level":2,"title":"Type declaration","slug":"type-declaration","link":"#type-declaration","children":[{"level":3,"title":"handler?","slug":"handler","link":"#handler","children":[]},{"level":3,"title":"plugins?","slug":"plugins","link":"#plugins","children":[]}]}],"git":{"updatedTime":null},"filePathRelative":"doc/test/type-aliases/FuncConfig.md"}');export{R as comp,E as data};
