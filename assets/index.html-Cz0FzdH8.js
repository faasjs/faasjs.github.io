import{_ as l,c as i,b as a,d as t,e as r,f as s,a as o,r as d,o as p}from"./app-BmXtVD7Y.js";const c={};function m(f,e){const n=d("RouteLink");return p(),i("div",null,[a("p",null,[t(n,{to:"/doc/"},{default:r(()=>e[0]||(e[0]=[s("Documents")])),_:1}),e[1]||(e[1]=s(" / @faasjs/deep_merge"))]),e[3]||(e[3]=o(`<h1 id="faasjs-deep-merge" tabindex="-1"><a class="header-anchor" href="#faasjs-deep-merge"><span>@faasjs/deep_merge</span></a></h1><p>A helper function to deep merge objects and array.</p><p><a href="https://github.com/faasjs/faasjs/blob/main/packages/deep_merge/LICENSE" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/npm/l/@faasjs/deep_merge.svg" alt="License: MIT"></a><a href="https://www.npmjs.com/package/@faasjs/deep_merge" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/npm/v/@faasjs/deep_merge.svg" alt="NPM Version"></a></p><h2 id="install" tabindex="-1"><a class="header-anchor" href="#install"><span>Install</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> @faasjs/deep_merge</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="functions" tabindex="-1"><a class="header-anchor" href="#functions"><span>Functions</span></a></h2>`,6)),a("ul",null,[a("li",null,[t(n,{to:"/doc/deep_merge/functions/deepMerge.html"},{default:r(()=>e[2]||(e[2]=[s("deepMerge")])),_:1})])])])}const h=l(c,[["render",m],["__file","index.html.vue"]]),u=JSON.parse('{"path":"/doc/deep_merge/","title":"@faasjs/deep_merge","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Install","slug":"install","link":"#install","children":[]},{"level":2,"title":"Functions","slug":"functions","link":"#functions","children":[]}],"git":{},"filePathRelative":"doc/deep_merge/README.md"}');export{h as comp,u as data};
