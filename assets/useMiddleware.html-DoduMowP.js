import{_ as o,c as p,b as s,a as r,d as l,e,w as t,r as i,o as d}from"./app-DnNaNEo7.js";const u={};function m(k,n){const a=i("RouteLink");return d(),p("div",null,[s("p",null,[l(a,{to:"/doc/server/"},{default:t(()=>n[0]||(n[0]=[e("Documents")])),_:1}),n[2]||(n[2]=e(" / ")),l(a,{to:"/doc/server/"},{default:t(()=>n[1]||(n[1]=[e("@faasjs/server")])),_:1}),n[3]||(n[3]=e(" / useMiddleware"))]),n[29]||(n[29]=s("h1",{id:"function-usemiddleware",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#function-usemiddleware"},[s("span",null,"Function: useMiddleware()")])],-1)),s("blockquote",null,[s("p",null,[n[5]||(n[5]=s("strong",null,"useMiddleware",-1)),n[6]||(n[6]=e("(")),n[7]||(n[7]=s("code",null,"handler",-1)),n[8]||(n[8]=e("): ")),n[9]||(n[9]=s("code",null,"Promise",-1)),n[10]||(n[10]=e("<")),n[11]||(n[11]=s("code",null,"Func",-1)),n[12]||(n[12]=e("<")),l(a,{to:"/doc/server/type-aliases/MiddlewareEvent.html"},{default:t(()=>n[4]||(n[4]=[s("code",null,"MiddlewareEvent",-1)])),_:1}),n[13]||(n[13]=e(", ")),n[14]||(n[14]=s("code",null,"any",-1)),n[15]||(n[15]=e(", ")),n[16]||(n[16]=s("code",null,"any",-1)),n[17]||(n[17]=e(">>"))])]),n[30]||(n[30]=s("p",null,"Apply a middleware function to handle incoming requests.",-1)),n[31]||(n[31]=s("h2",{id:"parameters",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#parameters"},[s("span",null,"Parameters")])],-1)),n[32]||(n[32]=s("h3",{id:"handler",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#handler"},[s("span",null,"handler")])],-1)),s("p",null,[l(a,{to:"/doc/server/type-aliases/Middleware.html"},{default:t(()=>n[18]||(n[18]=[s("code",null,"Middleware",-1)])),_:1})]),n[33]||(n[33]=s("p",null,"The middleware function to handle the request and response.",-1)),n[34]||(n[34]=s("h2",{id:"returns",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#returns"},[s("span",null,"Returns")])],-1)),s("p",null,[n[20]||(n[20]=s("code",null,"Promise",-1)),n[21]||(n[21]=e("<")),n[22]||(n[22]=s("code",null,"Func",-1)),n[23]||(n[23]=e("<")),l(a,{to:"/doc/server/type-aliases/MiddlewareEvent.html"},{default:t(()=>n[19]||(n[19]=[s("code",null,"MiddlewareEvent",-1)])),_:1}),n[24]||(n[24]=e(", ")),n[25]||(n[25]=s("code",null,"any",-1)),n[26]||(n[26]=e(", ")),n[27]||(n[27]=s("code",null,"any",-1)),n[28]||(n[28]=e(">>"))]),n[35]||(n[35]=r(`<p>A function that processes the event and applies the middleware.</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> useMiddleware <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/server&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> func <span class="token operator">=</span> <span class="token function">useMiddleware</span><span class="token punctuation">(</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> logger<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&#39;X-Hello&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;World&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  response<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&#39;Hello, World!&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;Hello, World!&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3))])}const f=o(u,[["render",m]]),w=JSON.parse('{"path":"/doc/server/functions/useMiddleware.html","title":"Function: useMiddleware()","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Parameters","slug":"parameters","link":"#parameters","children":[{"level":3,"title":"handler","slug":"handler","link":"#handler","children":[]}]},{"level":2,"title":"Returns","slug":"returns","link":"#returns","children":[]},{"level":2,"title":"Example","slug":"example","link":"#example","children":[]}],"git":{},"filePathRelative":"doc/server/functions/useMiddleware.md"}');export{f as comp,w as data};
