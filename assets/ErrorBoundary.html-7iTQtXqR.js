import{_ as s,c as l,b as r,a as t,d,e as o,w as a,r as c,o as i}from"./app-DnNaNEo7.js";const p={};function h(u,e){const n=c("RouteLink");return i(),l("div",null,[r("p",null,[d(n,{to:"/doc/react/"},{default:a(()=>e[0]||(e[0]=[o("Documents")])),_:1}),e[2]||(e[2]=o(" / ")),d(n,{to:"/doc/react/"},{default:a(()=>e[1]||(e[1]=[o("@faasjs/react")])),_:1}),e[3]||(e[3]=o(" / ErrorBoundary"))]),e[19]||(e[19]=r("h1",{id:"class-errorboundary",tabindex:"-1"},[r("a",{class:"header-anchor",href:"#class-errorboundary"},[r("span",null,"Class: ErrorBoundary")])],-1)),e[20]||(e[20]=r("h2",{id:"extends",tabindex:"-1"},[r("a",{class:"header-anchor",href:"#extends"},[r("span",null,"Extends")])],-1)),r("ul",null,[r("li",null,[e[5]||(e[5]=r("code",null,"Component",-1)),e[6]||(e[6]=o("<")),d(n,{to:"/doc/react/interfaces/ErrorBoundaryProps.html"},{default:a(()=>e[4]||(e[4]=[r("code",null,"ErrorBoundaryProps",-1)])),_:1}),e[7]||(e[7]=o(", { ")),e[8]||(e[8]=r("code",null,"error",-1)),e[9]||(e[9]=o(": ")),e[10]||(e[10]=r("code",null,"Error",-1)),e[11]||(e[11]=o("; ")),e[12]||(e[12]=r("code",null,"info",-1)),e[13]||(e[13]=o(": { ")),e[14]||(e[14]=r("code",null,"componentStack",-1)),e[15]||(e[15]=o(": ")),e[16]||(e[16]=r("code",null,"string",-1)),e[17]||(e[17]=o("; }; }>"))])]),e[21]||(e[21]=t('<h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor"><span>Constructor</span></a></h3><blockquote><p><strong>new ErrorBoundary</strong>(<code>props</code>): <code>ErrorBoundary</code></p></blockquote><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="props" tabindex="-1"><a class="header-anchor" href="#props"><span>props</span></a></h5>',5)),r("p",null,[d(n,{to:"/doc/react/interfaces/ErrorBoundaryProps.html"},{default:a(()=>e[18]||(e[18]=[r("code",null,"ErrorBoundaryProps",-1)])),_:1})]),e[22]||(e[22]=t('<h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>ErrorBoundary</code></p><h4 id="overrides" tabindex="-1"><a class="header-anchor" href="#overrides"><span>Overrides</span></a></h4><p><code>Component&lt; ErrorBoundaryProps, { error?: Error info?: { componentStack?: string } } &gt;.constructor</code></p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h2><h3 id="componentdidcatch" tabindex="-1"><a class="header-anchor" href="#componentdidcatch"><span>componentDidCatch()</span></a></h3><blockquote><p><strong>componentDidCatch</strong>(<code>error</code>, <code>info</code>): <code>void</code></p></blockquote><p>Catches exceptions generated in descendant components. Unhandled exceptions will cause the entire component tree to unmount.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><h5 id="error" tabindex="-1"><a class="header-anchor" href="#error"><span>error</span></a></h5><p><code>Error</code></p><h5 id="info" tabindex="-1"><a class="header-anchor" href="#info"><span>info</span></a></h5><p><code>any</code></p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>void</code></p><h4 id="overrides-1" tabindex="-1"><a class="header-anchor" href="#overrides-1"><span>Overrides</span></a></h4><p><code>Component.componentDidCatch</code></p><h3 id="render" tabindex="-1"><a class="header-anchor" href="#render"><span>render()</span></a></h3><blockquote><p><strong>render</strong>(): <code>string</code> | <code>number</code> | <code>bigint</code> | <code>boolean</code> | <code>Element</code> | <code>Iterable</code>&lt;<code>ReactNode</code>, <code>any</code>, <code>any</code>&gt; | <code>Promise</code>&lt;<code>AwaitedReactNode</code>&gt;</p></blockquote><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2"><span>Returns</span></a></h4><p><code>string</code> | <code>number</code> | <code>bigint</code> | <code>boolean</code> | <code>Element</code> | <code>Iterable</code>&lt;<code>ReactNode</code>, <code>any</code>, <code>any</code>&gt; | <code>Promise</code>&lt;<code>AwaitedReactNode</code>&gt;</p><h4 id="overrides-2" tabindex="-1"><a class="header-anchor" href="#overrides-2"><span>Overrides</span></a></h4><p><code>Component.render</code></p><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="displayname" tabindex="-1"><a class="header-anchor" href="#displayname"><span>displayName</span></a></h3><blockquote><p><code>static</code> <strong>displayName</strong>: <code>string</code> = <code>&#39;ErrorBoundary&#39;</code></p></blockquote><h3 id="whydidyourender" tabindex="-1"><a class="header-anchor" href="#whydidyourender"><span>whyDidYouRender</span></a></h3><blockquote><p><code>static</code> <strong>whyDidYouRender</strong>: <code>boolean</code> = <code>true</code></p></blockquote>',28))])}const b=s(p,[["render",h]]),f=JSON.parse('{"path":"/doc/react/classes/ErrorBoundary.html","title":"Class: ErrorBoundary","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Extends","slug":"extends","link":"#extends","children":[]},{"level":2,"title":"Constructors","slug":"constructors","link":"#constructors","children":[{"level":3,"title":"Constructor","slug":"constructor","link":"#constructor","children":[]}]},{"level":2,"title":"Methods","slug":"methods","link":"#methods","children":[{"level":3,"title":"componentDidCatch()","slug":"componentdidcatch","link":"#componentdidcatch","children":[]},{"level":3,"title":"render()","slug":"render","link":"#render","children":[]}]},{"level":2,"title":"Properties","slug":"properties","link":"#properties","children":[{"level":3,"title":"displayName","slug":"displayname","link":"#displayname","children":[]},{"level":3,"title":"whyDidYouRender","slug":"whydidyourender","link":"#whydidyourender","children":[]}]}],"git":{},"filePathRelative":"doc/react/classes/ErrorBoundary.md"}');export{b as comp,f as data};
