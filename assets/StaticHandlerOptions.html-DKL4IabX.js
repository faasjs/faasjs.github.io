import{_ as i,c as r,b as a,d as t,e as o,f as s,a as l,r as p,o as d}from"./app-Bie6IxQ1.js";const c={};function u(h,e){const n=p("RouteLink");return d(),r("div",null,[a("p",null,[t(n,{to:"/doc/server/"},{default:o(()=>e[0]||(e[0]=[s("Documents")])),_:1}),e[2]||(e[2]=s(" / ")),t(n,{to:"/doc/server/"},{default:o(()=>e[1]||(e[1]=[s("@faasjs/server")])),_:1}),e[3]||(e[3]=s(" / StaticHandlerOptions"))]),e[11]||(e[11]=l(`<h1 id="type-alias-statichandleroptions" tabindex="-1"><a class="header-anchor" href="#type-alias-statichandleroptions"><span>Type Alias: StaticHandlerOptions</span></a></h1><blockquote><p><strong>StaticHandlerOptions</strong>: <code>object</code></p></blockquote><h2 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration"><span>Type declaration</span></a></h2><h3 id="cache" tabindex="-1"><a class="header-anchor" href="#cache"><span>cache?</span></a></h3><blockquote><p><code>optional</code> <strong>cache</strong>: <code>boolean</code> | <code>string</code></p></blockquote><p>Cache static files. If set to <code>true</code>, the middleware will cache static files. If set to a string, the middleware will cache static files with the specified key. If set to <code>false</code>, the middleware will not cache static files.</p><h4 id="default" tabindex="-1"><a class="header-anchor" href="#default"><span>Default</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token boolean">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="notfound" tabindex="-1"><a class="header-anchor" href="#notfound"><span>notFound?</span></a></h3>`,9)),a("blockquote",null,[a("p",null,[e[5]||(e[5]=a("code",null,"optional",-1)),e[6]||(e[6]=s()),e[7]||(e[7]=a("strong",null,"notFound",-1)),e[8]||(e[8]=s(": ")),t(n,{to:"/doc/server/type-aliases/Middleware.html"},{default:o(()=>e[4]||(e[4]=[a("code",null,"Middleware",-1)])),_:1}),e[9]||(e[9]=s(" | ")),e[10]||(e[10]=a("code",null,"boolean",-1))])]),e[12]||(e[12]=l(`<p>Not found handler.</p><p>If set to <code>true</code>, the middleware will respond with a default 404 status code. If set to a function, the middleware will call the function with the request, response, and logger. If set to <code>false</code>, the middleware will do nothing.</p><h4 id="default-1" tabindex="-1"><a class="header-anchor" href="#default-1"><span>Default</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token boolean">false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="root" tabindex="-1"><a class="header-anchor" href="#root"><span>root</span></a></h3><blockquote><p><strong>root</strong>: <code>string</code></p></blockquote><h3 id="stripprefix" tabindex="-1"><a class="header-anchor" href="#stripprefix"><span>stripPrefix?</span></a></h3><blockquote><p><code>optional</code> <strong>stripPrefix</strong>: <code>string</code> | <code>RegExp</code></p></blockquote><p>Strip prefix from the URL.</p><h4 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> useMiddleware<span class="token punctuation">,</span> staticHandler <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/server&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">useMiddleware</span><span class="token punctuation">(</span><span class="token function">staticHandler</span><span class="token punctuation">(</span><span class="token punctuation">{</span> root<span class="token operator">:</span> __dirname <span class="token operator">+</span> <span class="token string">&#39;/public&#39;</span><span class="token punctuation">,</span> stripPrefix<span class="token operator">:</span> <span class="token string">&#39;/public&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// /public/index.html -&gt; /index.html</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11))])}const m=i(c,[["render",u],["__file","StaticHandlerOptions.html.vue"]]),k=JSON.parse('{"path":"/doc/server/type-aliases/StaticHandlerOptions.html","title":"Type Alias: StaticHandlerOptions","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type declaration","slug":"type-declaration","link":"#type-declaration","children":[{"level":3,"title":"cache?","slug":"cache","link":"#cache","children":[]},{"level":3,"title":"notFound?","slug":"notfound","link":"#notfound","children":[]},{"level":3,"title":"root","slug":"root","link":"#root","children":[]},{"level":3,"title":"stripPrefix?","slug":"stripprefix","link":"#stripprefix","children":[]}]}],"git":{},"filePathRelative":"doc/server/type-aliases/StaticHandlerOptions.md"}');export{m as comp,k as data};
