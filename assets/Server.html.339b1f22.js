import{_ as n,r as d,o as c,a as l,b as e,d as a,w as r,F as i,c as o,e as t}from"./app.94778bae.js";const h={},p=o(`<h1 id="class-server" tabindex="-1"><a class="header-anchor" href="#class-server" aria-hidden="true">#</a> Class: Server</h1><p>FaasJS Server.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> server <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Server</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
 port<span class="token operator">:</span> <span class="token number">8080</span><span class="token punctuation">,</span>
 cache<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of contents</h2><h3 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors" aria-hidden="true">#</a> Constructors</h3>`,5),u=t("constructor"),g=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),f=t("logger"),b=t("opts"),x=t("root"),y=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),m=t("close"),_=t("listen"),v=t("processRequest"),k=o('<h2 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>\u2022 <strong>new Server</strong>(<code>root</code>, <code>opts?</code>)</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>root</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Project path</td></tr><tr><td style="text-align:left;"><code>opts?</code></td><td style="text-align:left;"><code>Object</code></td><td style="text-align:left;">Options</td></tr><tr><td style="text-align:left;"><code>opts.cache?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Enable cache, default is false</td></tr><tr><td style="text-align:left;"><code>opts.port?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">Port, default is 3000</td></tr></tbody></table><h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="logger" tabindex="-1"><a class="header-anchor" href="#logger" aria-hidden="true">#</a> logger</h3><p>\u2022 <code>Readonly</code> <strong>logger</strong>: <code>Logger</code></p><hr><h3 id="opts" tabindex="-1"><a class="header-anchor" href="#opts" aria-hidden="true">#</a> opts</h3><p>\u2022 <code>Readonly</code> <strong>opts</strong>: <code>Object</code></p><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>cache</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>port</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><hr><h3 id="root" tabindex="-1"><a class="header-anchor" href="#root" aria-hidden="true">#</a> root</h3><p>\u2022 <code>Readonly</code> <strong>root</strong>: <code>string</code></p><h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="close" tabindex="-1"><a class="header-anchor" href="#close" aria-hidden="true">#</a> close</h3><p>\u25B8 <strong>close</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><hr><h3 id="listen" tabindex="-1"><a class="header-anchor" href="#listen" aria-hidden="true">#</a> listen</h3><p>\u25B8 <strong>listen</strong>(): <code>Server</code></p><p>Start server.</p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code>Server</code></p><hr><h3 id="processrequest" tabindex="-1"><a class="header-anchor" href="#processrequest" aria-hidden="true">#</a> processRequest</h3><p>\u25B8 <strong>processRequest</strong>(<code>req</code>, <code>res</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>req</code></td><td style="text-align:left;"><code>IncomingMessage</code></td></tr><tr><td style="text-align:left;"><code>res</code></td><td style="text-align:left;"><code>Object</code></td></tr><tr><td style="text-align:left;"><code>res.statusCode</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>res.end</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>res.setHeader</code></td><td style="text-align:left;">(<code>key</code>: <code>string</code>, <code>value</code>: <code>string</code>) =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>res.write</code></td><td style="text-align:left;">(<code>body</code>: <code>string</code> | <code>Buffer</code>) =&gt; <code>void</code></td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p>',34);function S(R,P){const s=d("RouterLink");return c(),l(i,null,[p,e("ul",null,[e("li",null,[a(s,{to:"/doc/server/classes/Server.html#constructor"},{default:r(()=>[u]),_:1})])]),g,e("ul",null,[e("li",null,[a(s,{to:"/doc/server/classes/Server.html#logger"},{default:r(()=>[f]),_:1})]),e("li",null,[a(s,{to:"/doc/server/classes/Server.html#opts"},{default:r(()=>[b]),_:1})]),e("li",null,[a(s,{to:"/doc/server/classes/Server.html#root"},{default:r(()=>[x]),_:1})])]),y,e("ul",null,[e("li",null,[a(s,{to:"/doc/server/classes/Server.html#close"},{default:r(()=>[m]),_:1})]),e("li",null,[a(s,{to:"/doc/server/classes/Server.html#listen"},{default:r(()=>[_]),_:1})]),e("li",null,[a(s,{to:"/doc/server/classes/Server.html#processrequest"},{default:r(()=>[v]),_:1})])]),k],64)}var w=n(h,[["render",S],["__file","Server.html.vue"]]);export{w as default};
