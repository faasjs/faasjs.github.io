import{_ as l,c as r,b as t,a as s,d as n,e as d,f as o,r as i,o as p}from"./app-Bw9YHrmw.js";const c={};function u(h,e){const a=i("RouteLink");return p(),r("div",null,[t("p",null,[n(a,{to:"/doc/test/"},{default:o(()=>e[0]||(e[0]=[d("Documents")])),_:1}),e[2]||(e[2]=d(" / ")),n(a,{to:"/doc/test/"},{default:o(()=>e[1]||(e[1]=[d("@faasjs/test")])),_:1}),e[3]||(e[3]=d(" / Plugin"))]),e[8]||(e[8]=s('<h1 id="type-alias-plugin" tabindex="-1"><a class="header-anchor" href="#type-alias-plugin"><span>Type Alias: Plugin</span></a></h1><blockquote><p><strong>Plugin</strong>: <code>object</code></p></blockquote><h2 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration"><span>Type declaration</span></a></h2><h2 id="index-signature" tabindex="-1"><a class="header-anchor" href="#index-signature"><span>Index Signature</span></a></h2><p>[<code>key</code>: <code>string</code>]: <code>any</code></p><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span>name</span></a></h3><blockquote><p><code>readonly</code> <strong>name</strong>: <code>string</code></p></blockquote><h3 id="oninvoke" tabindex="-1"><a class="header-anchor" href="#oninvoke"><span>onInvoke()?</span></a></h3><blockquote><p><code>optional</code> <strong>onInvoke</strong>: (<code>data</code>, <code>next</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="data" tabindex="-1"><a class="header-anchor" href="#data"><span>data</span></a></h5>',11)),t("p",null,[n(a,{to:"/doc/test/type-aliases/InvokeData.html"},{default:o(()=>e[4]||(e[4]=[t("code",null,"InvokeData",-1)])),_:1})]),e[9]||(e[9]=t("h5",{id:"next",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#next"},[t("span",null,"next")])],-1)),t("p",null,[n(a,{to:"/doc/test/type-aliases/Next.html"},{default:o(()=>e[5]||(e[5]=[t("code",null,"Next",-1)])),_:1})]),e[10]||(e[10]=s('<h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h3 id="onmount" tabindex="-1"><a class="header-anchor" href="#onmount"><span>onMount()?</span></a></h3><blockquote><p><code>optional</code> <strong>onMount</strong>: (<code>data</code>, <code>next</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><h5 id="data-1" tabindex="-1"><a class="header-anchor" href="#data-1"><span>data</span></a></h5>',6)),t("p",null,[n(a,{to:"/doc/test/type-aliases/MountData.html"},{default:o(()=>e[6]||(e[6]=[t("code",null,"MountData",-1)])),_:1})]),e[11]||(e[11]=t("h5",{id:"next-1",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#next-1"},[t("span",null,"next")])],-1)),t("p",null,[n(a,{to:"/doc/test/type-aliases/Next.html"},{default:o(()=>e[7]||(e[7]=[t("code",null,"Next",-1)])),_:1})]),e[12]||(e[12]=s('<h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h3 id="type" tabindex="-1"><a class="header-anchor" href="#type"><span>type</span></a></h3><blockquote><p><code>readonly</code> <strong>type</strong>: <code>string</code></p></blockquote>',4))])}const m=l(c,[["render",u],["__file","Plugin.html.vue"]]),x=JSON.parse('{"path":"/doc/test/type-aliases/Plugin.html","title":"Type Alias: Plugin","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type declaration","slug":"type-declaration","link":"#type-declaration","children":[]},{"level":2,"title":"Index Signature","slug":"index-signature","link":"#index-signature","children":[{"level":3,"title":"name","slug":"name","link":"#name","children":[]},{"level":3,"title":"onInvoke()?","slug":"oninvoke","link":"#oninvoke","children":[]},{"level":3,"title":"onMount()?","slug":"onmount","link":"#onmount","children":[]},{"level":3,"title":"type","slug":"type","link":"#type","children":[]}]}],"git":{},"filePathRelative":"doc/test/type-aliases/Plugin.md"}');export{m as comp,x as data};
