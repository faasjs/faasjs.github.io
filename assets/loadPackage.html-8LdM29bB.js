import{_ as o,c as l,b as r,a as d,d as s,e as a,w as t,r as p,o as c}from"./app-B4hOYmml.js";const i={};function h(u,e){const n=p("RouteLink");return c(),l("div",null,[r("p",null,[s(n,{to:"/doc/load/"},{default:t(()=>e[0]||(e[0]=[a("Documents")])),_:1}),e[2]||(e[2]=a(" / ")),s(n,{to:"/doc/load/"},{default:t(()=>e[1]||(e[1]=[a("@faasjs/load")])),_:1}),e[3]||(e[3]=a(" / loadPackage"))]),e[4]||(e[4]=d(`<h1 id="function-loadpackage" tabindex="-1"><a class="header-anchor" href="#function-loadpackage"><span>Function: loadPackage()</span></a></h1><blockquote><p><strong>loadPackage</strong>&lt;<code>T</code>&gt;(<code>name</code>, <code>defaultNames</code>): <code>Promise</code>&lt;<code>T</code>&gt;</p></blockquote><p>Asynchronously loads a package by its name, supporting both ESM and CommonJS runtimes.</p><p>Also supports loading TypeScript and TSX files by checking for the presence of the &quot;tsx&quot; package.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="t" tabindex="-1"><a class="header-anchor" href="#t"><span>T</span></a></h3><p><code>T</code> = <code>unknown</code></p><p>The type of the module to be loaded.</p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span>name</span></a></h3><p><code>string</code></p><p>The name of the package to load.</p><h3 id="defaultnames" tabindex="-1"><a class="header-anchor" href="#defaultnames"><span>defaultNames</span></a></h3><p><code>string</code> | <code>string</code>[]</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>Promise</code>&lt;<code>T</code>&gt;</p><p>A promise that resolves to the loaded module.</p><h2 id="throws" tabindex="-1"><a class="header-anchor" href="#throws"><span>Throws</span></a></h2><p>If the runtime is unknown.</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">const</span> myModule <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token generic-function"><span class="token function">loadPackage</span><span class="token generic class-name"><span class="token operator">&lt;</span>MyModuleType<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;my-module&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,21))])}const k=o(i,[["render",h]]),g=JSON.parse('{"path":"/doc/load/functions/loadPackage.html","title":"Function: loadPackage()","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type Parameters","slug":"type-parameters","link":"#type-parameters","children":[{"level":3,"title":"T","slug":"t","link":"#t","children":[]}]},{"level":2,"title":"Parameters","slug":"parameters","link":"#parameters","children":[{"level":3,"title":"name","slug":"name","link":"#name","children":[]},{"level":3,"title":"defaultNames","slug":"defaultnames","link":"#defaultnames","children":[]}]},{"level":2,"title":"Returns","slug":"returns","link":"#returns","children":[]},{"level":2,"title":"Throws","slug":"throws","link":"#throws","children":[]},{"level":2,"title":"Example","slug":"example","link":"#example","children":[]}],"git":{},"filePathRelative":"doc/load/functions/loadPackage.md"}');export{k as comp,g as data};
