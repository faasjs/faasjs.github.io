import{_ as i,c as o,b as n,a as p,d as e,e as t,w as l,r as u,o as d}from"./app-BPrqtApC.js";const r={};function c(f,s){const a=u("RouteLink");return d(),o("div",null,[n("p",null,[e(a,{to:"/doc/"},{default:l(()=>s[0]||(s[0]=[t("Documents")])),_:1}),s[1]||(s[1]=t(" / @faasjs/test"))]),s[20]||(s[20]=p(`<h1 id="faasjs-test" tabindex="-1"><a class="header-anchor" href="#faasjs-test"><span>@faasjs/test</span></a></h1><p>FaasJS&#39;s testing module.</p><p><a href="https://github.com/faasjs/faasjs/blob/main/packages/test/LICENSE" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/npm/l/@faasjs/test.svg" alt="License: MIT"></a><a href="https://www.npmjs.com/package/@faasjs/test" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/npm/v/@faasjs/test.svg" alt="NPM Version"></a></p><h2 id="install" tabindex="-1"><a class="header-anchor" href="#install"><span>Install</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> @faasjs/test</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> test <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@faasjs/test&#39;</span></span>
<span class="line"><span class="token keyword">import</span> Func <span class="token keyword">from</span> <span class="token string">&#39;../demo.func.ts&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> func <span class="token operator">=</span> <span class="token function">test</span><span class="token punctuation">(</span>Func<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token function">expect</span><span class="token punctuation">(</span><span class="token keyword">await</span> func<span class="token punctuation">.</span><span class="token function">handler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span><span class="token string">&#39;Hello, world&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="functions" tabindex="-1"><a class="header-anchor" href="#functions"><span>Functions</span></a></h2>`,8)),n("ul",null,[n("li",null,[e(a,{to:"/doc/test/functions/nameFunc.html"},{default:l(()=>s[2]||(s[2]=[t("nameFunc")])),_:1})]),n("li",null,[e(a,{to:"/doc/test/functions/test.html"},{default:l(()=>s[3]||(s[3]=[t("test")])),_:1})]),n("li",null,[e(a,{to:"/doc/test/functions/useFunc.html"},{default:l(()=>s[4]||(s[4]=[t("useFunc")])),_:1})]),n("li",null,[e(a,{to:"/doc/test/functions/usePlugin.html"},{default:l(()=>s[5]||(s[5]=[t("usePlugin")])),_:1})])]),s[21]||(s[21]=n("h2",{id:"classes",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#classes"},[n("span",null,"Classes")])],-1)),n("ul",null,[n("li",null,[e(a,{to:"/doc/test/classes/Func.html"},{default:l(()=>s[6]||(s[6]=[t("Func")])),_:1})]),n("li",null,[e(a,{to:"/doc/test/classes/FuncWarper.html"},{default:l(()=>s[7]||(s[7]=[t("FuncWarper")])),_:1})])]),s[22]||(s[22]=n("h2",{id:"type-aliases",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#type-aliases"},[n("span",null,"Type Aliases")])],-1)),n("ul",null,[n("li",null,[e(a,{to:"/doc/test/type-aliases/Config.html"},{default:l(()=>s[8]||(s[8]=[t("Config")])),_:1})]),n("li",null,[e(a,{to:"/doc/test/type-aliases/ExportedHandler.html"},{default:l(()=>s[9]||(s[9]=[t("ExportedHandler")])),_:1})]),n("li",null,[e(a,{to:"/doc/test/type-aliases/FuncConfig.html"},{default:l(()=>s[10]||(s[10]=[t("FuncConfig")])),_:1})]),n("li",null,[e(a,{to:"/doc/test/type-aliases/FuncEventType.html"},{default:l(()=>s[11]||(s[11]=[t("FuncEventType")])),_:1})]),n("li",null,[e(a,{to:"/doc/test/type-aliases/FuncReturnType.html"},{default:l(()=>s[12]||(s[12]=[t("FuncReturnType")])),_:1})]),n("li",null,[e(a,{to:"/doc/test/type-aliases/Handler.html"},{default:l(()=>s[13]||(s[13]=[t("Handler")])),_:1})]),n("li",null,[e(a,{to:"/doc/test/type-aliases/InvokeData.html"},{default:l(()=>s[14]||(s[14]=[t("InvokeData")])),_:1})]),n("li",null,[e(a,{to:"/doc/test/type-aliases/LifeCycleKey.html"},{default:l(()=>s[15]||(s[15]=[t("LifeCycleKey")])),_:1})]),n("li",null,[e(a,{to:"/doc/test/type-aliases/MountData.html"},{default:l(()=>s[16]||(s[16]=[t("MountData")])),_:1})]),n("li",null,[e(a,{to:"/doc/test/type-aliases/Next.html"},{default:l(()=>s[17]||(s[17]=[t("Next")])),_:1})]),n("li",null,[e(a,{to:"/doc/test/type-aliases/Plugin.html"},{default:l(()=>s[18]||(s[18]=[t("Plugin")])),_:1})]),n("li",null,[e(a,{to:"/doc/test/type-aliases/UseifyPlugin.html"},{default:l(()=>s[19]||(s[19]=[t("UseifyPlugin")])),_:1})])])])}const k=i(r,[["render",c]]),g=JSON.parse('{"path":"/doc/test/","title":"@faasjs/test","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Install","slug":"install","link":"#install","children":[]},{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":2,"title":"Functions","slug":"functions","link":"#functions","children":[]},{"level":2,"title":"Classes","slug":"classes","link":"#classes","children":[]},{"level":2,"title":"Type Aliases","slug":"type-aliases","link":"#type-aliases","children":[]}],"git":{},"filePathRelative":"doc/test/README.md"}');export{k as comp,g as data};
