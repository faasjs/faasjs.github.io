import{_ as c,c as s,b as e,d as a,e as i,f as t,a as d,r,o as l}from"./app-DnZxm-6m.js";const p={};function g(u,o){const n=r("RouteLink");return l(),s("div",null,[e("p",null,[a(n,{to:"/doc/http/"},{default:i(()=>o[0]||(o[0]=[t("Documents")])),_:1}),o[2]||(o[2]=t(" / ")),a(n,{to:"/doc/http/"},{default:i(()=>o[1]||(o[1]=[t("@faasjs/http")])),_:1}),o[3]||(o[3]=t(" / HttpConfig"))]),o[9]||(o[9]=d('<h1 id="type-alias-httpconfig" tabindex="-1"><a class="header-anchor" href="#type-alias-httpconfig"><span>Type Alias: HttpConfig</span></a></h1><blockquote><p><strong>HttpConfig</strong>: <code>object</code></p></blockquote><h2 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration"><span>Type declaration</span></a></h2><h2 id="index-signature" tabindex="-1"><a class="header-anchor" href="#index-signature"><span>Index Signature</span></a></h2><p>[<code>key</code>: <code>string</code>]: <code>any</code></p><h3 id="config" tabindex="-1"><a class="header-anchor" href="#config"><span>config?</span></a></h3><blockquote><p><code>optional</code> <strong>config</strong>: <code>object</code></p></blockquote><h4 id="index-signature-1" tabindex="-1"><a class="header-anchor" href="#index-signature-1"><span>Index Signature</span></a></h4><p>[<code>key</code>: <code>string</code>]: <code>any</code></p><h4 id="config-cookie" tabindex="-1"><a class="header-anchor" href="#config-cookie"><span>config.cookie?</span></a></h4>',10)),e("blockquote",null,[e("p",null,[o[5]||(o[5]=e("code",null,"optional",-1)),o[6]||(o[6]=t()),o[7]||(o[7]=e("strong",null,"cookie",-1)),o[8]||(o[8]=t(": ")),a(n,{to:"/doc/http/type-aliases/CookieOptions.html"},{default:i(()=>o[4]||(o[4]=[e("code",null,"CookieOptions",-1)])),_:1})])]),o[10]||(o[10]=d('<h4 id="config-functionname" tabindex="-1"><a class="header-anchor" href="#config-functionname"><span>config.functionName?</span></a></h4><blockquote><p><code>optional</code> <strong>functionName</strong>: <code>string</code></p></blockquote><h4 id="config-ignorepathprefix" tabindex="-1"><a class="header-anchor" href="#config-ignorepathprefix"><span>config.ignorePathPrefix?</span></a></h4><blockquote><p><code>optional</code> <strong>ignorePathPrefix</strong>: <code>string</code></p></blockquote><h4 id="config-method" tabindex="-1"><a class="header-anchor" href="#config-method"><span>config.method?</span></a></h4><blockquote><p><code>optional</code> <strong>method</strong>: <code>&quot;BEGIN&quot;</code> | <code>&quot;GET&quot;</code> | <code>&quot;POST&quot;</code> | <code>&quot;DELETE&quot;</code> | <code>&quot;HEAD&quot;</code> | <code>&quot;PUT&quot;</code> | <code>&quot;OPTIONS&quot;</code> | <code>&quot;TRACE&quot;</code> | <code>&quot;PATCH&quot;</code> | <code>&quot;ANY&quot;</code></p></blockquote><p>POST as default</p><h4 id="config-path" tabindex="-1"><a class="header-anchor" href="#config-path"><span>config.path?</span></a></h4><blockquote><p><code>optional</code> <strong>path</strong>: <code>string</code></p></blockquote><p>file relative path as default</p><h4 id="config-timeout" tabindex="-1"><a class="header-anchor" href="#config-timeout"><span>config.timeout?</span></a></h4><blockquote><p><code>optional</code> <strong>timeout</strong>: <code>number</code></p></blockquote><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span>name?</span></a></h3><blockquote><p><code>optional</code> <strong>name</strong>: <code>string</code></p></blockquote>',14))])}const f=c(p,[["render",g],["__file","HttpConfig.html.vue"]]),q=JSON.parse('{"path":"/doc/http/type-aliases/HttpConfig.html","title":"Type Alias: HttpConfig","lang":"en","frontmatter":{},"headers":[{"level":2,"title":"Type declaration","slug":"type-declaration","link":"#type-declaration","children":[]},{"level":2,"title":"Index Signature","slug":"index-signature","link":"#index-signature","children":[{"level":3,"title":"config?","slug":"config","link":"#config","children":[]},{"level":3,"title":"name?","slug":"name","link":"#name","children":[]}]}],"git":{},"filePathRelative":"doc/http/type-aliases/HttpConfig.md"}');export{f as comp,q as data};
